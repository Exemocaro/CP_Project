 Percent |	Source code & Disassembly of MDpar.exe for cycles (7795 samples, percent: local period)
-------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002ba0 <computeAccelerations()>:
         : 6    computeAccelerations():
    0.00 :   2ba0:   endbr64
    0.00 :   2ba4:   push   %rbp
    0.00 :   2ba5:   mov    %rsp,%rbp
    0.00 :   2ba8:   push   %r15
    0.00 :   2baa:   push   %r14
    0.00 :   2bac:   push   %r13
    0.00 :   2bae:   push   %r12
    0.00 :   2bb0:   push   %rbx
    0.00 :   2bb1:   and    $0xffffffffffffffe0,%rsp
    0.00 :   2bb5:   lea    -0x1d000(%rsp),%r11
    0.00 :   2bbd:   sub    $0x1000,%rsp
    0.00 :   2bc4:   orq    $0x0,(%rsp)
    0.00 :   2bc9:   cmp    %r11,%rsp
    0.00 :   2bcc:   jne    2bbd <computeAccelerations()+0x1d>
    0.00 :   2bce:   sub    $0x4e0,%rsp
    0.00 :   2bd5:   call   *0x640d(%rip)        # 8fe8 <mcount@GLIBC_2.2.5>
    0.00 :   2bdb:   xor    %r13d,%r13d
    0.00 :   2bde:   lea    0x5e333(%rip),%rbx        # 60f18 <r+0x18>
    0.00 :   2be5:   add    $0x3,%r13d
    0.00 :   2be9:   vmovapd 0x404f(%rip),%ymm12        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   2bf1:   vmovapd 0x4067(%rip),%ymm11        # 6c60 <_IO_stdin_used+0xc60>
    0.00 :   2bf9:   mov    %fs:0x28,%rax
    0.00 :   2c02:   mov    %rax,0x1d4d8(%rsp)
    0.00 :   2c0a:   xor    %eax,%eax
    0.00 :   2c0c:   vmovapd 0x406c(%rip),%ymm10        # 6c80 <_IO_stdin_used+0xc80>
    0.00 :   2c14:   lea    0x2397d(%rip),%r10        # 26598 <a+0x18>
    0.00 :   2c1b:   lea    0x28(%rsp),%r15
    0.00 :   2c20:   mov    $0x194c,%r14d
    0.00 :   2c26:   xor    %edi,%edi
    0.00 :   2c28:   lea    -0x18(%rbx),%r12
    0.00 :   2c2c:   cmp    $0x1950,%r13d
    0.00 :   2c33:   je     3152 <computeAccelerations()+0x5b2>
    0.00 :   2c39:   nopl   0x0(%rax)
    0.00 :   2c40:   mov    $0xaaaaaaab,%eax
    0.00 :   2c45:   mov    %r14d,%esi
    0.00 :   2c48:   imul   %rax,%rsi
    0.03 :   2c4c:   vmovupd -0x18(%rbx),%xmm5
    0.02 :   2c51:   vmovsd -0x8(%rbx),%xmm6
    0.00 :   2c56:   mov    %rsi,%rax
    0.00 :   2c59:   shr    $0x21,%rsi
    0.00 :   2c5d:   vmovupd -0x18(%r10),%xmm3
    0.00 :   2c63:   vmovsd -0x8(%r10),%xmm4
    0.00 :   2c69:   vunpckhpd %xmm5,%xmm5,%xmm7
    0.00 :   2c6d:   shr    $0x20,%rax
    0.00 :   2c71:   lea    0x1(%rsi),%r9d
    0.00 :   2c75:   cmp    $0xb,%r14d
    0.00 :   2c79:   jbe    31a1 <computeAccelerations()+0x601>
    0.00 :   2c7f:   shr    $0x3,%eax
    0.00 :   2c82:   dec    %eax
    0.00 :   2c84:   lea    (%rax,%rax,2),%rax
    0.00 :   2c88:   shl    $0x5,%rax
    0.00 :   2c8c:   lea    0x60(%rbx,%rax,1),%rcx
    0.00 :   2c91:   vbroadcastsd %xmm5,%ymm8
    0.00 :   2c96:   vbroadcastsd %xmm7,%ymm7
    0.00 :   2c9b:   vbroadcastsd %xmm6,%ymm9
    0.01 :   2ca0:   mov    %r15,%rdx
    0.00 :   2ca3:   mov    %rbx,%rax
    0.00 :   2ca6:   vmovsd %xmm4,%xmm4,%xmm15
    0.00 :   2caa:   nopw   0x0(%rax,%rax,1)
    1.41 :   2cb0:   vmovupd (%rax),%ymm0
    0.27 :   2cb4:   vmovupd 0x20(%rax),%ymm4
    0.22 :   2cb9:   vmovupd 0x40(%rax),%ymm13
    0.00 :   2cbe:   vperm2f128 $0x30,%ymm4,%ymm0,%ymm2
    1.42 :   2cc4:   vpermpd $0x4e,%ymm0,%ymm1
    0.05 :   2cca:   vshufpd $0x2,%ymm1,%ymm2,%ymm1
    0.18 :   2ccf:   vperm2f128 $0x21,%ymm13,%ymm1,%ymm14
    0.14 :   2cd5:   vblendpd $0x8,%ymm14,%ymm1,%ymm1
    1.36 :   2cdb:   vperm2f128 $0x2,%ymm4,%ymm0,%ymm14
    0.04 :   2ce1:   vshufpd $0x5,%ymm14,%ymm2,%ymm2
    0.08 :   2ce7:   vpermilpd $0x2,%ymm13,%ymm14
    0.09 :   2ced:   vblendpd $0x8,%ymm14,%ymm2,%ymm2
    1.34 :   2cf3:   vsubpd %ymm2,%ymm7,%ymm2
    0.03 :   2cf7:   vpalignr $0x8,%ymm4,%ymm0,%ymm0
    0.14 :   2cfd:   vpermpd $0x53,%ymm0,%ymm0
    0.06 :   2d03:   vinsertf128 $0x1,%xmm13,%ymm0,%ymm0
    1.80 :   2d09:   vblendpd $0x7,%ymm0,%ymm13,%ymm13
    0.19 :   2d0f:   vmulpd %ymm2,%ymm2,%ymm0
    0.01 :   2d13:   vsubpd %ymm1,%ymm8,%ymm1
    0.71 :   2d17:   vsubpd %ymm13,%ymm9,%ymm13
    1.02 :   2d1c:   add    $0x60,%rax
    0.19 :   2d20:   add    $0x60,%rdx
    1.18 :   2d24:   vfmadd231pd %ymm1,%ymm1,%ymm0
    2.92 :   2d29:   vfmadd231pd %ymm13,%ymm13,%ymm0
   11.67 :   2d2e:   vdivpd %ymm0,%ymm12,%ymm0
    2.71 :   2d32:   vmulpd %ymm0,%ymm0,%ymm4
    3.25 :   2d36:   vmulpd %ymm4,%ymm4,%ymm14
    0.19 :   2d3a:   vmulpd %ymm4,%ymm0,%ymm0
    4.29 :   2d3e:   vmulpd %ymm14,%ymm0,%ymm0
    0.14 :   2d43:   vmulpd %ymm11,%ymm14,%ymm14
    3.28 :   2d48:   vfmsub132pd %ymm10,%ymm14,%ymm0
    3.82 :   2d4d:   vmulpd %ymm0,%ymm1,%ymm1
    1.14 :   2d51:   vmulpd %ymm0,%ymm2,%ymm14
    0.60 :   2d55:   vmulpd %ymm0,%ymm13,%ymm0
    1.96 :   2d59:   vinsertf128 $0x1,%xmm14,%ymm1,%ymm2
    2.09 :   2d5f:   vpermpd $0x48,%ymm2,%ymm2
    3.67 :   2d65:   vperm2f128 $0x21,%ymm0,%ymm2,%ymm4
    3.41 :   2d6b:   vblendpd $0x4,%ymm4,%ymm2,%ymm2
    0.37 :   2d71:   vmovupd %ymm2,-0x60(%rdx)
    0.01 :   2d76:   vinsertf128 $0x0,%xmm1,%ymm14,%ymm4
    0.63 :   2d7c:   vperm2f128 $0x30,%ymm1,%ymm14,%ymm2
    0.90 :   2d82:   vshufpd $0x1,%ymm4,%ymm2,%ymm2
    0.58 :   2d87:   vblendpd $0x2,%ymm0,%ymm2,%ymm2
    0.01 :   2d8d:   vperm2f128 $0x30,%ymm14,%ymm1,%ymm13
    0.64 :   2d93:   vpermpd $0xee,%ymm0,%ymm4
    1.37 :   2d99:   vmovupd %ymm2,-0x40(%rdx)
    0.66 :   2d9e:   vpermpd $0x4e,%ymm1,%ymm2
    0.00 :   2da4:   vshufpd $0x6,%ymm2,%ymm13,%ymm2
    1.75 :   2da9:   vblendpd $0x9,%ymm4,%ymm2,%ymm2
    0.43 :   2daf:   vmovupd %ymm2,-0x20(%rdx)
    0.21 :   2db4:   vpermilpd $0x8,%ymm14,%ymm2
    0.33 :   2dba:   vblendpd $0x2,%ymm2,%ymm1,%ymm2
    2.22 :   2dc0:   vaddpd %xmm3,%xmm2,%xmm2
    0.03 :   2dc4:   vshufpd $0xb,%ymm14,%ymm13,%ymm13
    0.04 :   2dca:   vperm2f128 $0x31,%ymm14,%ymm1,%ymm1
    4.64 :   2dd0:   vaddpd %xmm13,%xmm2,%xmm2
    0.45 :   2dd5:   vpermpd $0xe8,%ymm1,%ymm3
    0.00 :   2ddb:   vaddsd %xmm0,%xmm15,%xmm4
    4.03 :   2ddf:   vaddpd %xmm3,%xmm2,%xmm2
    0.06 :   2de3:   vpermpd $0xed,%ymm1,%ymm1
    5.52 :   2de9:   vaddpd %xmm1,%xmm2,%xmm3
    0.03 :   2ded:   vunpckhpd %xmm0,%xmm0,%xmm1
    0.01 :   2df1:   vaddsd %xmm1,%xmm4,%xmm4
    0.00 :   2df5:   vextractf128 $0x1,%ymm0,%xmm0
    1.56 :   2dfb:   vaddsd %xmm0,%xmm4,%xmm4
    0.00 :   2dff:   vunpckhpd %xmm0,%xmm0,%xmm0
    0.28 :   2e03:   vaddsd %xmm0,%xmm4,%xmm15
    0.00 :   2e07:   cmp    %rax,%rcx
    0.00 :   2e0a:   jne    2cb0 <computeAccelerations()+0x110>
    0.00 :   2e10:   mov    %esi,%eax
    0.00 :   2e12:   and    $0xfffffffc,%eax
    0.01 :   2e15:   lea    (%rax,%rax,2),%edx
    0.00 :   2e18:   vmovsd %xmm15,%xmm15,%xmm4
    0.00 :   2e1c:   add    %r13d,%edx
    0.00 :   2e1f:   mov    %esi,%r8d
    0.00 :   2e22:   sub    %eax,%r8d
    0.00 :   2e25:   cmp    $0x1,%r8d
    0.00 :   2e29:   jbe    3193 <computeAccelerations()+0x5f3>
    0.00 :   2e2f:   add    $0x3,%rdi
    0.00 :   2e33:   lea    (%rax,%rax,2),%rax
    0.00 :   2e37:   add    %rdi,%rax
    0.00 :   2e3a:   shl    $0x3,%rax
    0.00 :   2e3e:   lea    (%r12,%rax,1),%r11
    0.00 :   2e42:   vmovupd (%r11),%xmm9
    0.00 :   2e47:   vmovupd 0x10(%r11),%xmm8
    0.00 :   2e4d:   vmovupd 0x20(%r11),%xmm0
    0.00 :   2e53:   vmovsd %xmm9,%xmm8,%xmm1
    0.00 :   2e57:   vpermilpd $0x0,%xmm5,%xmm2
    0.05 :   2e5d:   vsubpd %xmm1,%xmm2,%xmm2
    0.00 :   2e61:   vpermilpd $0x1,%xmm9,%xmm1
    0.00 :   2e67:   vunpcklpd %xmm0,%xmm1,%xmm1
    0.00 :   2e6b:   vpermilpd $0x3,%xmm5,%xmm7
    0.00 :   2e71:   vsubpd %xmm1,%xmm7,%xmm7
    0.00 :   2e75:   vunpcklpd %xmm9,%xmm8,%xmm8
    0.00 :   2e7a:   vmovsd %xmm8,%xmm0,%xmm0
    0.00 :   2e7e:   vmovddup %xmm6,%xmm1
    0.01 :   2e82:   vsubpd %xmm0,%xmm1,%xmm1
    0.00 :   2e86:   vmulpd %xmm7,%xmm7,%xmm0
    0.01 :   2e8a:   vmovapd 0x3dae(%rip),%xmm15        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   2e92:   lea    0x10(%rsp),%rcx
    0.00 :   2e97:   add    %rcx,%rax
    0.00 :   2e9a:   and    $0xfffffffe,%r8d
    0.01 :   2e9e:   vfmadd231pd %xmm2,%xmm2,%xmm0
    0.00 :   2ea3:   vfmadd231pd %xmm1,%xmm1,%xmm0
    0.03 :   2ea8:   vdivpd %xmm0,%xmm15,%xmm0
    0.00 :   2eac:   vmulpd %xmm0,%xmm0,%xmm9
    0.00 :   2eb0:   vmulpd %xmm9,%xmm9,%xmm8
    0.00 :   2eb5:   vmulpd %xmm9,%xmm0,%xmm0
    0.03 :   2eba:   vmulpd %xmm8,%xmm0,%xmm0
    0.00 :   2ebf:   vmulpd 0x3d99(%rip),%xmm8,%xmm8        # 6c60 <_IO_stdin_used+0xc60>
    0.01 :   2ec7:   vfmsub132pd 0x3db0(%rip),%xmm8,%xmm0        # 6c80 <_IO_stdin_used+0xc80>
    0.00 :   2ed0:   vmulpd %xmm0,%xmm2,%xmm2
    0.00 :   2ed4:   vmulpd %xmm0,%xmm7,%xmm7
    0.00 :   2ed8:   vmulpd %xmm0,%xmm1,%xmm1
    0.00 :   2edc:   vunpcklpd %xmm7,%xmm2,%xmm0
    0.00 :   2ee0:   vaddsd %xmm1,%xmm4,%xmm4
    0.00 :   2ee4:   vmovupd %xmm0,(%rax)
    0.00 :   2ee8:   vaddpd %xmm3,%xmm0,%xmm0
    0.00 :   2eec:   vmovsd %xmm1,%xmm2,%xmm15
    0.00 :   2ef0:   vmovupd %xmm15,0x10(%rax)
    0.00 :   2ef5:   vshufpd $0x1,%xmm2,%xmm7,%xmm8
    0.00 :   2efa:   vunpckhpd %xmm7,%xmm2,%xmm2
    0.01 :   2efe:   vmovsd %xmm8,%xmm1,%xmm15
    0.00 :   2f03:   vunpckhpd %xmm1,%xmm1,%xmm1
    0.00 :   2f07:   vaddpd %xmm2,%xmm0,%xmm3
    0.00 :   2f0b:   vaddsd %xmm1,%xmm4,%xmm4
    0.00 :   2f0f:   vmovupd %xmm15,0x20(%rax)
    0.00 :   2f14:   lea    (%r8,%r8,2),%eax
    0.00 :   2f18:   add    %eax,%edx
    0.00 :   2f1a:   movslq %edx,%r8
    0.00 :   2f1d:   vsubpd (%r12,%r8,8),%xmm5,%xmm2
    0.00 :   2f23:   lea    0x2(%rdx),%eax
    0.00 :   2f26:   cltq
    0.04 :   2f28:   vunpckhpd %xmm2,%xmm2,%xmm7
    0.00 :   2f2c:   vmulsd %xmm7,%xmm7,%xmm7
    0.00 :   2f30:   vmovsd %xmm2,%xmm2,%xmm0
    0.00 :   2f34:   vsubsd (%r12,%rax,8),%xmm6,%xmm1
    0.00 :   2f3a:   vfmadd132sd %xmm2,%xmm7,%xmm0
    0.00 :   2f3f:   vmovsd 0x3cf9(%rip),%xmm7        # 6c40 <_IO_stdin_used+0xc40>
    0.01 :   2f47:   vfmadd231sd %xmm1,%xmm1,%xmm0
    0.03 :   2f4c:   vdivsd %xmm0,%xmm7,%xmm0
    0.00 :   2f50:   vmulsd %xmm0,%xmm0,%xmm8
    0.01 :   2f54:   vmulsd %xmm8,%xmm8,%xmm7
    0.00 :   2f59:   vmulsd %xmm8,%xmm0,%xmm0
    0.04 :   2f5e:   vmulsd 0x3cfa(%rip),%xmm7,%xmm8        # 6c60 <_IO_stdin_used+0xc60>
    0.00 :   2f66:   vmulsd %xmm7,%xmm0,%xmm0
    0.00 :   2f6a:   vmovsd 0x3d0e(%rip),%xmm7        # 6c80 <_IO_stdin_used+0xc80>
    0.01 :   2f72:   vfmsub132sd %xmm7,%xmm8,%xmm0
    0.00 :   2f77:   vmovddup %xmm0,%xmm8
    0.01 :   2f7b:   vmulpd %xmm2,%xmm8,%xmm2
    0.00 :   2f7f:   vmulsd %xmm0,%xmm1,%xmm1
    0.09 :   2f83:   vmovupd %xmm2,(%rcx,%r8,8)
    0.00 :   2f89:   vmovsd %xmm1,0x10(%rsp,%rax,8)
    0.00 :   2f8f:   lea    0x3(%rdx),%eax
    0.00 :   2f92:   vaddpd %xmm3,%xmm2,%xmm3
    0.01 :   2f96:   vaddsd %xmm4,%xmm1,%xmm1
    0.00 :   2f9a:   cmp    $0x194f,%eax
    0.00 :   2f9f:   jg     3013 <computeAccelerations()+0x473>
    0.00 :   2fa1:   cltq
    0.00 :   2fa3:   vsubpd (%r12,%rax,8),%xmm5,%xmm5
    0.00 :   2fa9:   add    $0x5,%edx
    0.00 :   2fac:   movslq %edx,%rdx
    0.00 :   2faf:   vunpckhpd %xmm5,%xmm5,%xmm2
    0.00 :   2fb3:   vmulsd %xmm2,%xmm2,%xmm2
    0.00 :   2fb7:   vmovsd %xmm5,%xmm5,%xmm0
    0.00 :   2fbb:   vsubsd (%r12,%rdx,8),%xmm6,%xmm6
    0.00 :   2fc1:   vmovsd 0x3c77(%rip),%xmm4        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   2fc9:   vfmadd132sd %xmm5,%xmm2,%xmm0
    0.00 :   2fce:   vfmadd231sd %xmm6,%xmm6,%xmm0
    0.01 :   2fd3:   vdivsd %xmm0,%xmm4,%xmm0
    0.00 :   2fd7:   vmulsd %xmm0,%xmm0,%xmm4
    0.00 :   2fdb:   vmulsd %xmm4,%xmm4,%xmm2
    0.00 :   2fdf:   vmulsd %xmm4,%xmm0,%xmm0
    0.00 :   2fe3:   vmulsd %xmm2,%xmm0,%xmm0
    0.00 :   2fe7:   vmulsd 0x3c71(%rip),%xmm2,%xmm2        # 6c60 <_IO_stdin_used+0xc60>
    0.00 :   2fef:   vfmsub132sd %xmm7,%xmm2,%xmm0
    0.00 :   2ff4:   vmovddup %xmm0,%xmm2
    0.00 :   2ff8:   vmulpd %xmm5,%xmm2,%xmm2
    0.00 :   2ffc:   vmulsd %xmm0,%xmm6,%xmm6
    0.00 :   3000:   vaddpd %xmm2,%xmm3,%xmm3
    0.00 :   3004:   vaddsd %xmm6,%xmm1,%xmm1
    0.04 :   3008:   vmovupd %xmm2,(%rcx,%rax,8)
    0.00 :   300d:   vmovsd %xmm6,0x10(%rsp,%rdx,8)
    0.00 :   3013:   vmovupd %xmm3,-0x18(%r10)
    0.00 :   3019:   vmovsd %xmm1,-0x8(%r10)
    0.01 :   301f:   cmp    $0x8,%r14d
    0.00 :   3023:   jbe    3177 <computeAccelerations()+0x5d7>
    0.00 :   3029:   mov    %r9d,%eax
    0.00 :   302c:   shr    $0x2,%eax
    0.00 :   302f:   dec    %eax
    0.00 :   3031:   lea    (%rax,%rax,2),%rax
    0.00 :   3035:   shl    $0x5,%rax
    0.00 :   3039:   lea    0x60(%r10,%rax,1),%r8
    0.00 :   303e:   mov    %r15,%rdx
    0.00 :   3041:   mov    %r10,%rax
    0.00 :   3044:   nopl   0x0(%rax)
    2.12 :   3048:   vmovupd 0x20(%rax),%ymm6
    0.96 :   304d:   vmovupd 0x40(%rax),%ymm5
    4.39 :   3052:   vsubpd 0x20(%rdx),%ymm6,%ymm1
    0.24 :   3057:   vmovupd (%rax),%ymm6
    4.31 :   305b:   vsubpd 0x40(%rdx),%ymm5,%ymm0
    0.77 :   3060:   vsubpd (%rdx),%ymm6,%ymm2
    0.42 :   3064:   add    $0x60,%rax
    0.23 :   3068:   vmovupd %ymm1,-0x40(%rax)
    1.25 :   306d:   vmovupd %ymm2,-0x60(%rax)
    0.39 :   3072:   vmovupd %ymm0,-0x20(%rax)
    0.39 :   3077:   add    $0x60,%rdx
    0.00 :   307b:   cmp    %rax,%r8
    0.08 :   307e:   jne    3048 <computeAccelerations()+0x4a8>
    0.00 :   3080:   mov    %r9d,%edx
    0.00 :   3083:   and    $0xfffffffc,%edx
    0.01 :   3086:   lea    (%rdx,%rdx,2),%eax
    0.00 :   3089:   add    %r13d,%eax
    0.00 :   308c:   cmp    %r9d,%edx
    0.00 :   308f:   je     3131 <computeAccelerations()+0x591>
    0.00 :   3095:   sub    %edx,%r9d
    0.00 :   3098:   cmp    %esi,%edx
    0.00 :   309a:   je     3187 <computeAccelerations()+0x5e7>
    0.00 :   30a0:   lea    (%rdx,%rdx,2),%r8
    0.00 :   30a4:   add    %rdi,%r8
    0.00 :   30a7:   shl    $0x3,%r8
    0.00 :   30ab:   lea    0x234ce(%rip),%rdx        # 26580 <a>
    0.00 :   30b2:   lea    (%rdx,%r8,1),%rsi
    0.01 :   30b6:   vmovupd 0x10(%rsi),%xmm5
    0.00 :   30bb:   add    %r8,%rcx
    0.00 :   30be:   vsubpd 0x10(%rcx),%xmm5,%xmm1
    0.00 :   30c3:   vmovupd 0x20(%rsi),%xmm5
    0.00 :   30c8:   vsubpd 0x20(%rcx),%xmm5,%xmm0
    0.00 :   30cd:   vmovupd (%rsi),%xmm5
    0.00 :   30d1:   vsubpd (%rcx),%xmm5,%xmm2
    0.00 :   30d5:   mov    %r9d,%ecx
    0.00 :   30d8:   and    $0xfffffffe,%ecx
    0.00 :   30db:   vmovupd %xmm2,(%rsi)
    0.00 :   30df:   vmovupd %xmm1,0x10(%rsi)
    0.00 :   30e4:   vmovupd %xmm0,0x20(%rsi)
    0.01 :   30e9:   lea    (%rcx,%rcx,2),%esi
    0.00 :   30ec:   add    %esi,%eax
    0.00 :   30ee:   cmp    %r9d,%ecx
    0.00 :   30f1:   je     3131 <computeAccelerations()+0x591>
    0.00 :   30f3:   movslq %eax,%rcx
    0.01 :   30f6:   vmovsd (%rdx,%rcx,8),%xmm0
    0.00 :   30fb:   vsubsd 0x10(%rsp,%rcx,8),%xmm0,%xmm0
    0.01 :   3101:   vmovsd %xmm0,(%rdx,%rcx,8)
    0.00 :   3106:   lea    0x1(%rax),%ecx
    0.00 :   3109:   movslq %ecx,%rcx
    0.00 :   310c:   vmovsd (%rdx,%rcx,8),%xmm0
    0.00 :   3111:   add    $0x2,%eax
    0.00 :   3114:   vsubsd 0x10(%rsp,%rcx,8),%xmm0,%xmm0
    0.00 :   311a:   cltq
    0.01 :   311c:   vmovsd %xmm0,(%rdx,%rcx,8)
    0.00 :   3121:   vmovsd (%rdx,%rax,8),%xmm0
    0.00 :   3126:   vsubsd 0x10(%rsp,%rax,8),%xmm0,%xmm0
    0.00 :   312c:   vmovsd %xmm0,(%rdx,%rax,8)
    0.00 :   3131:   add    $0x3,%r13d
    0.00 :   3135:   add    $0x18,%r10
    0.00 :   3139:   add    $0x18,%r15
    0.00 :   313d:   sub    $0x3,%r14d
    0.00 :   3141:   add    $0x18,%rbx
    0.00 :   3145:   cmp    $0x1950,%r13d
    0.00 :   314c:   jne    2c40 <computeAccelerations()+0xa0>
    0.00 :   3152:   mov    0x1d4d8(%rsp),%rax
    0.00 :   315a:   sub    %fs:0x28,%rax
    0.00 :   3163:   jne    31ab <computeAccelerations()+0x60b>
    0.00 :   3165:   vzeroupper
    0.00 :   3168:   lea    -0x28(%rbp),%rsp
    0.00 :   316c:   pop    %rbx
    0.00 :   316d:   pop    %r12
    0.00 :   316f:   pop    %r13
    0.00 :   3171:   pop    %r14
    0.00 :   3173:   pop    %r15
    0.00 :   3175:   pop    %rbp
    0.00 :   3176:   ret
    0.00 :   3177:   xor    %edx,%edx
    0.00 :   3179:   mov    %r13d,%eax
    0.00 :   317c:   sub    %edx,%r9d
    0.00 :   317f:   cmp    %esi,%edx
    0.00 :   3181:   jne    30a0 <computeAccelerations()+0x500>
    0.00 :   3187:   lea    0x233f2(%rip),%rdx        # 26580 <a>
    0.00 :   318e:   jmp    30f3 <computeAccelerations()+0x553>
    0.00 :   3193:   add    $0x3,%rdi
    0.00 :   3197:   lea    0x10(%rsp),%rcx
    0.00 :   319c:   jmp    2f1a <computeAccelerations()+0x37a>
    0.00 :   31a1:   mov    %r13d,%edx
    0.00 :   31a4:   xor    %eax,%eax
    0.00 :   31a6:   jmp    2e1f <computeAccelerations()+0x27f>
    0.00 :   31ab:   vzeroupper
    0.00 :   31ae:   call   11a0 <__stack_chk_fail@plt>
 Percent |	Source code & Disassembly of MDpar.exe for cycles (5150 samples, percent: local period)
-------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002690 <Potential()>:
         : 6    Potential():
    0.00 :   2690:   endbr64
    0.00 :   2694:   push   %rbp
    0.00 :   2695:   mov    %rsp,%rbp
    0.00 :   2698:   push   %r14
    0.00 :   269a:   push   %r13
    0.00 :   269c:   push   %r12
    0.00 :   269e:   push   %rbx
    0.00 :   269f:   and    $0xffffffffffffffe0,%rsp
    0.00 :   26a3:   call   *0x693f(%rip)        # 8fe8 <mcount@GLIBC_2.2.5>
    0.00 :   26a9:   lea    0x5e868(%rip),%rdx        # 60f18 <r+0x18>
    0.00 :   26b0:   xor    %esi,%esi
    0.00 :   26b2:   lea    -0x18(%rdx),%rax
    0.00 :   26b6:   add    $0x3,%esi
    0.00 :   26b9:   vmovsd 0x5e83f(%rip),%xmm3        # 60f00 <r>
    0.00 :   26c1:   vmovsd 0x5e83f(%rip),%xmm2        # 60f08 <r+0x8>
    0.00 :   26c9:   vmovsd 0x5e83f(%rip),%xmm1        # 60f10 <r+0x10>
    0.00 :   26d1:   vmovsd 0x4567(%rip),%xmm5        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   26d9:   vmovapd 0x455f(%rip),%xmm9        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   26e1:   vmovapd 0x4557(%rip),%ymm4        # 6c40 <_IO_stdin_used+0xc40>
    0.00 :   26e9:   mov    $0x2,%ecx
    0.00 :   26ee:   mov    $0x194c,%edi
    0.00 :   26f3:   xor    %r12d,%r12d
    0.00 :   26f6:   vxorpd %xmm11,%xmm11,%xmm11
    0.00 :   26fb:   mov    $0xaaaaaaab,%r8d
    0.00 :   2701:   lea    0x60(%rax),%r9
    0.00 :   2705:   cmp    $0x1950,%esi
    0.00 :   270b:   je     2b52 <Potential()+0x4c2>
    0.00 :   2711:   nopl   0x0(%rax)
    0.00 :   2718:   mov    %edi,%ebx
    0.00 :   271a:   imul   %r8,%rbx
    0.00 :   271e:   shr    $0x21,%rbx
    0.00 :   2722:   lea    0x1(%rbx),%r11d
    0.00 :   2726:   cmp    $0x8,%edi
    0.00 :   2729:   jbe    2b8b <Potential()+0x4fb>
    0.02 :   272f:   mov    %r11d,%r10d
    0.00 :   2732:   shr    $0x2,%r10d
    0.00 :   2736:   dec    %r10d
    0.00 :   2739:   lea    (%r10,%r10,2),%r10
    0.00 :   273d:   shl    $0x5,%r10
    0.00 :   2741:   lea    0x60(%rdx,%r10,1),%r13
    0.00 :   2746:   vbroadcastsd %xmm3,%ymm8
    0.02 :   274b:   vbroadcastsd %xmm2,%ymm7
    0.00 :   2750:   vbroadcastsd %xmm1,%ymm6
    0.00 :   2755:   mov    %rdx,%r10
    0.00 :   2758:   nopl   0x0(%rax,%rax,1)
    0.44 :   2760:   vmovupd (%r10),%ymm13
    0.43 :   2765:   vmovupd 0x20(%r10),%ymm14
    2.49 :   276b:   vmovupd 0x40(%r10),%ymm0
    0.04 :   2771:   vperm2f128 $0x30,%ymm14,%ymm13,%ymm12
    0.00 :   2777:   vpermpd $0x4e,%ymm13,%ymm10
    0.04 :   277d:   vshufpd $0x2,%ymm10,%ymm12,%ymm10
    2.69 :   2783:   vperm2f128 $0x21,%ymm0,%ymm10,%ymm15
    0.04 :   2789:   vblendpd $0x8,%ymm15,%ymm10,%ymm10
    0.00 :   278f:   vperm2f128 $0x2,%ymm14,%ymm13,%ymm15
    0.00 :   2795:   vshufpd $0x5,%ymm15,%ymm12,%ymm12
    2.30 :   279b:   vpermilpd $0x2,%ymm0,%ymm15
    0.00 :   27a1:   vblendpd $0x8,%ymm15,%ymm12,%ymm12
    0.04 :   27a7:   vsubpd %ymm12,%ymm7,%ymm12
    0.00 :   27ac:   vsubpd %ymm10,%ymm8,%ymm10
    2.27 :   27b1:   vpalignr $0x8,%ymm14,%ymm13,%ymm13
    0.08 :   27b7:   vmulpd %ymm12,%ymm12,%ymm12
    0.00 :   27bc:   vpermpd $0x53,%ymm13,%ymm13
    0.00 :   27c2:   vinsertf128 $0x1,%xmm0,%ymm13,%ymm13
    2.51 :   27c8:   vblendpd $0x7,%ymm13,%ymm0,%ymm0
    0.08 :   27ce:   vsubpd %ymm0,%ymm6,%ymm0
    0.04 :   27d2:   vfmadd132pd %ymm10,%ymm12,%ymm10
    0.00 :   27d7:   add    $0x60,%r10
    2.43 :   27db:   vfmadd132pd %ymm0,%ymm10,%ymm0
    0.60 :   27e0:   vdivpd %ymm0,%ymm4,%ymm0
    0.25 :   27e4:   vmulpd %ymm0,%ymm0,%ymm10
    0.31 :   27e8:   vmulpd %ymm10,%ymm10,%ymm12
    3.69 :   27ed:   vmulpd %ymm10,%ymm12,%ymm12
    1.51 :   27f2:   vfnmadd132pd %ymm10,%ymm12,%ymm0
    4.71 :   27f7:   vaddsd %xmm0,%xmm11,%xmm10
    0.00 :   27fb:   vunpckhpd %xmm0,%xmm0,%xmm12
    1.37 :   27ff:   vextractf128 $0x1,%ymm0,%xmm0
    6.09 :   2805:   vaddsd %xmm12,%xmm10,%xmm10
    7.58 :   280a:   vaddsd %xmm0,%xmm10,%xmm11
    0.02 :   280e:   vunpckhpd %xmm0,%xmm0,%xmm0
    9.51 :   2812:   vaddsd %xmm0,%xmm11,%xmm11
    0.00 :   2816:   cmp    %r10,%r13
    0.02 :   2819:   jne    2760 <Potential()+0xd0>
    0.00 :   281f:   mov    %r11d,%r14d
    0.00 :   2822:   and    $0xfffffffc,%r14d
    0.00 :   2826:   lea    (%r14,%r14,2),%r13d
    0.00 :   282a:   add    %esi,%r13d
    0.00 :   282d:   lea    0x3(%r12),%r10
    0.00 :   2832:   cmp    %r14d,%r11d
    0.00 :   2835:   je     2923 <Potential()+0x293>
    0.02 :   283b:   sub    %r14d,%r11d
    0.00 :   283e:   lea    0x3(%r12),%r10
    0.00 :   2843:   cmp    %r14d,%ebx
    0.00 :   2846:   je     28d9 <Potential()+0x249>
    0.00 :   284c:   lea    (%r14,%r14,2),%rbx
    0.00 :   2850:   add    %r10,%rbx
    0.00 :   2853:   lea    (%rax,%rbx,8),%rbx
    0.00 :   2857:   vmovupd (%rbx),%xmm12
    0.00 :   285b:   vmovupd 0x10(%rbx),%xmm10
    0.00 :   2860:   vmovupd 0x20(%rbx),%xmm8
    0.00 :   2865:   vmovsd %xmm12,%xmm10,%xmm0
    0.00 :   2869:   vmovddup %xmm3,%xmm6
    0.00 :   286d:   vsubpd %xmm0,%xmm6,%xmm6
    0.00 :   2871:   vpermilpd $0x1,%xmm12,%xmm0
    0.00 :   2877:   vunpcklpd %xmm8,%xmm0,%xmm0
    0.00 :   287c:   vmovddup %xmm2,%xmm7
    0.00 :   2880:   vsubpd %xmm0,%xmm7,%xmm7
    0.00 :   2884:   vunpcklpd %xmm12,%xmm10,%xmm10
    0.00 :   2889:   vmovddup %xmm1,%xmm0
    0.00 :   288d:   vmulpd %xmm7,%xmm7,%xmm7
    0.00 :   2891:   vmovsd %xmm10,%xmm8,%xmm8
    0.04 :   2896:   vsubpd %xmm8,%xmm0,%xmm0
    0.00 :   289b:   mov    %r11d,%ebx
    0.00 :   289e:   and    $0xfffffffe,%ebx
    0.00 :   28a1:   vfmadd132pd %xmm6,%xmm7,%xmm6
    0.00 :   28a6:   lea    (%rbx,%rbx,2),%r12d
    0.00 :   28aa:   add    %r12d,%r13d
    0.00 :   28ad:   vfmadd132pd %xmm0,%xmm6,%xmm0
    0.00 :   28b2:   vdivpd %xmm0,%xmm9,%xmm0
    0.00 :   28b6:   vmulpd %xmm0,%xmm0,%xmm6
    0.02 :   28ba:   vmulpd %xmm6,%xmm6,%xmm7
    0.00 :   28be:   vmulpd %xmm6,%xmm7,%xmm7
    0.02 :   28c2:   vfnmadd132pd %xmm6,%xmm7,%xmm0
    0.00 :   28c7:   vaddsd %xmm0,%xmm11,%xmm11
    0.00 :   28cb:   vunpckhpd %xmm0,%xmm0,%xmm0
    0.00 :   28cf:   vaddsd %xmm11,%xmm0,%xmm11
    0.00 :   28d4:   cmp    %ebx,%r11d
    0.00 :   28d7:   je     2923 <Potential()+0x293>
    0.00 :   28d9:   movslq %r13d,%r11
    0.02 :   28dc:   vsubsd (%rax,%r11,8),%xmm3,%xmm3
    0.00 :   28e2:   lea    0x1(%r13),%r11d
    0.00 :   28e6:   movslq %r11d,%r11
    0.02 :   28e9:   vsubsd (%rax,%r11,8),%xmm2,%xmm2
    0.00 :   28ef:   add    $0x2,%r13d
    0.00 :   28f3:   movslq %r13d,%r13
    0.00 :   28f6:   vmulsd %xmm2,%xmm2,%xmm2
    0.00 :   28fa:   vsubsd (%rax,%r13,8),%xmm1,%xmm1
    0.00 :   2900:   vfmadd132sd %xmm3,%xmm2,%xmm3
    0.00 :   2905:   vfmadd132sd %xmm1,%xmm3,%xmm1
    0.00 :   290a:   vdivsd %xmm1,%xmm5,%xmm1
    0.06 :   290e:   vmulsd %xmm1,%xmm1,%xmm0
    0.00 :   2912:   vmulsd %xmm0,%xmm0,%xmm2
    0.00 :   2916:   vmulsd %xmm0,%xmm2,%xmm2
    0.02 :   291a:   vfnmadd132sd %xmm0,%xmm2,%xmm1
    0.00 :   291f:   vaddsd %xmm1,%xmm11,%xmm11
    0.00 :   2923:   mov    %ecx,%r12d
    0.00 :   2926:   imul   %r8,%r12
    0.00 :   292a:   vmovsd (%rdx),%xmm3
    0.02 :   292e:   vmovsd 0x8(%rdx),%xmm2
    0.00 :   2933:   shr    $0x21,%r12
    0.00 :   2937:   vmovsd 0x10(%rdx),%xmm1
    0.02 :   293c:   lea    0x1(%r12),%ebx
    0.00 :   2941:   cmp    $0x8,%ecx
    0.00 :   2944:   jbe    2b80 <Potential()+0x4f0>
    0.00 :   294a:   mov    %ebx,%r13d
    0.00 :   294d:   shr    $0x2,%r13d
    0.00 :   2951:   dec    %r13d
    0.00 :   2954:   lea    0x0(%r13,%r13,2),%r13
    0.00 :   2959:   shl    $0x5,%r13
    0.00 :   295d:   vbroadcastsd %xmm3,%ymm10
    0.02 :   2962:   vbroadcastsd %xmm2,%ymm8
    0.02 :   2967:   vbroadcastsd %xmm1,%ymm7
    0.00 :   296c:   lea    0x5e58d(%rip),%r11        # 60f00 <r>
    0.00 :   2973:   add    %r9,%r13
    0.00 :   2976:   cs nopw 0x0(%rax,%rax,1)
    0.31 :   2980:   vmovapd (%r11),%ymm13
    0.35 :   2985:   vmovapd 0x20(%r11),%ymm14
    2.89 :   298b:   vmovapd 0x40(%r11),%ymm0
    0.02 :   2991:   vperm2f128 $0x30,%ymm14,%ymm13,%ymm12
    0.00 :   2997:   vpermpd $0x4e,%ymm13,%ymm6
    0.00 :   299d:   vshufpd $0x2,%ymm6,%ymm12,%ymm6
    2.51 :   29a2:   vperm2f128 $0x21,%ymm0,%ymm6,%ymm15
    0.06 :   29a8:   vblendpd $0x8,%ymm15,%ymm6,%ymm6
    0.02 :   29ae:   vperm2f128 $0x2,%ymm14,%ymm13,%ymm15
    0.00 :   29b4:   vshufpd $0x5,%ymm15,%ymm12,%ymm12
    2.08 :   29ba:   vpermilpd $0x2,%ymm0,%ymm15
    0.00 :   29c0:   vblendpd $0x8,%ymm15,%ymm12,%ymm12
    0.00 :   29c6:   vsubpd %ymm12,%ymm8,%ymm12
    0.00 :   29cb:   vsubpd %ymm6,%ymm10,%ymm6
    2.79 :   29cf:   vpalignr $0x8,%ymm14,%ymm13,%ymm13
    0.00 :   29d5:   vmulpd %ymm12,%ymm12,%ymm12
    0.00 :   29da:   vpermpd $0x53,%ymm13,%ymm13
    0.00 :   29e0:   vinsertf128 $0x1,%xmm0,%ymm13,%ymm13
    2.18 :   29e6:   vblendpd $0x7,%ymm13,%ymm0,%ymm0
    0.02 :   29ec:   vsubpd %ymm0,%ymm7,%ymm0
    0.00 :   29f0:   vfmadd132pd %ymm6,%ymm12,%ymm6
    0.00 :   29f5:   add    $0x60,%r11
    2.44 :   29f9:   vfmadd132pd %ymm0,%ymm6,%ymm0
    0.29 :   29fe:   vdivpd %ymm0,%ymm4,%ymm0
    0.21 :   2a02:   vmulpd %ymm0,%ymm0,%ymm6
    0.25 :   2a06:   vmulpd %ymm6,%ymm6,%ymm12
    2.78 :   2a0a:   vmulpd %ymm6,%ymm12,%ymm12
    0.80 :   2a0e:   vfnmadd132pd %ymm0,%ymm12,%ymm6
    2.56 :   2a13:   vaddsd %xmm6,%xmm11,%xmm11
    0.04 :   2a17:   vunpckhpd %xmm6,%xmm6,%xmm0
    1.88 :   2a1b:   vextractf128 $0x1,%ymm6,%xmm6
    6.45 :   2a21:   vaddsd %xmm11,%xmm0,%xmm0
    7.68 :   2a26:   vaddsd %xmm0,%xmm6,%xmm11
    0.04 :   2a2a:   vunpckhpd %xmm6,%xmm6,%xmm6
    9.23 :   2a2e:   vaddsd %xmm6,%xmm11,%xmm11
    0.00 :   2a32:   cmp    %r11,%r13
    0.02 :   2a35:   jne    2980 <Potential()+0x2f0>
    0.00 :   2a3b:   mov    %ebx,%r13d
    0.00 :   2a3e:   and    $0xfffffffc,%r13d
    0.02 :   2a42:   lea    0x0(%r13,%r13,2),%r11d
    0.00 :   2a47:   cmp    %ebx,%r13d
    0.00 :   2a4a:   je     2b36 <Potential()+0x4a6>
    0.00 :   2a50:   sub    %r13d,%ebx
    0.00 :   2a53:   cmp    %r12d,%r13d
    0.00 :   2a56:   je     2aee <Potential()+0x45e>
    0.00 :   2a5c:   lea    0x0(%r13,%r13,2),%r12
    0.00 :   2a61:   lea    (%rax,%r12,8),%r12
    0.00 :   2a65:   vmovapd (%r12),%xmm12
    0.00 :   2a6b:   vmovapd 0x10(%r12),%xmm10
    0.00 :   2a72:   vmovapd 0x20(%r12),%xmm8
    0.00 :   2a79:   vmovsd %xmm12,%xmm10,%xmm0
    0.00 :   2a7d:   vmovddup %xmm3,%xmm7
    0.00 :   2a81:   vsubpd %xmm0,%xmm7,%xmm7
    0.00 :   2a85:   vpermilpd $0x1,%xmm12,%xmm0
    0.00 :   2a8b:   vunpcklpd %xmm8,%xmm0,%xmm0
    0.00 :   2a90:   vmovddup %xmm2,%xmm6
    0.00 :   2a94:   vsubpd %xmm0,%xmm6,%xmm6
    0.00 :   2a98:   vunpcklpd %xmm12,%xmm10,%xmm10
    0.00 :   2a9d:   vmovddup %xmm1,%xmm0
    0.00 :   2aa1:   vmulpd %xmm6,%xmm6,%xmm6
    0.00 :   2aa5:   vmovsd %xmm10,%xmm8,%xmm8
    0.00 :   2aaa:   vsubpd %xmm8,%xmm0,%xmm0
    0.00 :   2aaf:   mov    %ebx,%r12d
    0.00 :   2ab2:   and    $0xfffffffe,%r12d
    0.00 :   2ab6:   vfmadd132pd %xmm7,%xmm6,%xmm7
    0.00 :   2abb:   lea    (%r12,%r12,2),%r13d
    0.00 :   2abf:   add    %r13d,%r11d
    0.00 :   2ac2:   vfmadd132pd %xmm0,%xmm7,%xmm0
    0.00 :   2ac7:   vdivpd %xmm0,%xmm9,%xmm0
    0.00 :   2acb:   vmulpd %xmm0,%xmm0,%xmm6
    0.00 :   2acf:   vmulpd %xmm6,%xmm6,%xmm7
    0.00 :   2ad3:   vmulpd %xmm6,%xmm7,%xmm7
    0.02 :   2ad7:   vfnmadd132pd %xmm6,%xmm7,%xmm0
    0.06 :   2adc:   vaddsd %xmm0,%xmm11,%xmm11
    0.00 :   2ae0:   vunpckhpd %xmm0,%xmm0,%xmm0
    0.04 :   2ae4:   vaddsd %xmm11,%xmm0,%xmm11
    0.00 :   2ae9:   cmp    %ebx,%r12d
    0.00 :   2aec:   je     2b36 <Potential()+0x4a6>
    0.00 :   2aee:   movslq %r11d,%rbx
    0.00 :   2af1:   vsubsd (%rax,%rbx,8),%xmm3,%xmm6
    0.00 :   2af6:   lea    0x1(%r11),%ebx
    0.00 :   2afa:   movslq %ebx,%rbx
    0.00 :   2afd:   vsubsd (%rax,%rbx,8),%xmm2,%xmm7
    0.00 :   2b02:   add    $0x2,%r11d
    0.00 :   2b06:   movslq %r11d,%r11
    0.00 :   2b09:   vmulsd %xmm7,%xmm7,%xmm7
    0.02 :   2b0d:   vsubsd (%rax,%r11,8),%xmm1,%xmm0
    0.00 :   2b13:   vfmadd132sd %xmm6,%xmm7,%xmm6
    0.00 :   2b18:   vfmadd132sd %xmm0,%xmm6,%xmm0
    0.00 :   2b1d:   vdivsd %xmm0,%xmm5,%xmm0
    0.00 :   2b21:   vmulsd %xmm0,%xmm0,%xmm6
    0.00 :   2b25:   vmulsd %xmm6,%xmm6,%xmm7
    0.00 :   2b29:   vmulsd %xmm6,%xmm7,%xmm7
    0.00 :   2b2d:   vfnmadd132sd %xmm0,%xmm7,%xmm6
    0.00 :   2b32:   vaddsd %xmm6,%xmm11,%xmm11
    0.00 :   2b36:   add    $0x3,%esi
    0.00 :   2b39:   mov    %r10,%r12
    0.02 :   2b3c:   add    $0x18,%rdx
    0.04 :   2b40:   sub    $0x3,%edi
    0.00 :   2b43:   add    $0x3,%ecx
    0.00 :   2b46:   cmp    $0x1950,%esi
    0.00 :   2b4c:   jne    2718 <Potential()+0x88>
    0.00 :   2b52:   vmovsd 0x4156(%rip),%xmm0        # 6cb0 <_IO_stdin_used+0xcb0>
    0.00 :   2b5a:   vmulsd 0x64ce(%rip),%xmm0,%xmm0        # 9030 <epsilon>
    0.00 :   2b62:   vmulsd %xmm11,%xmm0,%xmm0
    0.00 :   2b67:   vzeroupper
    0.00 :   2b6a:   lea    -0x20(%rbp),%rsp
    0.00 :   2b6e:   pop    %rbx
    0.00 :   2b6f:   pop    %r12
    0.00 :   2b71:   pop    %r13
    0.00 :   2b73:   pop    %r14
    0.00 :   2b75:   pop    %rbp
    0.00 :   2b76:   ret
    0.00 :   2b77:   nopw   0x0(%rax,%rax,1)
    0.00 :   2b80:   xor    %r13d,%r13d
    0.00 :   2b83:   xor    %r11d,%r11d
    0.00 :   2b86:   jmp    2a50 <Potential()+0x3c0>
    0.00 :   2b8b:   mov    %esi,%r13d
    0.00 :   2b8e:   xor    %r14d,%r14d
    0.00 :   2b91:   jmp    283b <Potential()+0x1ab>
 Percent |	Source code & Disassembly of MDpar.exe for cycles (18 samples, percent: local period)
-----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004450 <VelocityVerlet(double, int, _IO_FILE*)>:
         : 6    VelocityVerlet(double, int, _IO_FILE*):
    0.00 :   4450:   endbr64
    0.00 :   4454:   push   %rbp
    0.00 :   4455:   mov    %rsp,%rbp
    0.00 :   4458:   push   %r14
    0.00 :   445a:   push   %r13
    0.00 :   445c:   push   %rbx
    0.00 :   445d:   and    $0xffffffffffffffe0,%rsp
    0.00 :   4461:   sub    $0x20,%rsp
    0.00 :   4465:   call   *0x4b7d(%rip)        # 8fe8 <mcount@GLIBC_2.2.5>
    0.00 :   446b:   vmovsd 0x4bb5(%rip),%xmm6        # 9028 <m>
    0.00 :   4473:   lea    0x3f5c6(%rip),%rbx        # 43a40 <v>
    0.00 :   447a:   vaddsd %xmm6,%xmm6,%xmm6
    0.00 :   447e:   lea    0x5ca7b(%rip),%r13        # 60f00 <r>
    0.00 :   4485:   lea    0x220f4(%rip),%r14        # 26580 <a>
    0.00 :   448c:   vmulsd %xmm0,%xmm0,%xmm7
    0.00 :   4490:   vmulsd 0x2788(%rip),%xmm0,%xmm10        # 6c20 <_IO_stdin_used+0xc20>
    0.00 :   4498:   vmovapd 0x2780(%rip),%ymm8        # 6c20 <_IO_stdin_used+0xc20>
    0.00 :   44a0:   vmovsd %xmm0,%xmm0,%xmm4
    0.00 :   44a4:   vbroadcastsd %xmm0,%ymm9
    0.00 :   44a9:   vmovsd %xmm7,0x18(%rsp)
    0.00 :   44af:   vbroadcastsd %xmm7,%ymm13
    0.00 :   44b4:   lea    0xca20(%rbx),%rsi
    0.00 :   44bb:   mov    %r14,%rcx
    0.00 :   44be:   mov    %r13,%rdx
    0.00 :   44c1:   mov    %rbx,%rax
    0.00 :   44c4:   vxorpd %xmm12,%xmm12,%xmm12
    0.00 :   44c9:   vmovsd %xmm6,0x10(%rsp)
    0.00 :   44cf:   nop
    0.00 :   44d0:   vmovapd (%rcx),%ymm3
    0.00 :   44d4:   vmovapd (%rax),%ymm5
    0.00 :   44d8:   vmulpd %ymm8,%ymm3,%ymm7
    0.00 :   44dd:   vmulpd %ymm9,%ymm5,%ymm6
    5.65 :   44e2:   vmovapd 0x20(%rcx),%ymm11
    0.00 :   44e7:   vmovapd 0x20(%rax),%ymm0
    0.00 :   44ec:   vmovapd 0x40(%rcx),%ymm2
    0.00 :   44f1:   vmulpd %ymm9,%ymm0,%ymm1
    0.00 :   44f6:   vfmadd132pd %ymm13,%ymm6,%ymm7
    0.00 :   44fb:   vmulpd %ymm8,%ymm11,%ymm6
    5.42 :   4500:   vmovapd 0x40(%rax),%ymm14
    0.00 :   4505:   vperm2f128 $0x30,%ymm0,%ymm5,%ymm0
    0.00 :   450b:   vmulpd %ymm9,%ymm14,%ymm15
    0.00 :   4510:   vaddpd (%rdx),%ymm7,%ymm7
    0.00 :   4514:   vfmadd132pd %ymm13,%ymm1,%ymm6
    0.00 :   4519:   vmulpd %ymm8,%ymm2,%ymm1
    0.00 :   451e:   vpermpd $0x4e,%ymm5,%ymm5
    0.00 :   4524:   vmovapd %ymm7,(%rdx)
    0.00 :   4528:   vshufpd $0x2,%ymm5,%ymm0,%ymm0
    0.00 :   452d:   vaddpd 0x20(%rdx),%ymm6,%ymm6
    0.00 :   4532:   vfmadd132pd %ymm13,%ymm15,%ymm1
    0.00 :   4537:   vperm2f128 $0x30,%ymm11,%ymm3,%ymm15
    0.00 :   453d:   vmovapd %ymm6,0x20(%rdx)
    0.00 :   4542:   vperm2f128 $0x21,%ymm14,%ymm0,%ymm14
    0.00 :   4548:   vblendpd $0x8,%ymm14,%ymm0,%ymm0
    0.00 :   454e:   vaddpd 0x40(%rdx),%ymm1,%ymm1
    0.00 :   4553:   add    $0x60,%rax
    0.00 :   4557:   add    $0x60,%rdx
    0.00 :   455b:   vmovapd %ymm1,-0x20(%rdx)
    0.00 :   4560:   vpermpd $0x4e,%ymm3,%ymm1
    0.00 :   4566:   vshufpd $0x2,%ymm1,%ymm15,%ymm1
    0.00 :   456b:   vperm2f128 $0x21,%ymm2,%ymm1,%ymm6
    0.00 :   4571:   vblendpd $0x8,%ymm6,%ymm1,%ymm1
    5.55 :   4577:   vmulpd %ymm8,%ymm1,%ymm1
    0.00 :   457c:   vmovupd -0x58(%rax),%ymm7
    0.00 :   4581:   vmovupd -0x38(%rax),%ymm5
    0.00 :   4586:   vmovupd -0x18(%rax),%ymm14
    0.00 :   458b:   vperm2f128 $0x30,%ymm5,%ymm7,%ymm6
    0.00 :   4591:   vfmadd132pd %ymm9,%ymm0,%ymm1
    0.00 :   4596:   vperm2f128 $0x2,%ymm5,%ymm7,%ymm5
    0.00 :   459c:   vpermilpd $0x2,%ymm14,%ymm0
    0.00 :   45a2:   vshufpd $0x5,%ymm5,%ymm6,%ymm5
    0.00 :   45a7:   vblendpd $0x8,%ymm0,%ymm5,%ymm5
    0.00 :   45ad:   vperm2f128 $0x2,%ymm11,%ymm3,%ymm0
    0.00 :   45b3:   vshufpd $0x5,%ymm0,%ymm15,%ymm0
    0.00 :   45b8:   vpalignr $0x8,%ymm11,%ymm3,%ymm3
    0.00 :   45be:   vpermilpd $0x2,%ymm2,%ymm15
    0.00 :   45c4:   vblendpd $0x8,%ymm15,%ymm0,%ymm0
    0.00 :   45ca:   vpermpd $0x53,%ymm3,%ymm3
    0.00 :   45d0:   vinsertf128 $0x1,%xmm2,%ymm3,%ymm3
    0.00 :   45d6:   vmulpd %ymm8,%ymm0,%ymm0
    0.00 :   45db:   vblendpd $0x7,%ymm3,%ymm2,%ymm2
    0.00 :   45e1:   vmulpd %ymm8,%ymm2,%ymm2
    0.00 :   45e6:   vpermpd $0x4e,%ymm7,%ymm7
    0.00 :   45ec:   vshufpd $0x2,%ymm7,%ymm6,%ymm6
    0.00 :   45f1:   vperm2f128 $0x21,%ymm14,%ymm6,%ymm14
    0.00 :   45f7:   vblendpd $0x8,%ymm14,%ymm6,%ymm6
    0.00 :   45fd:   vfmadd132pd %ymm9,%ymm6,%ymm0
    0.00 :   4602:   vfmadd132pd %ymm9,%ymm5,%ymm2
    0.00 :   4607:   add    $0x60,%rcx
    5.54 :   460b:   vinsertf128 $0x1,%xmm0,%ymm1,%ymm3
    0.00 :   4611:   vpermpd $0x48,%ymm3,%ymm3
    0.00 :   4617:   vperm2f128 $0x21,%ymm2,%ymm3,%ymm5
    5.55 :   461d:   vblendpd $0x4,%ymm5,%ymm3,%ymm3
    0.00 :   4623:   vmovapd %ymm3,-0x60(%rax)
    0.00 :   4628:   vinsertf128 $0x0,%xmm1,%ymm0,%ymm5
    0.00 :   462e:   vperm2f128 $0x30,%ymm1,%ymm0,%ymm3
    0.00 :   4634:   vshufpd $0x1,%ymm5,%ymm3,%ymm3
    0.00 :   4639:   vperm2f128 $0x30,%ymm0,%ymm1,%ymm0
    0.00 :   463f:   vblendpd $0x2,%ymm2,%ymm3,%ymm3
    0.00 :   4645:   vpermpd $0x4e,%ymm1,%ymm1
    0.00 :   464b:   vpermpd $0xee,%ymm2,%ymm2
    0.00 :   4651:   vshufpd $0x6,%ymm1,%ymm0,%ymm0
    0.00 :   4656:   vblendpd $0x9,%ymm2,%ymm0,%ymm0
    0.00 :   465c:   vmovapd %ymm3,-0x40(%rax)
    0.00 :   4661:   vmovapd %ymm0,-0x20(%rax)
    0.00 :   4666:   vmovapd %ymm12,-0x60(%rcx)
    0.00 :   466b:   vmovapd %ymm12,-0x40(%rcx)
    0.00 :   4670:   vmovapd %ymm12,-0x20(%rcx)
    0.00 :   4675:   cmp    %rsi,%rax
    0.00 :   4678:   jne    44d0 <VelocityVerlet(double, int, _IO_FILE*)+0x80>
    0.00 :   467e:   vmovapd 0x259a(%rip),%xmm1        # 6c20 <_IO_stdin_used+0xc20>
    0.00 :   4686:   vmovapd 0x2e912(%rip),%xmm7        # 32fa0 <a+0xca20>
    0.00 :   468e:   vmovddup %xmm4,%xmm0
    0.00 :   4692:   vmulpd 0x4bdc6(%rip),%xmm0,%xmm3        # 50460 <v+0xca20>
    0.00 :   469a:   vmulpd %xmm1,%xmm7,%xmm5
    0.00 :   469e:   vmovsd 0x18(%rsp),%xmm6
    0.00 :   46a4:   vmulpd 0x4bdc4(%rip),%xmm0,%xmm2        # 50470 <v+0xca30>
    0.00 :   46ac:   vmovddup %xmm6,%xmm14
    0.00 :   46b0:   vmulpd 0x4bdc8(%rip),%xmm0,%xmm11        # 50480 <v+0xca40>
    0.00 :   46b8:   vfmadd132pd %xmm14,%xmm3,%xmm5
    0.00 :   46bd:   vmulpd 0x2e8eb(%rip),%xmm1,%xmm3        # 32fb0 <a+0xca30>
    0.00 :   46c5:   vmulpd 0x2e903(%rip),%ymm8,%ymm8        # 32fd0 <a+0xca50>
    0.00 :   46cd:   vmovsd %xmm10,0x8(%rsp)
    0.00 :   46d3:   vaddpd 0x69245(%rip),%xmm5,%xmm5        # 6d920 <r+0xca20>
    0.00 :   46db:   vfmadd132pd %xmm14,%xmm2,%xmm3
    0.00 :   46e0:   vmulpd 0x2e8d8(%rip),%xmm1,%xmm2        # 32fc0 <a+0xca40>
    0.00 :   46e8:   vmovapd %xmm5,0x69230(%rip)        # 6d920 <r+0xca20>
    0.00 :   46f0:   vmovapd 0x4bd78(%rip),%xmm5        # 50470 <v+0xca30>
    0.00 :   46f8:   vaddpd 0x69230(%rip),%xmm3,%xmm3        # 6d930 <r+0xca30>
    0.00 :   4700:   vfmadd132pd %xmm14,%xmm11,%xmm2
    0.00 :   4705:   vmovupd 0x4bd5b(%rip),%xmm11        # 50468 <v+0xca28>
    0.00 :   470d:   vmovapd %xmm3,0x6921b(%rip)        # 6d930 <r+0xca30>
    0.00 :   4715:   vmovhps 0x2e89b(%rip),%xmm7,%xmm3        # 32fb8 <a+0xca38>
    0.00 :   471d:   vmulpd %xmm1,%xmm3,%xmm3
    0.00 :   4721:   vaddpd 0x69217(%rip),%xmm2,%xmm2        # 6d940 <r+0xca40>
    0.00 :   4729:   vmovapd %xmm2,0x6920f(%rip)        # 6d940 <r+0xca40>
    0.00 :   4731:   vmovlpd 0x4bd27(%rip),%xmm5,%xmm2        # 50460 <v+0xca20>
    0.00 :   4739:   vfmadd132pd %xmm0,%xmm2,%xmm3
    0.00 :   473e:   vpermilpd $0x1,%xmm7,%xmm2
    0.00 :   4744:   vmovhpd 0x2e874(%rip),%xmm2,%xmm2        # 32fc0 <a+0xca40>
    0.00 :   474c:   vmulpd %xmm1,%xmm2,%xmm2
    0.00 :   4750:   vpermilpd $0x1,%xmm11,%xmm5
    0.00 :   4756:   vmovhps 0x4bd22(%rip),%xmm11,%xmm11        # 50480 <v+0xca40>
    0.00 :   475e:   vmovhpd 0x4bd22(%rip),%xmm5,%xmm5        # 50488 <v+0xca48>
    0.00 :   4766:   vfmadd132pd %xmm0,%xmm11,%xmm2
    0.00 :   476b:   vmovapd 0x2e83d(%rip),%xmm11        # 32fb0 <a+0xca30>
    0.00 :   4773:   vunpcklpd %xmm7,%xmm11,%xmm7
    0.00 :   4777:   vmovhps 0x2e849(%rip),%xmm7,%xmm7        # 32fc8 <a+0xca48>
    0.00 :   477f:   vmulpd %xmm1,%xmm7,%xmm1
    0.00 :   4783:   vfmadd132pd %xmm1,%xmm5,%xmm0
    0.00 :   4788:   vunpcklpd %xmm2,%xmm3,%xmm1
    0.00 :   478c:   vmovapd %xmm1,0x4bccc(%rip)        # 50460 <v+0xca20>
    0.00 :   4794:   vshufpd $0x1,%xmm3,%xmm2,%xmm2
    0.00 :   4799:   vxorpd %xmm1,%xmm1,%xmm1
    0.00 :   479d:   vmovsd %xmm0,%xmm3,%xmm7
    0.00 :   47a1:   vmovapd %xmm7,0x4bcc7(%rip)        # 50470 <v+0xca30>
    0.00 :   47a9:   vmovsd %xmm2,%xmm0,%xmm7
    0.00 :   47ad:   vmovapd %xmm1,0x2e7eb(%rip)        # 32fa0 <a+0xca20>
    0.00 :   47b5:   vmovupd 0x4bcd3(%rip),%ymm0        # 50490 <v+0xca50>
    0.00 :   47bd:   vmovapd %xmm1,0x2e7eb(%rip)        # 32fb0 <a+0xca30>
    0.00 :   47c5:   vmovapd %xmm1,0x2e7f3(%rip)        # 32fc0 <a+0xca40>
    0.00 :   47cd:   vmovapd %xmm7,0x4bcab(%rip)        # 50480 <v+0xca40>
    0.00 :   47d5:   vmovsd 0x2443(%rip),%xmm7        # 6c20 <_IO_stdin_used+0xc20>
    0.00 :   47dd:   vmovapd %ymm9,%ymm2
    0.00 :   47e1:   vmulsd 0x2e807(%rip),%xmm7,%xmm5        # 32ff0 <a+0xca70>
    0.00 :   47e9:   vfmadd132pd %ymm8,%ymm0,%ymm2
    0.00 :   47ee:   vmulpd %ymm9,%ymm0,%ymm0
    0.00 :   47f3:   vmulsd 0x2e7fd(%rip),%xmm7,%xmm3        # 32ff8 <a+0xca78>
    0.00 :   47fb:   vmovsd 0x4bcad(%rip),%xmm7        # 504b0 <v+0xca70>
    0.00 :   4803:   vmovsd %xmm4,0x18(%rsp)
    0.00 :   4809:   vmovupd %ymm2,0x4bc7f(%rip)        # 50490 <v+0xca50>
    0.00 :   4811:   vfmadd132pd %ymm13,%ymm0,%ymm8
    0.00 :   4816:   vmulsd %xmm6,%xmm5,%xmm0
    0.00 :   481a:   vfmadd132sd %xmm4,%xmm7,%xmm5
    0.00 :   481f:   vmovupd %ymm12,0x2e7a9(%rip)        # 32fd0 <a+0xca50>
    0.00 :   4827:   vmovapd %xmm1,0x2e7c1(%rip)        # 32ff0 <a+0xca70>
    0.00 :   482f:   vaddpd 0x69119(%rip),%ymm8,%ymm8        # 6d950 <r+0xca50>
    0.00 :   4837:   vfmadd231sd %xmm7,%xmm4,%xmm0
    0.00 :   483c:   vmovsd %xmm5,0x4bc6c(%rip)        # 504b0 <v+0xca70>
    0.00 :   4844:   vmovupd %ymm8,0x69104(%rip)        # 6d950 <r+0xca50>
    0.00 :   484c:   vmovsd 0x4bc64(%rip),%xmm8        # 504b8 <v+0xca78>
    0.00 :   4854:   vaddsd 0x69114(%rip),%xmm0,%xmm0        # 6d970 <r+0xca70>
    0.00 :   485c:   vmovsd %xmm0,0x6910c(%rip)        # 6d970 <r+0xca70>
    0.00 :   4864:   vmulsd %xmm6,%xmm3,%xmm0
    0.00 :   4868:   vfmadd132sd %xmm4,%xmm8,%xmm3
    0.00 :   486d:   vfmadd231sd %xmm8,%xmm4,%xmm0
    0.00 :   4872:   vmovsd %xmm3,0x4bc3e(%rip)        # 504b8 <v+0xca78>
    0.00 :   487a:   vaddsd 0x690f6(%rip),%xmm0,%xmm0        # 6d978 <r+0xca78>
    0.00 :   4882:   vmovsd %xmm0,0x690ee(%rip)        # 6d978 <r+0xca78>
    0.00 :   488a:   vzeroupper
    0.00 :   488d:   call   2ba0 <computeAccelerations()>
    0.00 :   4892:   vmovq  0x2576(%rip),%xmm8        # 6e10 <_IO_stdin_used+0xe10>
    0.00 :   489a:   vmovq  0x257e(%rip),%xmm7        # 6e20 <_IO_stdin_used+0xe20>
    0.00 :   48a2:   vxorpd %xmm3,%xmm3,%xmm3
    0.00 :   48a6:   vmovsd 0x79b2a(%rip),%xmm5        # 7e3d8 <L>
    0.00 :   48ae:   vmovsd 0x10(%rsp),%xmm6
    0.00 :   48b4:   vmovsd 0x18(%rsp),%xmm4
    0.00 :   48ba:   vmovsd 0x8(%rsp),%xmm10
    0.00 :   48c0:   lea    0x4bbf9(%rip),%rax        # 504c0 <v+0xca80>
    0.00 :   48c7:   vmovsd %xmm3,%xmm3,%xmm0
    0.00 :   48cb:   vmovapd %xmm8,%xmm12
    0.00 :   48d0:   vmovapd %xmm7,%xmm11
    0.00 :   48d4:   vmovapd %xmm8,%xmm15
    0.00 :   48d9:   vmovapd %xmm7,%xmm9
    0.00 :   48dd:   nopl   (%rax)
    5.60 :   48e0:   vmovsd (%r14),%xmm13
    0.00 :   48e5:   vmovsd 0x8(%r14),%xmm2
    5.54 :   48eb:   vmovsd 0x10(%r14),%xmm1
   11.04 :   48f1:   vfmadd213sd (%rbx),%xmm10,%xmm13
    0.00 :   48f6:   vfmadd213sd 0x8(%rbx),%xmm10,%xmm2
   16.64 :   48fc:   vfmadd213sd 0x10(%rbx),%xmm10,%xmm1
    5.54 :   4902:   vmovsd 0x0(%r13),%xmm14
    0.00 :   4908:   vcomisd %xmm14,%xmm3
    0.00 :   490d:   vmovsd %xmm13,(%rbx)
    0.00 :   4911:   vmovsd %xmm2,0x8(%rbx)
    0.00 :   4916:   vmovsd %xmm1,0x10(%rbx)
    5.64 :   491b:   ja     4923 <VelocityVerlet(double, int, _IO_FILE*)+0x4d3>
    0.00 :   491d:   vcomisd %xmm5,%xmm14
    5.54 :   4921:   jb     493d <VelocityVerlet(double, int, _IO_FILE*)+0x4ed>
    0.00 :   4923:   vxorpd %xmm8,%xmm13,%xmm14
    0.00 :   4928:   vandpd %xmm7,%xmm13,%xmm13
    0.00 :   492c:   vmulsd %xmm6,%xmm13,%xmm13
    0.00 :   4930:   vmovsd %xmm14,(%rbx)
    0.00 :   4934:   vdivsd %xmm4,%xmm13,%xmm13
    0.00 :   4938:   vaddsd %xmm13,%xmm0,%xmm0
    0.00 :   493d:   vmovsd 0x8(%r13),%xmm13
    0.00 :   4943:   vcomisd %xmm13,%xmm3
    0.00 :   4948:   ja     4950 <VelocityVerlet(double, int, _IO_FILE*)+0x500>
    5.55 :   494a:   vcomisd %xmm5,%xmm13
    0.00 :   494e:   jb     496b <VelocityVerlet(double, int, _IO_FILE*)+0x51b>
    0.00 :   4950:   vxorpd %xmm12,%xmm2,%xmm13
    0.00 :   4955:   vandpd %xmm11,%xmm2,%xmm2
    0.00 :   495a:   vmulsd %xmm6,%xmm2,%xmm2
    0.00 :   495e:   vmovsd %xmm13,0x8(%rbx)
    0.00 :   4963:   vdivsd %xmm4,%xmm2,%xmm2
    0.00 :   4967:   vaddsd %xmm2,%xmm0,%xmm0
    5.52 :   496b:   vmovsd 0x10(%r13),%xmm2
    0.00 :   4971:   vcomisd %xmm2,%xmm3
    5.67 :   4975:   ja     497d <VelocityVerlet(double, int, _IO_FILE*)+0x52d>
    0.00 :   4977:   vcomisd %xmm5,%xmm2
    0.00 :   497b:   jb     4998 <VelocityVerlet(double, int, _IO_FILE*)+0x548>
    0.00 :   497d:   vxorpd %xmm15,%xmm1,%xmm2
    0.00 :   4982:   vandpd %xmm9,%xmm1,%xmm1
    0.00 :   4987:   vmulsd %xmm6,%xmm1,%xmm1
    0.00 :   498b:   vmovsd %xmm2,0x10(%rbx)
    0.00 :   4990:   vdivsd %xmm4,%xmm1,%xmm1
    0.00 :   4994:   vaddsd %xmm1,%xmm0,%xmm0
    0.00 :   4998:   add    $0x18,%rbx
    0.00 :   499c:   add    $0x18,%r14
    0.00 :   49a0:   add    $0x18,%r13
    0.00 :   49a4:   cmp    %rax,%rbx
    0.00 :   49a7:   jne    48e0 <VelocityVerlet(double, int, _IO_FILE*)+0x490>
    0.00 :   49ad:   vmulsd 0x2303(%rip),%xmm5,%xmm1        # 6cb8 <_IO_stdin_used+0xcb8>
    0.00 :   49b5:   lea    -0x18(%rbp),%rsp
    0.00 :   49b9:   pop    %rbx
    0.00 :   49ba:   pop    %r13
    0.00 :   49bc:   pop    %r14
    0.00 :   49be:   vmulsd %xmm5,%xmm1,%xmm1
    0.00 :   49c2:   pop    %rbp
    0.00 :   49c3:   vdivsd %xmm1,%xmm0,%xmm0
    0.00 :   49c7:   ret
 Percent |	Source code & Disassembly of MDpar.exe for cycles (8 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000012a0 <main>:
         : 6    main():
    0.00 :   12a0:   endbr64
    0.00 :   12a4:   lea    0x8(%rsp),%r10
    0.00 :   12a9:   and    $0xffffffffffffffe0,%rsp
    0.00 :   12ad:   push   -0x8(%r10)
    0.00 :   12b1:   push   %rbp
    0.00 :   12b2:   mov    %rsp,%rbp
    0.00 :   12b5:   push   %r15
    0.00 :   12b7:   push   %r14
    0.00 :   12b9:   push   %r13
    0.00 :   12bb:   push   %r12
    0.00 :   12bd:   push   %r10
    0.00 :   12bf:   push   %rbx
    0.00 :   12c0:   sub    $0x1000,%rsp
    0.00 :   12c7:   orq    $0x0,(%rsp)
    0.00 :   12cc:   add    $0xffffffffffffff80,%rsp
    0.00 :   12d0:   call   *0x7d12(%rip)        # 8fe8 <mcount@GLIBC_2.2.5>
    0.00 :   12d6:   lea    0x4d2b(%rip),%r12        # 6008 <_IO_stdin_used+0x8>
    0.00 :   12dd:   mov    %r12,%rdi
    0.00 :   12e0:   lea    0x4d99(%rip),%r14        # 6080 <_IO_stdin_used+0x80>
    0.00 :   12e7:   lea    0x5853(%rip),%r15        # 6b41 <_IO_stdin_used+0xb41>
    0.00 :   12ee:   mov    %fs:0x28,%rax
    0.00 :   12f7:   mov    %rax,-0x38(%rbp)
    0.00 :   12fb:   xor    %eax,%eax
    0.00 :   12fd:   call   1170 <puts@plt>
    0.00 :   1302:   lea    0x4d47(%rip),%rdi        # 6050 <_IO_stdin_used+0x50>
    0.00 :   1309:   call   1170 <puts@plt>
    0.00 :   130e:   mov    %r14,%rdi
    0.00 :   1311:   call   1170 <puts@plt>
    0.00 :   1316:   lea    -0xff0(%rbp),%r13
    0.00 :   131d:   lea    0x4d9c(%rip),%rdi        # 60c0 <_IO_stdin_used+0xc0>
    0.00 :   1324:   call   1170 <puts@plt>
    0.00 :   1329:   xor    %eax,%eax
    0.00 :   132b:   mov    %r13,%rsi
    0.00 :   132e:   mov    %r15,%rdi
    0.00 :   1331:   call   1240 <__isoc99_scanf@plt>
    0.00 :   1336:   cmp    $0x1,%eax
    0.00 :   1339:   jne    2089 <main+0xde9>
    0.00 :   133f:   mov    0x7cfa(%rip),%rbx        # 9040 <OUTPUT_FOLDER>
    0.00 :   1346:   lea    -0xc00(%rbp),%rax
    0.00 :   134d:   mov    %rbx,%rsi
    0.00 :   1350:   mov    $0x3e8,%edx
    0.00 :   1355:   mov    %rax,%rdi
    0.00 :   1358:   mov    %rax,-0x1048(%rbp)
    0.00 :   135f:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   1364:   mov    -0x1048(%rbp),%rdx
    0.00 :   136b:   mov    %r13,%rsi
    0.00 :   136e:   sub    %rax,%rdx
    0.00 :   1371:   add    $0x3e8,%rdx
    0.00 :   1378:   mov    %rax,%rdi
    0.00 :   137b:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   1380:   mov    -0x1048(%rbp),%rcx
    0.00 :   1387:   mov    %rax,%rdi
    0.00 :   138a:   sub    %rax,%rcx
    0.00 :   138d:   add    $0x3e8,%rcx
    0.00 :   1394:   mov    $0xa,%edx
    0.00 :   1399:   lea    0x57bb(%rip),%rsi        # 6b5b <_IO_stdin_used+0xb5b>
    0.00 :   13a0:   call   11e0 <__memcpy_chk@plt>
    0.00 :   13a5:   lea    -0x810(%rbp),%rax
    0.00 :   13ac:   mov    %rbx,%rsi
    0.00 :   13af:   mov    $0x3e8,%edx
    0.00 :   13b4:   mov    %rax,%rdi
    0.00 :   13b7:   mov    %rax,-0x1040(%rbp)
    0.00 :   13be:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   13c3:   mov    -0x1040(%rbp),%rdx
    0.00 :   13ca:   mov    %r13,%rsi
    0.00 :   13cd:   sub    %rax,%rdx
    0.00 :   13d0:   add    $0x3e8,%rdx
    0.00 :   13d7:   mov    %rax,%rdi
    0.00 :   13da:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   13df:   mov    -0x1040(%rbp),%rcx
    0.00 :   13e6:   mov    %rax,%rdi
    0.00 :   13e9:   sub    %rax,%rcx
    0.00 :   13ec:   add    $0x3e8,%rcx
    0.00 :   13f3:   mov    $0xc,%edx
    0.00 :   13f8:   lea    0x5766(%rip),%rsi        # 6b65 <_IO_stdin_used+0xb65>
    0.00 :   13ff:   call   11e0 <__memcpy_chk@plt>
    0.00 :   1404:   lea    -0x420(%rbp),%rax
    0.00 :   140b:   mov    %rbx,%rsi
    0.00 :   140e:   mov    $0x3e8,%edx
    0.00 :   1413:   mov    %rax,%rbx
    0.00 :   1416:   mov    %rax,%rdi
    0.00 :   1419:   mov    %rax,-0x1070(%rbp)
    0.00 :   1420:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   1425:   mov    %rbx,%rdx
    0.00 :   1428:   sub    %rax,%rdx
    0.00 :   142b:   add    $0x3e8,%rdx
    0.00 :   1432:   mov    %r13,%rsi
    0.00 :   1435:   mov    %rax,%rdi
    0.00 :   1438:   call   11f0 <__stpcpy_chk@plt>
    0.00 :   143d:   mov    %rbx,%rcx
    0.00 :   1440:   sub    %rax,%rcx
    0.00 :   1443:   add    $0x3e8,%rcx
    0.00 :   144a:   mov    $0xd,%edx
    0.00 :   144f:   lea    0x571b(%rip),%rsi        # 6b71 <_IO_stdin_used+0xb71>
    0.00 :   1456:   mov    %rax,%rdi
    0.00 :   1459:   call   11e0 <__memcpy_chk@plt>
    0.00 :   145e:   mov    %r12,%rdi
    0.00 :   1461:   call   1170 <puts@plt>
    0.00 :   1466:   mov    %r13,%rdx
    0.00 :   1469:   lea    0x4c78(%rip),%rsi        # 60e8 <_IO_stdin_used+0xe8>
    0.00 :   1470:   mov    $0x1,%edi
    0.00 :   1475:   xor    %eax,%eax
    0.00 :   1477:   call   1210 <__printf_chk@plt>
    0.00 :   147c:   mov    %r14,%rdi
    0.00 :   147f:   call   1170 <puts@plt>
    0.00 :   1484:   mov    %r12,%rdi
    0.00 :   1487:   call   1170 <puts@plt>
    0.00 :   148c:   lea    0x4c85(%rip),%rdi        # 6118 <_IO_stdin_used+0x118>
    0.00 :   1493:   call   1170 <puts@plt>
    0.00 :   1498:   lea    0x4cc1(%rip),%rdi        # 6160 <_IO_stdin_used+0x160>
    0.00 :   149f:   call   1170 <puts@plt>
    0.00 :   14a4:   lea    0x4cf5(%rip),%rdi        # 61a0 <_IO_stdin_used+0x1a0>
    0.00 :   14ab:   call   1170 <puts@plt>
    0.00 :   14b0:   lea    0x4d29(%rip),%rdi        # 61e0 <_IO_stdin_used+0x1e0>
    0.00 :   14b7:   call   1170 <puts@plt>
    0.00 :   14bc:   lea    0x4d5d(%rip),%rdi        # 6220 <_IO_stdin_used+0x220>
    0.00 :   14c3:   call   1170 <puts@plt>
    0.00 :   14c8:   lea    0x4d91(%rip),%rdi        # 6260 <_IO_stdin_used+0x260>
    0.00 :   14cf:   call   1170 <puts@plt>
    0.00 :   14d4:   lea    0x7bc5(%rip),%r13        # 90a0 <atype>
    0.00 :   14db:   mov    %r14,%rdi
    0.00 :   14de:   call   1170 <puts@plt>
    0.00 :   14e3:   xor    %eax,%eax
    0.00 :   14e5:   mov    %r13,%rsi
    0.00 :   14e8:   mov    %r15,%rdi
    0.00 :   14eb:   call   1240 <__isoc99_scanf@plt>
    0.00 :   14f0:   cmp    $0x1,%eax
    0.00 :   14f3:   jne    2062 <main+0xdc2>
    0.00 :   14f9:   cmpw   $0x6548,0x7b9e(%rip)        # 90a0 <atype>
    0.00 :   1502:   je     1752 <main+0x4b2>
    0.00 :   1508:   lea    0x5688(%rip),%rsi        # 6b97 <_IO_stdin_used+0xb97>
    0.00 :   150f:   mov    %r13,%rdi
    0.00 :   1512:   call   11c0 <strcmp@plt>
    0.00 :   1517:   test   %eax,%eax
    0.00 :   1519:   jne    16b5 <main+0x415>
    0.00 :   151f:   vmovsd 0x5839(%rip),%xmm4        # 6d60 <_IO_stdin_used+0xd60>
    0.00 :   1527:   vmovsd 0x5839(%rip),%xmm2        # 6d68 <_IO_stdin_used+0xd68>
    0.00 :   152f:   vmovsd %xmm4,-0x1028(%rbp)
    0.00 :   1537:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   153f:   vmovsd 0x5829(%rip),%xmm4        # 6d70 <_IO_stdin_used+0xd70>
    0.00 :   1547:   vmovsd 0x5829(%rip),%xmm2        # 6d78 <_IO_stdin_used+0xd78>
    0.00 :   154f:   vmovsd %xmm4,-0x1030(%rbp)
    0.00 :   1557:   vmovsd %xmm2,-0x1060(%rbp)
    0.00 :   155f:   mov    %r12,%rdi
    0.00 :   1562:   call   1170 <puts@plt>
    0.00 :   1567:   lea    0x4d32(%rip),%rsi        # 62a0 <_IO_stdin_used+0x2a0>
    0.00 :   156e:   mov    %r13,%rdx
    0.00 :   1571:   mov    $0x1,%edi
    0.00 :   1576:   xor    %eax,%eax
    0.00 :   1578:   call   1210 <__printf_chk@plt>
    0.00 :   157d:   mov    %r12,%rdi
    0.00 :   1580:   call   1170 <puts@plt>
    0.00 :   1585:   mov    %r12,%rdi
    0.00 :   1588:   call   1170 <puts@plt>
    0.00 :   158d:   lea    0x4d44(%rip),%rdi        # 62d8 <_IO_stdin_used+0x2d8>
    0.00 :   1594:   call   1170 <puts@plt>
    0.00 :   1599:   mov    %r14,%rdi
    0.00 :   159c:   call   1170 <puts@plt>
    0.00 :   15a1:   lea    0x55fb(%rip),%r12        # 6ba3 <_IO_stdin_used+0xba3>
    0.00 :   15a8:   lea    0x4d61(%rip),%rdi        # 6310 <_IO_stdin_used+0x310>
    0.00 :   15af:   call   1170 <puts@plt>
    0.00 :   15b4:   xor    %eax,%eax
    0.00 :   15b6:   lea    0x7ce03(%rip),%rsi        # 7e3c0 <Tinit>
    0.00 :   15bd:   mov    %r12,%rdi
    0.00 :   15c0:   call   1240 <__isoc99_scanf@plt>
    0.00 :   15c5:   cmp    $0x1,%eax
    0.00 :   15c8:   jne    20b0 <main+0xe10>
    0.00 :   15ce:   vmovsd 0x7cdea(%rip),%xmm0        # 7e3c0 <Tinit>
    0.00 :   15d6:   vxorpd %xmm2,%xmm2,%xmm2
    0.00 :   15da:   vcomisd %xmm0,%xmm2
    0.00 :   15de:   ja     173f <main+0x49f>
    0.00 :   15e4:   lea    0x4dcd(%rip),%rdi        # 63b8 <_IO_stdin_used+0x3b8>
    0.00 :   15eb:   vdivsd -0x1030(%rbp),%xmm0,%xmm0
    0.00 :   15f3:   vmovsd %xmm0,0x7cdc5(%rip)        # 7e3c0 <Tinit>
    0.00 :   15fb:   call   1170 <puts@plt>
    0.00 :   1600:   lea    0x4de1(%rip),%rdi        # 63e8 <_IO_stdin_used+0x3e8>
    0.00 :   1607:   call   1170 <puts@plt>
    0.00 :   160c:   lea    0x4e25(%rip),%rdi        # 6438 <_IO_stdin_used+0x438>
    0.00 :   1613:   call   1170 <puts@plt>
    0.00 :   1618:   xor    %eax,%eax
    0.00 :   161a:   lea    -0xff8(%rbp),%rsi
    0.00 :   1621:   mov    %r12,%rdi
    0.00 :   1624:   call   1240 <__isoc99_scanf@plt>
    0.00 :   1629:   dec    %eax
    0.00 :   162b:   jne    20d7 <main+0xe37>
    0.00 :   1631:   vmovsd -0xff8(%rbp),%xmm0
    0.00 :   1639:   vmovsd 0x565f(%rip),%xmm2        # 6ca0 <_IO_stdin_used+0xca0>
    0.00 :   1641:   vmulsd 0x79cf(%rip),%xmm0,%xmm0        # 9018 <NA>
    0.00 :   1649:   vdivsd %xmm0,%xmm2,%xmm0
    0.00 :   164d:   vdivsd -0x1060(%rbp),%xmm0,%xmm4
    0.00 :   1655:   vcomisd %xmm4,%xmm2
    0.00 :   1659:   vmovsd %xmm4,-0x1080(%rbp)
    0.00 :   1661:   jbe    17a4 <main+0x504>
    0.00 :   1667:   lea    0x4e1a(%rip),%rdi        # 6488 <_IO_stdin_used+0x488>
    0.00 :   166e:   call   1170 <puts@plt>
    0.00 :   1673:   vmovsd -0x1080(%rbp),%xmm0
    0.00 :   167b:   mov    $0x870,%edx
    0.00 :   1680:   lea    0x4e29(%rip),%rsi        # 64b0 <_IO_stdin_used+0x4b0>
    0.00 :   1687:   mov    $0x1,%edi
    0.00 :   168c:   mov    $0x1,%eax
    0.00 :   1691:   call   1210 <__printf_chk@plt>
    0.00 :   1696:   lea    0x4e63(%rip),%rdi        # 6500 <_IO_stdin_used+0x500>
    0.00 :   169d:   call   1170 <puts@plt>
    0.00 :   16a2:   lea    0x4eb7(%rip),%rdi        # 6560 <_IO_stdin_used+0x560>
    0.00 :   16a9:   call   1170 <puts@plt>
    0.00 :   16ae:   xor    %edi,%edi
    0.00 :   16b0:   call   1250 <exit@plt>
    0.00 :   16b5:   lea    0x54de(%rip),%rsi        # 6b9a <_IO_stdin_used+0xb9a>
    0.00 :   16bc:   mov    %r13,%rdi
    0.00 :   16bf:   call   11c0 <strcmp@plt>
    0.00 :   16c4:   test   %eax,%eax
    0.00 :   16c6:   je     1c23 <main+0x983>
    0.00 :   16cc:   lea    0x54ca(%rip),%rsi        # 6b9d <_IO_stdin_used+0xb9d>
    0.00 :   16d3:   mov    %r13,%rdi
    0.00 :   16d6:   call   11c0 <strcmp@plt>
    0.00 :   16db:   test   %eax,%eax
    0.00 :   16dd:   je     2018 <main+0xd78>
    0.00 :   16e3:   lea    0x54b6(%rip),%rsi        # 6ba0 <_IO_stdin_used+0xba0>
    0.00 :   16ea:   mov    %r13,%rdi
    0.00 :   16ed:   call   11c0 <strcmp@plt>
    0.00 :   16f2:   test   %eax,%eax
    0.00 :   16f4:   jne    1c13 <main+0x973>
    0.00 :   16fa:   vmovsd 0x56be(%rip),%xmm4        # 6dc0 <_IO_stdin_used+0xdc0>
    0.00 :   1702:   vmovsd 0x56be(%rip),%xmm2        # 6dc8 <_IO_stdin_used+0xdc8>
    0.00 :   170a:   vmovsd %xmm4,-0x1028(%rbp)
    0.00 :   1712:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   171a:   vmovsd 0x56ae(%rip),%xmm4        # 6dd0 <_IO_stdin_used+0xdd0>
    0.00 :   1722:   vmovsd 0x56ae(%rip),%xmm2        # 6dd8 <_IO_stdin_used+0xdd8>
    0.00 :   172a:   vmovsd %xmm4,-0x1030(%rbp)
    0.00 :   1732:   vmovsd %xmm2,-0x1060(%rbp)
    0.00 :   173a:   jmp    155f <main+0x2bf>
    0.00 :   173f:   lea    0x4c02(%rip),%rdi        # 6348 <_IO_stdin_used+0x348>
    0.00 :   1746:   call   1170 <puts@plt>
    0.00 :   174b:   xor    %edi,%edi
    0.00 :   174d:   call   1250 <exit@plt>
    0.00 :   1752:   cmpb   $0x0,0x7949(%rip)        # 90a2 <atype+0x2>
    0.00 :   1759:   jne    1508 <main+0x268>
    0.00 :   175f:   vmovsd 0x55d9(%rip),%xmm2        # 6d40 <_IO_stdin_used+0xd40>
    0.00 :   1767:   vmovsd 0x55e1(%rip),%xmm4        # 6d50 <_IO_stdin_used+0xd50>
    0.00 :   176f:   vmovsd %xmm2,-0x1028(%rbp)
    0.00 :   1777:   vmovsd 0x55c9(%rip),%xmm2        # 6d48 <_IO_stdin_used+0xd48>
    0.00 :   177f:   vmovsd %xmm4,-0x1030(%rbp)
    0.00 :   1787:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   178f:   vmovsd 0x55c1(%rip),%xmm2        # 6d58 <_IO_stdin_used+0xd58>
    0.00 :   1797:   vmovsd %xmm2,-0x1060(%rbp)
    0.00 :   179f:   jmp    155f <main+0x2bf>
    0.00 :   17a4:   vmovsd 0x5634(%rip),%xmm1        # 6de0 <_IO_stdin_used+0xde0>
    0.00 :   17ac:   vmovsd -0x1080(%rbp),%xmm0
    0.00 :   17b4:   lea    0x5416(%rip),%r12        # 6bd1 <_IO_stdin_used+0xbd1>
    0.00 :   17bb:   call   1180 <pow@plt>
    0.00 :   17c0:   mov    -0x1048(%rbp),%rdi
    0.00 :   17c7:   mov    %r12,%rsi
    0.00 :   17ca:   vmovsd %xmm0,0x7cc06(%rip)        # 7e3d8 <L>
    0.00 :   17d2:   call   1220 <fopen@plt>
    0.00 :   17d7:   mov    -0x1040(%rbp),%rdi
    0.00 :   17de:   mov    %r12,%rsi
    0.00 :   17e1:   mov    %rax,%r15
    0.00 :   17e4:   call   1220 <fopen@plt>
    0.00 :   17e9:   mov    -0x1070(%rbp),%rdi
    0.00 :   17f0:   mov    %r12,%rsi
    0.00 :   17f3:   mov    %rax,%r14
    0.00 :   17f6:   call   1220 <fopen@plt>
    0.00 :   17fb:   lea    0x5392(%rip),%rsi        # 6b94 <_IO_stdin_used+0xb94>
    0.00 :   1802:   mov    %r13,%rdi
    0.00 :   1805:   mov    %rax,-0x1098(%rbp)
    0.00 :   180c:   call   11c0 <strcmp@plt>
    0.00 :   1811:   test   %eax,%eax
    0.00 :   1813:   je     1bec <main+0x94c>
    0.00 :   1819:   vmovsd 0x55cf(%rip),%xmm0        # 6df0 <_IO_stdin_used+0xdf0>
    0.00 :   1821:   movl   $0xc8,-0x1074(%rbp)
    0.00 :   182b:   vdivsd -0x1028(%rbp),%xmm0,%xmm4
    0.00 :   1833:   vmovsd %xmm4,-0x1008(%rbp)
    0.00 :   183b:   call   4fa0 <initialize()>
    0.00 :   1840:   call   2ba0 <computeAccelerations()>
    0.00 :   1845:   mov    $0x870,%ecx
    0.00 :   184a:   lea    0x5382(%rip),%rdx        # 6bd3 <_IO_stdin_used+0xbd3>
    0.00 :   1851:   mov    $0x1,%esi
    0.00 :   1856:   mov    %r15,%rdi
    0.00 :   1859:   xor    %eax,%eax
    0.00 :   185b:   call   1270 <__fprintf_chk@plt>
    0.00 :   1860:   mov    -0x1074(%rbp),%eax
    0.00 :   1866:   mov    $0xa,%ecx
    0.00 :   186b:   cltd
    0.00 :   186c:   idiv   %ecx
    0.00 :   186e:   mov    $0x1,%esi
    0.00 :   1873:   mov    %r14,%rcx
    0.00 :   1876:   mov    $0x7f,%edx
    0.00 :   187b:   lea    0x4d16(%rip),%rdi        # 6598 <_IO_stdin_used+0x598>
    0.00 :   1882:   lea    0x4ec37(%rip),%r13        # 504c0 <v+0xca80>
    0.00 :   1889:   mov    %eax,-0x104c(%rbp)
    0.00 :   188f:   call   1260 <fwrite@plt>
    0.00 :   1894:   lea    0x4d7d(%rip),%rsi        # 6618 <_IO_stdin_used+0x618>
    0.00 :   189b:   mov    $0x1,%edi
    0.00 :   18a0:   xor    %eax,%eax
    0.00 :   18a2:   call   1210 <__printf_chk@plt>
    0.00 :   18a7:   mov    -0x104c(%rbp),%ecx
    0.00 :   18ad:   mov    -0x1074(%rbp),%eax
    0.00 :   18b3:   lea    (%rcx,%rcx,1),%edx
    0.00 :   18b6:   mov    %edx,-0x1054(%rbp)
    0.00 :   18bc:   lea    (%rcx,%rcx,2),%edx
    0.00 :   18bf:   mov    %edx,-0x1058(%rbp)
    0.00 :   18c5:   lea    0x0(,%rcx,4),%edx
    0.00 :   18cc:   mov    %edx,-0x1064(%rbp)
    0.00 :   18d2:   lea    (%rcx,%rcx,4),%edx
    0.00 :   18d5:   imul   $0x6,%ecx,%ebx
    0.00 :   18d8:   mov    %edx,-0x1068(%rbp)
    0.00 :   18de:   imul   $0x7,%ecx,%edx
    0.00 :   18e1:   mov    %ebx,-0x1078(%rbp)
    0.00 :   18e7:   lea    0x0(,%rcx,8),%ebx
    0.00 :   18ee:   mov    %edx,-0x1084(%rbp)
    0.00 :   18f4:   lea    (%rcx,%rcx,8),%edx
    0.00 :   18f7:   imul   $0xa,%ecx,%ecx
    0.00 :   18fa:   mov    %ebx,-0x1088(%rbp)
    0.00 :   1900:   inc    %eax
    0.00 :   1902:   xor    %ebx,%ebx
    0.00 :   1904:   mov    %edx,-0x108c(%rbp)
    0.00 :   190a:   mov    %ecx,-0x1090(%rbp)
    0.00 :   1910:   mov    %eax,-0x1050(%rbp)
    0.00 :   1916:   movq   $0x0,-0x1010(%rbp)
    0.00 :   1921:   movq   $0x0,-0x1018(%rbp)
    0.00 :   192c:   cmp    %ebx,-0x104c(%rbp)
    0.00 :   1932:   je     1bd4 <main+0x934>
    0.00 :   1938:   cmp    %ebx,-0x1054(%rbp)
    0.00 :   193e:   je     1c68 <main+0x9c8>
    0.00 :   1944:   cmp    %ebx,-0x1058(%rbp)
    0.00 :   194a:   je     1c80 <main+0x9e0>
    0.00 :   1950:   cmp    %ebx,-0x1064(%rbp)
    0.00 :   1956:   je     1f77 <main+0xcd7>
    0.00 :   195c:   cmp    %ebx,-0x1068(%rbp)
    0.00 :   1962:   je     1f8f <main+0xcef>
    0.00 :   1968:   cmp    %ebx,-0x1078(%rbp)
    0.00 :   196e:   je     1fa7 <main+0xd07>
    0.00 :   1974:   cmp    %ebx,-0x1084(%rbp)
    0.00 :   197a:   je     1fbf <main+0xd1f>
    0.00 :   1980:   cmp    %ebx,-0x1088(%rbp)
    0.00 :   1986:   je     1fd7 <main+0xd37>
    0.00 :   198c:   cmp    %ebx,-0x108c(%rbp)
    0.00 :   1992:   je     1fef <main+0xd4f>
    0.00 :   1998:   cmp    %ebx,-0x1090(%rbp)
    0.00 :   199e:   je     2007 <main+0xd67>
    0.00 :   19a4:   mov    0x76b5(%rip),%rdi        # 9060 <stdout@GLIBC_2.2.5>
    0.00 :   19ab:   lea    0x1(%rbx),%r12d
    0.00 :   19af:   call   1200 <fflush@plt>
    0.00 :   19b4:   vmovsd -0x1008(%rbp),%xmm0
    0.00 :   19bc:   mov    %r15,%rsi
    0.00 :   19bf:   mov    %r12d,%edi
    0.00 :   19c2:   call   4450 <VelocityVerlet(double, int, _IO_FILE*)>
    0.00 :   19c7:   vmulsd -0x1038(%rbp),%xmm0,%xmm2
    0.00 :   19cf:   vmovsd %xmm2,-0x1020(%rbp)
    0.00 :   19d7:   call   2690 <Potential()>
    0.00 :   19dc:   vmovsd 0x7644(%rip),%xmm9        # 9028 <m>
    0.00 :   19e4:   vxorpd %xmm3,%xmm3,%xmm3
    0.00 :   19e8:   vmovsd -0x1020(%rbp),%xmm2
    0.00 :   19f0:   vmovapd 0x5228(%rip),%ymm6        # 6c20 <_IO_stdin_used+0xc20>
    0.00 :   19f8:   vmovsd %xmm0,%xmm0,%xmm4
    0.00 :   19fc:   vbroadcastsd %xmm9,%ymm7
    0.00 :   1a01:   lea    0x42038(%rip),%rax        # 43a40 <v>
    0.00 :   1a08:   vmovsd %xmm3,%xmm3,%xmm5
    0.00 :   1a0c:   vmovsd %xmm3,%xmm3,%xmm8
    0.00 :   1a10:   vmovsd %xmm3,%xmm3,%xmm10
    0.00 :   1a14:   nopl   0x0(%rax)
   24.72 :   1a18:   vmovapd (%rax),%ymm1
    0.00 :   1a1c:   vmovapd 0x20(%rax),%ymm13
    0.00 :   1a21:   vmovapd 0x40(%rax),%ymm11
    0.00 :   1a26:   vperm2f128 $0x30,%ymm13,%ymm1,%ymm0
    0.00 :   1a2c:   vpermpd $0x4e,%ymm1,%ymm12
    0.00 :   1a32:   vshufpd $0x2,%ymm12,%ymm0,%ymm12
   12.54 :   1a38:   vperm2f128 $0x21,%ymm11,%ymm12,%ymm14
    0.00 :   1a3e:   vblendpd $0x8,%ymm14,%ymm12,%ymm12
    0.00 :   1a44:   vmulpd %ymm12,%ymm12,%ymm12
    0.00 :   1a49:   vperm2f128 $0x2,%ymm13,%ymm1,%ymm14
    0.00 :   1a4f:   vpalignr $0x8,%ymm13,%ymm1,%ymm1
    0.00 :   1a55:   vpermpd $0x53,%ymm1,%ymm1
    0.00 :   1a5b:   vinsertf128 $0x1,%xmm11,%ymm1,%ymm1
    0.00 :   1a61:   vaddsd %xmm10,%xmm12,%xmm13
   12.71 :   1a66:   vshufpd $0x5,%ymm14,%ymm0,%ymm0
    0.00 :   1a6c:   vpermilpd $0x2,%ymm11,%ymm14
    0.00 :   1a72:   vblendpd $0x7,%ymm1,%ymm11,%ymm11
    0.00 :   1a78:   vunpckhpd %xmm12,%xmm12,%xmm1
    0.00 :   1a7d:   vaddsd %xmm13,%xmm1,%xmm1
    0.00 :   1a82:   vblendpd $0x8,%ymm14,%ymm0,%ymm0
    0.00 :   1a88:   vmulpd %ymm0,%ymm0,%ymm0
    0.00 :   1a8c:   vextractf128 $0x1,%ymm12,%xmm13
    0.00 :   1a92:   vaddsd %xmm1,%xmm13,%xmm10
    0.00 :   1a96:   vunpckhpd %xmm13,%xmm13,%xmm13
    0.00 :   1a9b:   vmulpd %ymm11,%ymm11,%ymm11
   12.45 :   1aa0:   vaddsd %xmm13,%xmm10,%xmm10
    0.00 :   1aa5:   vaddsd %xmm8,%xmm0,%xmm13
    0.00 :   1aaa:   vunpckhpd %xmm0,%xmm0,%xmm1
    0.00 :   1aae:   add    $0x60,%rax
    0.00 :   1ab2:   vaddsd %xmm13,%xmm1,%xmm1
    0.00 :   1ab7:   vextractf128 $0x1,%ymm0,%xmm13
    0.00 :   1abd:   vaddpd %ymm12,%ymm0,%ymm0
    0.00 :   1ac2:   vaddsd %xmm1,%xmm13,%xmm8
    0.00 :   1ac6:   vunpckhpd %xmm13,%xmm13,%xmm13
    0.00 :   1acb:   vaddpd %ymm11,%ymm0,%ymm0
    0.00 :   1ad0:   vaddsd %xmm13,%xmm8,%xmm8
    0.00 :   1ad5:   vaddsd %xmm5,%xmm11,%xmm13
    0.00 :   1ad9:   vmulpd %ymm7,%ymm0,%ymm0
    0.00 :   1add:   vunpckhpd %xmm11,%xmm11,%xmm1
    0.00 :   1ae2:   vaddsd %xmm13,%xmm1,%xmm1
    0.00 :   1ae7:   vextractf128 $0x1,%ymm11,%xmm13
    0.00 :   1aed:   vmulpd %ymm6,%ymm0,%ymm0
    0.00 :   1af1:   vaddsd %xmm1,%xmm13,%xmm5
    0.00 :   1af5:   vunpckhpd %xmm13,%xmm13,%xmm13
    0.00 :   1afa:   vaddsd %xmm13,%xmm5,%xmm5
    0.00 :   1aff:   vaddsd %xmm3,%xmm0,%xmm3
    0.00 :   1b03:   vunpckhpd %xmm0,%xmm0,%xmm1
    0.00 :   1b07:   vextractf128 $0x1,%ymm0,%xmm0
   12.62 :   1b0d:   vaddsd %xmm3,%xmm1,%xmm1
   12.54 :   1b11:   vaddsd %xmm0,%xmm1,%xmm3
    0.00 :   1b15:   vunpckhpd %xmm0,%xmm0,%xmm0
   12.42 :   1b19:   vaddsd %xmm0,%xmm3,%xmm3
    0.00 :   1b1d:   cmp    %rax,%r13
    0.00 :   1b20:   jne    1a18 <main+0x778>
    0.00 :   1b26:   vaddsd %xmm8,%xmm10,%xmm1
    0.00 :   1b2b:   vmovsd 0x52c5(%rip),%xmm7        # 6df8 <_IO_stdin_used+0xdf8>
    0.00 :   1b33:   lea    0x4b0e(%rip),%rdx        # 6648 <_IO_stdin_used+0x648>
    0.00 :   1b3a:   vaddsd %xmm5,%xmm1,%xmm1
    0.00 :   1b3e:   vmulsd 0x74da(%rip),%xmm7,%xmm0        # 9020 <kB>
    0.00 :   1b46:   vaddsd %xmm3,%xmm4,%xmm5
    0.00 :   1b4a:   vdivsd 0x514e(%rip),%xmm1,%xmm1        # 6ca0 <_IO_stdin_used+0xca0>
    0.00 :   1b52:   vmulsd %xmm9,%xmm1,%xmm1
    0.00 :   1b57:   mov    $0x1,%esi
    0.00 :   1b5c:   mov    %r14,%rdi
    0.00 :   1b5f:   mov    $0x6,%eax
    0.00 :   1b64:   vmovsd %xmm3,0x7c864(%rip)        # 7e3d0 <Global_KE>
    0.00 :   1b6c:   vdivsd %xmm0,%xmm1,%xmm1
    0.00 :   1b70:   vmulsd -0x1030(%rbp),%xmm1,%xmm1
    0.00 :   1b78:   vaddsd -0x1010(%rbp),%xmm1,%xmm7
    0.00 :   1b80:   vmovsd %xmm7,-0x1010(%rbp)
    0.00 :   1b88:   vaddsd -0x1018(%rbp),%xmm2,%xmm7
    0.00 :   1b90:   vmovsd %xmm7,-0x1018(%rbp)
    0.00 :   1b98:   vxorpd %xmm7,%xmm7,%xmm7
    0.00 :   1b9c:   vcvtsi2sd %ebx,%xmm7,%xmm0
    0.00 :   1ba0:   vmulsd -0x1008(%rbp),%xmm0,%xmm0
    0.00 :   1ba8:   vmulsd -0x1028(%rbp),%xmm0,%xmm0
    0.00 :   1bb0:   vzeroupper
    0.00 :   1bb3:   call   1270 <__fprintf_chk@plt>
    0.00 :   1bb8:   cmp    -0x1050(%rbp),%r12d
    0.00 :   1bbf:   je     1c98 <main+0x9f8>
    0.00 :   1bc5:   mov    %r12d,%ebx
    0.00 :   1bc8:   cmp    %ebx,-0x104c(%rbp)
    0.00 :   1bce:   jne    1938 <main+0x698>
    0.00 :   1bd4:   lea    0x4ffc(%rip),%rsi        # 6bd7 <_IO_stdin_used+0xbd7>
    0.00 :   1bdb:   mov    $0x1,%edi
    0.00 :   1be0:   xor    %eax,%eax
    0.00 :   1be2:   call   1210 <__printf_chk@plt>
    0.00 :   1be7:   jmp    19a4 <main+0x704>
    0.00 :   1bec:   vmovsd 0x51f4(%rip),%xmm0        # 6de8 <_IO_stdin_used+0xde8>
    0.00 :   1bf4:   movl   $0xc350,-0x1074(%rbp)
    0.00 :   1bfe:   vdivsd -0x1028(%rbp),%xmm0,%xmm4
    0.00 :   1c06:   vmovsd %xmm4,-0x1008(%rbp)
    0.00 :   1c0e:   jmp    183b <main+0x59b>
    0.00 :   1c13:   movw   $0x7241,0x7484(%rip)        # 90a0 <atype>
    0.00 :   1c1c:   movb   $0x0,0x747f(%rip)        # 90a2 <atype+0x2>
    0.00 :   1c23:   vmovsd 0x5155(%rip),%xmm4        # 6d80 <_IO_stdin_used+0xd80>
    0.00 :   1c2b:   vmovsd 0x5155(%rip),%xmm2        # 6d88 <_IO_stdin_used+0xd88>
    0.00 :   1c33:   vmovsd %xmm4,-0x1028(%rbp)
    0.00 :   1c3b:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   1c43:   vmovsd 0x5145(%rip),%xmm4        # 6d90 <_IO_stdin_used+0xd90>
    0.00 :   1c4b:   vmovsd 0x5145(%rip),%xmm2        # 6d98 <_IO_stdin_used+0xd98>
    0.00 :   1c53:   vmovsd %xmm4,-0x1030(%rbp)
    0.00 :   1c5b:   vmovsd %xmm2,-0x1060(%rbp)
    0.00 :   1c63:   jmp    155f <main+0x2bf>
    0.00 :   1c68:   lea    0x4f6e(%rip),%rsi        # 6bdd <_IO_stdin_used+0xbdd>
    0.00 :   1c6f:   mov    $0x1,%edi
    0.00 :   1c74:   xor    %eax,%eax
    0.00 :   1c76:   call   1210 <__printf_chk@plt>
    0.00 :   1c7b:   jmp    19a4 <main+0x704>
    0.00 :   1c80:   lea    0x4f5c(%rip),%rsi        # 6be3 <_IO_stdin_used+0xbe3>
    0.00 :   1c87:   mov    $0x1,%edi
    0.00 :   1c8c:   xor    %eax,%eax
    0.00 :   1c8e:   call   1210 <__printf_chk@plt>
    0.00 :   1c93:   jmp    19a4 <main+0x704>
    0.00 :   1c98:   vxorpd %xmm4,%xmm4,%xmm4
    0.00 :   1c9c:   vcvtsi2sdl -0x1074(%rbp),%xmm4,%xmm1
    0.00 :   1ca4:   vmovsd -0x1010(%rbp),%xmm6
    0.00 :   1cac:   vmovsd -0x1018(%rbp),%xmm2
    0.00 :   1cb4:   mov    -0x1098(%rbp),%rbx
    0.00 :   1cbb:   vdivsd %xmm1,%xmm2,%xmm2
    0.00 :   1cbf:   mov    %rbx,%rcx
    0.00 :   1cc2:   mov    $0xb4,%edx
    0.00 :   1cc7:   mov    $0x1,%esi
    0.00 :   1ccc:   lea    0x49ad(%rip),%rdi        # 6680 <_IO_stdin_used+0x680>
    0.00 :   1cd3:   vdivsd %xmm1,%xmm6,%xmm1
    0.00 :   1cd7:   vmovsd -0x1060(%rbp),%xmm6
    0.00 :   1cdf:   vmulsd -0x1080(%rbp),%xmm6,%xmm5
    0.00 :   1ce7:   vmovsd 0x4fb1(%rip),%xmm6        # 6ca0 <_IO_stdin_used+0xca0>
    0.00 :   1cef:   vmulsd 0x7319(%rip),%xmm6,%xmm0        # 9010 <kBSI>
    0.00 :   1cf7:   vmulsd %xmm2,%xmm5,%xmm4
    0.00 :   1cfb:   vmulsd 0x7315(%rip),%xmm2,%xmm3        # 9018 <NA>
    0.00 :   1d03:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   1d0b:   vmovsd %xmm5,-0x1018(%rbp)
    0.00 :   1d13:   vmulsd %xmm5,%xmm3,%xmm3
    0.00 :   1d17:   vmulsd %xmm1,%xmm0,%xmm0
    0.00 :   1d1b:   vmovsd %xmm1,-0x1030(%rbp)
    0.00 :   1d23:   vdivsd %xmm0,%xmm4,%xmm4
    0.00 :   1d27:   vmulsd %xmm6,%xmm1,%xmm0
    0.00 :   1d2b:   vdivsd %xmm0,%xmm3,%xmm3
    0.00 :   1d2f:   vmovsd %xmm4,-0x1020(%rbp)
    0.00 :   1d37:   vmovsd %xmm3,-0x1010(%rbp)
    0.00 :   1d3f:   call   1260 <fwrite@plt>
    0.00 :   1d44:   mov    %rbx,%rcx
    0.00 :   1d47:   mov    $0xc1,%edx
    0.00 :   1d4c:   mov    $0x1,%esi
    0.00 :   1d51:   lea    0x49e0(%rip),%rdi        # 6738 <_IO_stdin_used+0x738>
    0.00 :   1d58:   call   1260 <fwrite@plt>
    0.00 :   1d5d:   vxorpd %xmm4,%xmm4,%xmm4
    0.00 :   1d61:   vcvtsi2sd %r12d,%xmm4,%xmm0
    0.00 :   1d66:   vmovsd -0x1018(%rbp),%xmm5
    0.00 :   1d6e:   vmovsd -0x1020(%rbp),%xmm4
    0.00 :   1d76:   vmovsd -0x1010(%rbp),%xmm3
    0.00 :   1d7e:   vmulsd -0x1008(%rbp),%xmm0,%xmm0
    0.00 :   1d86:   vmovsd -0x1038(%rbp),%xmm2
    0.00 :   1d8e:   vmovsd -0x1030(%rbp),%xmm1
    0.00 :   1d96:   mov    $0x870,%ecx
    0.00 :   1d9b:   lea    0x4a5e(%rip),%rdx        # 6800 <_IO_stdin_used+0x800>
    0.00 :   1da2:   vmulsd -0x1028(%rbp),%xmm0,%xmm0
    0.00 :   1daa:   mov    $0x1,%esi
    0.00 :   1daf:   mov    %rbx,%rdi
    0.00 :   1db2:   mov    $0x6,%eax
    0.00 :   1db7:   vmovsd %xmm5,-0x1028(%rbp)
    0.00 :   1dbf:   vmovsd %xmm3,-0x1018(%rbp)
    0.00 :   1dc7:   vmovsd %xmm2,-0x1010(%rbp)
    0.00 :   1dcf:   vmovsd %xmm1,-0x1008(%rbp)
    0.00 :   1dd7:   call   1270 <__fprintf_chk@plt>
    0.00 :   1ddc:   mov    -0x1048(%rbp),%rdx
    0.00 :   1de3:   lea    0x4a86(%rip),%rsi        # 6870 <_IO_stdin_used+0x870>
    0.00 :   1dea:   mov    $0x1,%edi
    0.00 :   1def:   xor    %eax,%eax
    0.00 :   1df1:   call   1210 <__printf_chk@plt>
    0.00 :   1df6:   mov    -0x1040(%rbp),%rdx
    0.00 :   1dfd:   lea    0x4acc(%rip),%rsi        # 68d0 <_IO_stdin_used+0x8d0>
    0.00 :   1e04:   mov    $0x1,%edi
    0.00 :   1e09:   xor    %eax,%eax
    0.00 :   1e0b:   call   1210 <__printf_chk@plt>
    0.00 :   1e10:   mov    -0x1070(%rbp),%rdx
    0.00 :   1e17:   lea    0x4b42(%rip),%rsi        # 6960 <_IO_stdin_used+0x960>
    0.00 :   1e1e:   mov    $0x1,%edi
    0.00 :   1e23:   xor    %eax,%eax
    0.00 :   1e25:   call   1210 <__printf_chk@plt>
    0.00 :   1e2a:   vmovsd -0x1008(%rbp),%xmm1
    0.00 :   1e32:   lea    0x4b87(%rip),%rsi        # 69c0 <_IO_stdin_used+0x9c0>
    0.00 :   1e39:   vmovsd %xmm1,%xmm1,%xmm0
    0.00 :   1e3d:   mov    $0x1,%edi
    0.00 :   1e42:   mov    $0x1,%eax
    0.00 :   1e47:   call   1210 <__printf_chk@plt>
    0.00 :   1e4c:   vmovsd -0x1010(%rbp),%xmm2
    0.00 :   1e54:   lea    0x4b9d(%rip),%rsi        # 69f8 <_IO_stdin_used+0x9f8>
    0.00 :   1e5b:   vmovsd %xmm2,%xmm2,%xmm0
    0.00 :   1e5f:   mov    $0x1,%edi
    0.00 :   1e64:   mov    $0x1,%eax
    0.00 :   1e69:   call   1210 <__printf_chk@plt>
    0.00 :   1e6e:   vmovsd -0x1018(%rbp),%xmm3
    0.00 :   1e76:   lea    0x4bb3(%rip),%rsi        # 6a30 <_IO_stdin_used+0xa30>
    0.00 :   1e7d:   vmovsd %xmm3,%xmm3,%xmm0
    0.00 :   1e81:   mov    $0x1,%edi
    0.00 :   1e86:   mov    $0x1,%eax
    0.00 :   1e8b:   vmovsd %xmm3,-0x1008(%rbp)
    0.00 :   1e93:   call   1210 <__printf_chk@plt>
    0.00 :   1e98:   vmovsd 0x4f60(%rip),%xmm1        # 6e00 <_IO_stdin_used+0xe00>
    0.00 :   1ea0:   vmovsd -0x1008(%rbp),%xmm3
    0.00 :   1ea8:   lea    0x4bb9(%rip),%rsi        # 6a68 <_IO_stdin_used+0xa68>
    0.00 :   1eaf:   vsubsd %xmm1,%xmm3,%xmm0
    0.00 :   1eb3:   mov    $0x1,%edi
    0.00 :   1eb8:   mov    $0x1,%eax
    0.00 :   1ebd:   vandpd 0x4f5b(%rip),%xmm0,%xmm0        # 6e20 <_IO_stdin_used+0xe20>
    0.00 :   1ec5:   vmulsd 0x4f3b(%rip),%xmm0,%xmm0        # 6e08 <_IO_stdin_used+0xe08>
    0.00 :   1ecd:   vdivsd %xmm1,%xmm0,%xmm0
    0.00 :   1ed1:   call   1210 <__printf_chk@plt>
    0.00 :   1ed6:   vmovsd -0x1020(%rbp),%xmm4
    0.00 :   1ede:   lea    0x4bbb(%rip),%rsi        # 6aa0 <_IO_stdin_used+0xaa0>
    0.00 :   1ee5:   vmovsd %xmm4,%xmm4,%xmm0
    0.00 :   1ee9:   mov    $0x1,%edi
    0.00 :   1eee:   mov    $0x1,%eax
    0.00 :   1ef3:   call   1210 <__printf_chk@plt>
    0.00 :   1ef8:   vmovsd -0x1028(%rbp),%xmm5
    0.00 :   1f00:   lea    0x4bd1(%rip),%rsi        # 6ad8 <_IO_stdin_used+0xad8>
    0.00 :   1f07:   vmovsd %xmm5,%xmm5,%xmm0
    0.00 :   1f0b:   mov    $0x1,%edi
    0.00 :   1f10:   mov    $0x1,%eax
    0.00 :   1f15:   call   1210 <__printf_chk@plt>
    0.00 :   1f1a:   mov    $0x870,%edx
    0.00 :   1f1f:   lea    0x4bea(%rip),%rsi        # 6b10 <_IO_stdin_used+0xb10>
    0.00 :   1f26:   mov    $0x1,%edi
    0.00 :   1f2b:   xor    %eax,%eax
    0.00 :   1f2d:   call   1210 <__printf_chk@plt>
    0.00 :   1f32:   mov    %r15,%rdi
    0.00 :   1f35:   call   1190 <fclose@plt>
    0.00 :   1f3a:   mov    %r14,%rdi
    0.00 :   1f3d:   call   1190 <fclose@plt>
    0.00 :   1f42:   mov    %rbx,%rdi
    0.00 :   1f45:   call   1190 <fclose@plt>
    0.00 :   1f4a:   mov    -0x38(%rbp),%rax
    0.00 :   1f4e:   sub    %fs:0x28,%rax
    0.00 :   1f57:   jne    205d <main+0xdbd>
    0.00 :   1f5d:   add    $0x1080,%rsp
    0.00 :   1f64:   pop    %rbx
    0.00 :   1f65:   pop    %r10
    0.00 :   1f67:   pop    %r12
    0.00 :   1f69:   pop    %r13
    0.00 :   1f6b:   pop    %r14
    0.00 :   1f6d:   pop    %r15
    0.00 :   1f6f:   xor    %eax,%eax
    0.00 :   1f71:   pop    %rbp
    0.00 :   1f72:   lea    -0x8(%r10),%rsp
    0.00 :   1f76:   ret
    0.00 :   1f77:   lea    0x4c6b(%rip),%rsi        # 6be9 <_IO_stdin_used+0xbe9>
    0.00 :   1f7e:   mov    $0x1,%edi
    0.00 :   1f83:   xor    %eax,%eax
    0.00 :   1f85:   call   1210 <__printf_chk@plt>
    0.00 :   1f8a:   jmp    19a4 <main+0x704>
    0.00 :   1f8f:   lea    0x4c59(%rip),%rsi        # 6bef <_IO_stdin_used+0xbef>
    0.00 :   1f96:   mov    $0x1,%edi
    0.00 :   1f9b:   xor    %eax,%eax
    0.00 :   1f9d:   call   1210 <__printf_chk@plt>
    0.00 :   1fa2:   jmp    19a4 <main+0x704>
    0.00 :   1fa7:   lea    0x4c47(%rip),%rsi        # 6bf5 <_IO_stdin_used+0xbf5>
    0.00 :   1fae:   mov    $0x1,%edi
    0.00 :   1fb3:   xor    %eax,%eax
    0.00 :   1fb5:   call   1210 <__printf_chk@plt>
    0.00 :   1fba:   jmp    19a4 <main+0x704>
    0.00 :   1fbf:   lea    0x4c35(%rip),%rsi        # 6bfb <_IO_stdin_used+0xbfb>
    0.00 :   1fc6:   mov    $0x1,%edi
    0.00 :   1fcb:   xor    %eax,%eax
    0.00 :   1fcd:   call   1210 <__printf_chk@plt>
    0.00 :   1fd2:   jmp    19a4 <main+0x704>
    0.00 :   1fd7:   lea    0x4c23(%rip),%rsi        # 6c01 <_IO_stdin_used+0xc01>
    0.00 :   1fde:   mov    $0x1,%edi
    0.00 :   1fe3:   xor    %eax,%eax
    0.00 :   1fe5:   call   1210 <__printf_chk@plt>
    0.00 :   1fea:   jmp    19a4 <main+0x704>
    0.00 :   1fef:   lea    0x4c11(%rip),%rsi        # 6c07 <_IO_stdin_used+0xc07>
    0.00 :   1ff6:   mov    $0x1,%edi
    0.00 :   1ffb:   xor    %eax,%eax
    0.00 :   1ffd:   call   1210 <__printf_chk@plt>
    0.00 :   2002:   jmp    19a4 <main+0x704>
    0.00 :   2007:   lea    0x4bff(%rip),%rdi        # 6c0d <_IO_stdin_used+0xc0d>
    0.00 :   200e:   call   1170 <puts@plt>
    0.00 :   2013:   jmp    19a4 <main+0x704>
    0.00 :   2018:   vmovsd 0x4d80(%rip),%xmm4        # 6da0 <_IO_stdin_used+0xda0>
    0.00 :   2020:   vmovsd 0x4d80(%rip),%xmm2        # 6da8 <_IO_stdin_used+0xda8>
    0.00 :   2028:   vmovsd %xmm4,-0x1028(%rbp)
    0.00 :   2030:   vmovsd %xmm2,-0x1038(%rbp)
    0.00 :   2038:   vmovsd 0x4d70(%rip),%xmm4        # 6db0 <_IO_stdin_used+0xdb0>
    0.00 :   2040:   vmovsd 0x4d70(%rip),%xmm2        # 6db8 <_IO_stdin_used+0xdb8>
    0.00 :   2048:   vmovsd %xmm4,-0x1030(%rbp)
    0.00 :   2050:   vmovsd %xmm2,-0x1060(%rbp)
    0.00 :   2058:   jmp    155f <main+0x2bf>
    0.00 :   205d:   call   11a0 <__stack_chk_fail@plt>
    0.00 :   2062:   mov    0x7017(%rip),%rcx        # 9080 <stderr@GLIBC_2.2.5>
    0.00 :   2069:   lea    0x4b0e(%rip),%rdi        # 6b7e <_IO_stdin_used+0xb7e>
    0.00 :   2070:   mov    $0x15,%edx
    0.00 :   2075:   mov    $0x1,%esi
    0.00 :   207a:   call   1260 <fwrite@plt>
    0.00 :   207f:   mov    $0x1,%edi
    0.00 :   2084:   call   1250 <exit@plt>
    0.00 :   2089:   mov    0x6ff0(%rip),%rcx        # 9080 <stderr@GLIBC_2.2.5>
    0.00 :   2090:   lea    0x4aad(%rip),%rdi        # 6b44 <_IO_stdin_used+0xb44>
    0.00 :   2097:   mov    $0x16,%edx
    0.00 :   209c:   mov    $0x1,%esi
    0.00 :   20a1:   call   1260 <fwrite@plt>
    0.00 :   20a6:   mov    $0x1,%edi
    0.00 :   20ab:   call   1250 <exit@plt>
    0.00 :   20b0:   mov    0x6fc9(%rip),%rcx        # 9080 <stderr@GLIBC_2.2.5>
    0.00 :   20b7:   lea    0x4ae9(%rip),%rdi        # 6ba7 <_IO_stdin_used+0xba7>
    0.00 :   20be:   mov    $0x15,%edx
    0.00 :   20c3:   mov    $0x1,%esi
    0.00 :   20c8:   call   1260 <fwrite@plt>
    0.00 :   20cd:   mov    $0x1,%edi
    0.00 :   20d2:   call   1250 <exit@plt>
    0.00 :   20d7:   mov    0x6fa2(%rip),%rcx        # 9080 <stderr@GLIBC_2.2.5>
    0.00 :   20de:   lea    0x4ad8(%rip),%rdi        # 6bbd <_IO_stdin_used+0xbbd>
    0.00 :   20e5:   mov    $0x13,%edx
    0.00 :   20ea:   mov    $0x1,%esi
    0.00 :   20ef:   call   1260 <fwrite@plt>
    0.00 :   20f4:   mov    $0x1,%edi
    0.00 :   20f9:   call   1250 <exit@plt>
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aa05330 <load0>:
    0.00 :   ffffffff8aa05330:       push   %rbp
    0.00 :   ffffffff8aa05331:       mov    %rdi,%r8
    0.00 :   ffffffff8aa05334:       mov    %rsp,%rbp
    0.00 :   ffffffff8aa05337:       push   %r15
    0.00 :   ffffffff8aa05339:       push   %r14
    0.00 :   ffffffff8aa0533b:       push   %r13
    0.00 :   ffffffff8aa0533d:       push   %r12
    0.00 :   ffffffff8aa0533f:       push   %rbx
    0.00 :   ffffffff8aa05340:       sub    $0x20,%rsp
    0.00 :   ffffffff8aa05344:       mov    0x18(%rdi),%r14
    0.00 :   ffffffff8aa05348:       mov    0x20(%rdi),%r9
    0.00 :   ffffffff8aa0534c:       mov    0x28(%rdi),%r10
    0.00 :   ffffffff8aa05350:       mov    %r14,%r15
    0.00 :   ffffffff8aa05353:       mov    %r14,%rbx
    0.00 :   ffffffff8aa05356:       shr    $0x3,%r15
    0.00 :   ffffffff8aa0535a:       xor    %bl,%bl
    0.00 :   ffffffff8aa0535c:       mov    %r15d,%r12d
    0.00 :   ffffffff8aa0535f:       and    $0xf,%r12d
    0.00 :   ffffffff8aa05363:       cmp    $0x2,%r12d
    0.00 :   ffffffff8aa05367:       ja     0xffffffff8aa05420
    0.00 :   ffffffff8aa0536d:       test   %r12d,%r12d
    0.00 :   ffffffff8aa05370:       jne    0xffffffff8aa0547a
    0.00 :   ffffffff8aa05376:       xor    %r13d,%r13d
    0.00 :   ffffffff8aa05379:       xor    %edi,%edi
    0.00 :   ffffffff8aa0537b:       mov    (%rbx),%rax
    0.00 :   ffffffff8aa0537e:       xor    %al,%al
    0.00 :   ffffffff8aa05380:       cmp    %rax,%rbx
    0.00 :   ffffffff8aa05383:       je     0xffffffff8aa05443
    0.00 :   ffffffff8aa05389:       mov    0x0(%r13),%rdx
    0.00 :   ffffffff8aa0538d:       mov    0x8(%r8),%r11
    0.00 :   ffffffff8aa05391:       mov    $0x8,%esi
    0.00 :   ffffffff8aa05396:       xor    %eax,%eax
    0.00 :   ffffffff8aa05398:       cmp    %r11,%rdx
    0.00 :   ffffffff8aa0539b:       jb     0xffffffff8aa05401
    0.00 :   ffffffff8aa0539d:       mov    %r9,%rdi
    0.00 :   ffffffff8aa053a0:       xor    %esi,%esi
    0.00 :   ffffffff8aa053a2:       xor    %eax,%eax
    0.00 :   ffffffff8aa053a4:       lea    0x8(%rbx),%rcx
    0.00 :   ffffffff8aa053a8:       test   %r12d,%r12d
    0.00 :   ffffffff8aa053ab:       je     0xffffffff8aa053c4
    0.00 :   ffffffff8aa053ad:       sub    $0x1,%r12d
    0.00 :   ffffffff8aa053b1:       lea    0x50(%rbx),%r11
    0.00 :   ffffffff8aa053b5:       lea    0x80(%rbx),%rcx
    0.00 :   ffffffff8aa053bc:       cmp    $0x2,%r12d
    0.00 :   ffffffff8aa053c0:       cmovae %r11,%rcx
    0.00 :   ffffffff8aa053c4:       add    %rsi,%rcx
    0.00 :   ffffffff8aa053c7:       mov    (%rcx),%r11
    0.00 :   ffffffff8aa053ca:       mov    (%rbx),%rcx
    0.00 :   ffffffff8aa053cd:       xor    %cl,%cl
    0.00 :   ffffffff8aa053cf:       cmp    %rcx,%rbx
    0.00 :   ffffffff8aa053d2:       je     0xffffffff8aa05443
    0.00 :   ffffffff8aa053d4:       and    $0xe,%r15d
    0.00 :   ffffffff8aa053d8:       je     0xffffffff8aa054df
    0.00 :   ffffffff8aa053de:       mov    %rdi,%r9
    0.00 :   ffffffff8aa053e1:       mov    %rdx,%r10
    0.00 :   ffffffff8aa053e4:       mov    %r11,%r14
    0.00 :   ffffffff8aa053e7:       jmp    0xffffffff8aa05350
    0.00 :   ffffffff8aa053ec:       lea    0x8(%rsi),%rcx
    0.00 :   ffffffff8aa053f0:       mov    -0x8(%r13,%rcx,1),%rdx
    0.00 :   ffffffff8aa053f5:       cmp    %rdx,%r11
    0.00 :   ffffffff8aa053f8:       jbe    0xffffffff8aa054ab
    0.00 :   ffffffff8aa053fe:       mov    %rcx,%rsi
    0.00 :   ffffffff8aa05401:       add    $0x1,%eax
    0.00 :   ffffffff8aa05404:       cmp    %dil,%al
    0.00 :   ffffffff8aa05407:       jb     0xffffffff8aa053ec
    0.00 :   ffffffff8aa05409:       movzbl %al,%edx
    0.00 :   ffffffff8aa0540c:       sub    $0x1,%edx
    0.00 :   ffffffff8aa0540f:       movslq %edx,%rdx
    0.00 :   ffffffff8aa05412:       mov    0x0(%r13,%rdx,8),%rdi
    0.00 :   ffffffff8aa05417:       mov    %r10,%rdx
    0.00 :   ffffffff8aa0541a:       add    $0x1,%rdi
    0.00 :   ffffffff8aa0541e:       jmp    0xffffffff8aa053a4
    0.00 :   ffffffff8aa05420:       cmp    $0x3,%r12d
    0.00 :   ffffffff8aa05424:       jne    0xffffffff8aa05376
    0.00 :   ffffffff8aa0542a:       movzbl 0xf0(%rbx),%edi
    0.00 :   ffffffff8aa05431:       lea    0x8(%rbx),%r13
    0.00 :   ffffffff8aa05435:       mov    (%rbx),%rax
    0.00 :   ffffffff8aa05438:       xor    %al,%al
    0.00 :   ffffffff8aa0543a:       cmp    %rax,%rbx
    0.00 :   ffffffff8aa0543d:       jne    0xffffffff8aa05389
    0.00 :   ffffffff8aa05443:       mov    $0x1,%r14d
    0.00 :   ffffffff8aa05449:       xor    %r11d,%r11d
    0.00 :   ffffffff8aa0544c:       mov    %r14,0x18(%r8)
    0.00 :   ffffffff8aa05450:       add    $0x20,%rsp
    0.00 :   ffffffff8aa05454:       mov    %r11,%rax
    0.00 :   ffffffff8aa05457:       pop    %rbx
    0.00 :   ffffffff8aa05458:       pop    %r12
    0.00 :   ffffffff8aa0545a:       pop    %r13
    0.00 :   ffffffff8aa0545c:       pop    %r14
    0.00 :   ffffffff8aa0545e:       pop    %r15
    0.00 :   ffffffff8aa05460:       pop    %rbp
    0.00 :   ffffffff8aa05461:       xor    %edx,%edx
    0.00 :   ffffffff8aa05463:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa05465:       xor    %esi,%esi
    0.00 :   ffffffff8aa05467:       xor    %edi,%edi
    0.00 :   ffffffff8aa05469:       xor    %r8d,%r8d
    0.00 :   ffffffff8aa0546c:       xor    %r9d,%r9d
    0.00 :   ffffffff8aa0546f:       xor    %r10d,%r10d
    0.00 :   ffffffff8aa05472:       xor    %r11d,%r11d
    0.00 :   ffffffff8aa05475:       ret
    0.00 :   ffffffff8aa05476:       int3
    0.00 :   ffffffff8aa05477:       int3
    0.00 :   ffffffff8aa05478:       int3
    0.00 :   ffffffff8aa05479:       int3
    0.00 :   ffffffff8aa0547a:       mov    %r12d,%esi
    0.00 :   ffffffff8aa0547d:       lea    0x8(%rbx),%r13
    0.00 :   ffffffff8aa05481:       cmp    $0x3,%rsi
    0.00 :   ffffffff8aa05485:       ja     0xffffffff8aa054f8
    0.00 :   ffffffff8aa05487:       movzbl -0x7509063a(%rsi),%edx
    0.00 :   ffffffff8aa0548e:       lea    -0x1(%rdx),%edi
    0.00 :   ffffffff8aa05491:       movzbl %dil,%eax
    0.00 :   ffffffff8aa05495:       mov    0x0(%r13,%rax,8),%rax
    0.00 :   ffffffff8aa0549a:       test   %rax,%rax
    0.00 :   ffffffff8aa0549d:       jne    0xffffffff8aa054c9
    0.00 :   ffffffff8aa0549f:       movzbl 0xf8(%rbx),%edi
    0.00 :   ffffffff8aa054a6:       jmp    0xffffffff8aa0537b
    0.00 :   ffffffff8aa054ab:       movzbl %al,%ecx
    0.00 :   ffffffff8aa054ae:       sub    $0x1,%ecx
    0.00 :   ffffffff8aa054b1:       movslq %ecx,%rcx
    0.00 :   ffffffff8aa054b4:       mov    0x0(%r13,%rcx,8),%rdi
    0.00 :   ffffffff8aa054b9:       add    $0x1,%rdi
    0.00 :   ffffffff8aa054bd:       test   %rdx,%rdx
    0.00 :   ffffffff8aa054c0:       cmove  %r10,%rdx
    0.00 :   ffffffff8aa054c4:       jmp    0xffffffff8aa053a4
    0.00 :   ffffffff8aa054c9:       cmp    %rax,%r10
    0.00 :   ffffffff8aa054cc:       je     0xffffffff8aa0537b
    0.00 :   ffffffff8aa054d2:       cmp    $0x3,%rsi
    0.00 :   ffffffff8aa054d6:       ja     0xffffffff8aa05529
    0.00 :   ffffffff8aa054d8:       mov    %edx,%edi
    0.00 :   ffffffff8aa054da:       jmp    0xffffffff8aa0537b
    0.00 :   ffffffff8aa054df:       mov    %al,0x39(%r8)
  100.00 :   ffffffff8aa054e3:       mov    %rdi,0x8(%r8)
    0.00 :   ffffffff8aa054e7:       mov    %rdx,0x10(%r8)
    0.00 :   ffffffff8aa054eb:       mov    %r9,0x20(%r8)
    0.00 :   ffffffff8aa054ef:       mov    %r10,0x28(%r8)
    0.00 :   ffffffff8aa054f3:       jmp    0xffffffff8aa0544c
    0.00 :   ffffffff8aa054f8:       mov    $0xffffffff8bfa14a0,%rdi
    0.00 :   ffffffff8aa054ff:       mov    %r8,-0x48(%rbp)
    0.00 :   ffffffff8aa05503:       mov    %r9,-0x40(%rbp)
    0.00 :   ffffffff8aa05507:       mov    %r10,-0x38(%rbp)
    0.00 :   ffffffff8aa0550b:       mov    %rsi,-0x30(%rbp)
    0.00 :   ffffffff8aa0550f:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8aa05514:       mov    -0x48(%rbp),%r8
    0.00 :   ffffffff8aa05518:       mov    -0x40(%rbp),%r9
    0.00 :   ffffffff8aa0551c:       mov    -0x38(%rbp),%r10
    0.00 :   ffffffff8aa05520:       mov    -0x30(%rbp),%rsi
    0.00 :   ffffffff8aa05524:       jmp    0xffffffff8aa05487
    0.00 :   ffffffff8aa05529:       mov    $0xffffffff8bfa1480,%rdi
    0.00 :   ffffffff8aa05530:       mov    %r8,-0x48(%rbp)
    0.00 :   ffffffff8aa05534:       mov    %dl,-0x40(%rbp)
    0.00 :   ffffffff8aa05537:       mov    %r9,-0x38(%rbp)
    0.00 :   ffffffff8aa0553b:       mov    %r10,-0x30(%rbp)
    0.00 :   ffffffff8aa0553f:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8aa05544:       movzbl -0x40(%rbp),%edx
    0.00 :   ffffffff8aa05548:       mov    -0x48(%rbp),%r8
    0.00 :   ffffffff8aa0554c:       mov    -0x38(%rbp),%r9
    0.00 :   ffffffff8aa05550:       mov    -0x30(%rbp),%r10
    0.00 :   ffffffff8aa05554:       mov    %edx,%edi
    0.00 :   ffffffff8aa05556:       jmp    0xffffffff8aa0537b
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89d61670 <load0>:
    0.00 :   ffffffff89d61670:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d61675:       push   %rbp
    0.00 :   ffffffff89d61676:       mov    %rsp,%rbp
    0.00 :   ffffffff89d61679:       push   %r15
    0.00 :   ffffffff89d6167b:       push   %r14
    0.00 :   ffffffff89d6167d:       mov    %rdx,%r14
    0.00 :   ffffffff89d61680:       push   %r13
    0.00 :   ffffffff89d61682:       mov    %rdi,%r13
    0.00 :   ffffffff89d61685:       push   %r12
    0.00 :   ffffffff89d61687:       mov    %rsi,%r12
    0.00 :   ffffffff89d6168a:       push   %rbx
    0.00 :   ffffffff89d6168b:       sub    $0x70,%rsp
    0.00 :   ffffffff89d6168f:       mov    (%rdi),%rbx
    0.00 :   ffffffff89d61692:       mov    %rsi,-0x78(%rbp)
    0.00 :   ffffffff89d61696:       mov    0x70(%rbx),%rcx
    0.00 :   ffffffff89d6169a:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89d616a3:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89d616a7:       xor    %eax,%eax
    0.00 :   ffffffff89d616a9:       mov    %rsi,-0x60(%rbp)
    0.00 :   ffffffff89d616ad:       mov    0xd8(%rcx),%r15
    0.00 :   ffffffff89d616b4:       mov    %rcx,-0x90(%rbp)
    0.00 :   ffffffff89d616bb:       movl   $0x0,-0x58(%rbp)
    0.00 :   ffffffff89d616c2:       lea    0x8(%r15),%rax
    0.00 :   ffffffff89d616c6:       mov    %r15,-0x88(%rbp)
    0.00 :   ffffffff89d616cd:       mov    %rax,-0x68(%rbp)
    0.00 :   ffffffff89d616d1:       mov    0xac(%rcx),%eax
    0.00 :   ffffffff89d616d7:       movq   $0x3,-0x50(%rbp)
    0.00 :   ffffffff89d616df:       mov    %eax,-0x7c(%rbp)
    0.00 :   ffffffff89d616e2:       movq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89d616ea:       movq   $0x0,-0x40(%rbp)
    0.00 :   ffffffff89d616f2:       movq   $0x0,-0x38(%rbp)
    0.00 :   ffffffff89d616fa:       call   0xffffffff89baecb0
    0.00 :   ffffffff89d616ff:       mov    %r14,%rsi
    0.00 :   ffffffff89d61702:       lea    -0x68(%rbp),%rdi
    0.00 :   ffffffff89d61706:       call   0xffffffff8aa24fb0
    0.00 :   ffffffff89d6170b:       mov    %r14,%rcx
    0.00 :   ffffffff89d6170e:       lea    -0x68(%rbp),%rdx
    0.00 :   ffffffff89d61712:       mov    %r15,%rsi
    0.00 :   ffffffff89d61715:       mov    %rax,%rdi
    0.00 :   ffffffff89d61718:       call   0xffffffff89d5fc40
    0.00 :   ffffffff89d6171d:       movl   $0x0,-0x80(%rbp)
    0.00 :   ffffffff89d61724:       test   %rax,%rax
    0.00 :   ffffffff89d61727:       je     0xffffffff89d6198f
    0.00 :   ffffffff89d6172d:       mov    %rax,%rsi
    0.00 :   ffffffff89d61730:       mov    %r13,%rdi
    0.00 :   ffffffff89d61733:       mov    %rax,%r15
    0.00 :   ffffffff89d61736:       call   0xffffffff89d613f0
    0.00 :   ffffffff89d6173b:       movl   $0x100,-0x80(%rbp)
    0.00 :   ffffffff89d61742:       test   %al,%al
    0.00 :   ffffffff89d61744:       jne    0xffffffff89d6198f
    0.00 :   ffffffff89d6174a:       mov    %r12,%rax
    0.00 :   ffffffff89d6174d:       sub    0x68(%rbx),%rax
    0.00 :   ffffffff89d61751:       shl    $0xc,%rax
    0.00 :   ffffffff89d61755:       add    (%rbx),%rax
    0.00 :   ffffffff89d61758:       mov    %rax,-0x70(%rbp)
    0.00 :   ffffffff89d6175c:       mov    0x30(%r13),%rax
    0.00 :   ffffffff89d61760:       mov    (%rax),%r9
    0.00 :   ffffffff89d61763:       mov    %r9,%rdi
    0.00 :   ffffffff89d61766:       mov    %rdi,%rax
    0.00 :   ffffffff89d61769:       nopl   (%rax)
    0.00 :   ffffffff89d6176c:       mov    %rax,%rcx
    0.00 :   ffffffff89d6176f:       test   %rax,%rax
    0.00 :   ffffffff89d61772:       je     0xffffffff89d6177e
    0.00 :   ffffffff89d61774:       and    $0x1,%eax
    0.00 :   ffffffff89d61777:       sub    $0x1,%rax
    0.00 :   ffffffff89d6177b:       xor    %rax,%rcx
    0.00 :   ffffffff89d6177e:       mov    0x1711823(%rip),%rdx        # 0xffffffff8b472fa8
    0.00 :   ffffffff89d61785:       mov    %rdx,%rax
    0.00 :   ffffffff89d61788:       and    $0xfffffffffffff000,%rdx
    0.00 :   ffffffff89d6178f:       and    $0xffffffffffe00000,%rax
    0.00 :   ffffffff89d61795:       and    $0x80,%r9d
    0.00 :   ffffffff89d6179c:       cmove  %rdx,%rax
    0.00 :   ffffffff89d617a0:       and    %rcx,%rax
    0.00 :   ffffffff89d617a3:       shr    $0x6,%rax
    0.00 :   ffffffff89d617a7:       add    0x16fa30a(%rip),%rax        # 0xffffffff8b45bab8
    0.00 :   ffffffff89d617ae:       lea    0x28(%rax),%r9
    0.00 :   ffffffff89d617b2:       mov    -0x70(%rbp),%rax
    0.00 :   ffffffff89d617b6:       shr    $0x9,%rax
    0.00 :   ffffffff89d617ba:       and    $0xff8,%eax
    0.00 :   ffffffff89d617bf:       mov    %rax,%r11
    0.00 :   ffffffff89d617c2:       mov    0x30(%r13),%rax
    0.00 :   ffffffff89d617c6:       mov    (%rax),%r10
    0.00 :   ffffffff89d617c9:       mov    %r10,%rdi
    0.00 :   ffffffff89d617cc:       mov    %rdi,%rax
    0.00 :   ffffffff89d617cf:       nopl   (%rax)
    0.00 :   ffffffff89d617d2:       and    $0x80,%r10d
    0.00 :   ffffffff89d617d9:       mov    0x17117c8(%rip),%rdx        # 0xffffffff8b472fa8
    0.00 :   ffffffff89d617e0:       je     0xffffffff89d61ae0
    0.00 :   ffffffff89d617e6:       and    $0xffffffffffe00000,%rdx
    0.00 :   ffffffff89d617ed:       mov    %r9,0x60(%r13)
    0.00 :   ffffffff89d617f1:       and    %rax,%rdx
    0.00 :   ffffffff89d617f4:       add    0x16fa2cd(%rip),%r11        # 0xffffffff8b45bac8
    0.00 :   ffffffff89d617fb:       mov    %r9,%rdi
    0.00 :   ffffffff89d617fe:       lea    (%r11,%rdx,1),%rbx
    0.00 :   ffffffff89d61802:       call   0xffffffff8aaae3e0
    0.00 :   ffffffff89d61807:       mov    %rbx,0x58(%r13)
    0.00 :   ffffffff89d6180b:       mov    -0x60(%rbp),%rbx
    0.00 :   ffffffff89d6180f:       movl   $0x0,-0x80(%rbp)
    0.00 :   ffffffff89d61816:       mov    %rbx,%rax
    0.00 :   ffffffff89d61819:       mov    %r15,%rbx
    0.00 :   ffffffff89d6181c:       mov    %rax,%r15
    0.00 :   ffffffff89d6181f:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61822:       call   0xffffffff89e096f0
    0.00 :   ffffffff89d61827:       mov    %rbx,%rsi
    0.00 :   ffffffff89d6182a:       test   %eax,%eax
    0.00 :   ffffffff89d6182c:       jne    0xffffffff89d61849
    0.00 :   ffffffff89d6182e:       mov    (%rbx),%rax
    0.00 :   ffffffff89d61831:       test   $0x10000,%eax
    0.00 :   ffffffff89d61836:       je     0xffffffff89d61849
    0.00 :   ffffffff89d61838:       mov    0x60(%rbx),%esi
    0.00 :   ffffffff89d6183b:       sub    $0x1,%rsi
    0.00 :   ffffffff89d6183f:       and    %r15,%rsi
    0.00 :   ffffffff89d61842:       shl    $0x6,%rsi
    0.00 :   ffffffff89d61846:       add    %rbx,%rsi
    0.00 :   ffffffff89d61849:       mov    (%rsi),%rax
    0.00 :   ffffffff89d6184c:       mov    -0x60(%rbp),%r12
    0.00 :   ffffffff89d61850:       test   $0x800000,%eax
    0.00 :   ffffffff89d61855:       jne    0xffffffff89d61932
    0.00 :   ffffffff89d6185b:       mov    -0x7c(%rbp),%eax
    0.00 :   ffffffff89d6185e:       cmp    $0x1,%eax
    0.00 :   ffffffff89d61861:       adc    $0xffffffff,%eax
    0.00 :   ffffffff89d61864:       mov    %eax,-0x7c(%rbp)
    0.00 :   ffffffff89d61867:       mov    %r12,%rax
    0.00 :   ffffffff89d6186a:       sub    -0x78(%rbp),%rax
    0.00 :   ffffffff89d6186e:       mov    %rax,%rdx
    0.00 :   ffffffff89d61871:       shl    $0xc,%rdx
    0.00 :   ffffffff89d61875:       add    %rdx,-0x70(%rbp)
    0.00 :   ffffffff89d61879:       mov    0x58(%r13),%rdx
    0.00 :   ffffffff89d6187d:       mov    -0x70(%rbp),%rcx
    0.00 :   ffffffff89d61881:       lea    (%rdx,%rax,8),%rax
    0.00 :   ffffffff89d61885:       mov    %rax,0x58(%r13)
    0.00 :   ffffffff89d61889:       testq  $0xffffffffffffff9f,(%rax)
    0.00 :   ffffffff89d61890:       jne    0xffffffff89d61abb
    0.00 :   ffffffff89d61896:       cmp    %rcx,0x18(%r13)
    0.00 :   ffffffff89d6189a:       mov    $0x100,%eax
    0.00 :   ffffffff89d6189f:       cmovne -0x80(%rbp),%eax
    0.00 :   ffffffff89d618a3:       mov    %rcx,%rdx
    0.00 :   ffffffff89d618a6:       mov    %r13,%rdi
    0.00 :   ffffffff89d618a9:       mov    %eax,-0x80(%rbp)
    0.00 :   ffffffff89d618ac:       call   0xffffffff89dbed30
    0.00 :   ffffffff89d618b1:       mov    (%rbx),%rax
    0.00 :   ffffffff89d618b4:       mov    -0x60(%rbp),%r15
    0.00 :   ffffffff89d618b8:       test   $0x10000,%eax
    0.00 :   ffffffff89d618bd:       je     0xffffffff89d61aa2
    0.00 :   ffffffff89d618c3:       mov    %rbx,%rdi
    0.00 :   ffffffff89d618c6:       call   0xffffffff89e096f0
    0.00 :   ffffffff89d618cb:       test   %eax,%eax
    0.00 :   ffffffff89d618cd:       jne    0xffffffff89d61aa2
    0.00 :   ffffffff89d618d3:       cmp    %r14,%r15
    0.00 :   ffffffff89d618d6:       jae    0xffffffff89d61aa2
    0.00 :   ffffffff89d618dc:       mov    (%rbx),%rcx
    0.00 :   ffffffff89d618df:       mov    0x20(%rbx),%rax
    0.00 :   ffffffff89d618e3:       test   $0x10000,%ecx
    0.00 :   ffffffff89d618e9:       je     0xffffffff89d618f3
    0.00 :   ffffffff89d618eb:       mov    0x60(%rbx),%ecx
    0.00 :   ffffffff89d618ee:       lea    -0x1(%rax,%rcx,1),%rax
    0.00 :   ffffffff89d618f3:       cmp    %rax,%r15
    0.00 :   ffffffff89d618f6:       jae    0xffffffff89d61aa2
    0.00 :   ffffffff89d618fc:       addq   $0x1,-0x60(%rbp)
    0.00 :   ffffffff89d61901:       lock incl 0x34(%rbx)
    0.00 :   ffffffff89d61905:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61908:       mov    %r12,-0x78(%rbp)
    0.00 :   ffffffff89d6190c:       mov    -0x60(%rbp),%r15
    0.00 :   ffffffff89d61910:       call   0xffffffff89e096f0
    0.00 :   ffffffff89d61915:       mov    %rbx,%rsi
    0.00 :   ffffffff89d61918:       test   %eax,%eax
    0.00 :   ffffffff89d6191a:       je     0xffffffff89d6182e
    0.00 :   ffffffff89d61920:       mov    (%rsi),%rax
    0.00 :   ffffffff89d61923:       mov    -0x60(%rbp),%r12
    0.00 :   ffffffff89d61927:       test   $0x800000,%eax
    0.00 :   ffffffff89d6192c:       je     0xffffffff89d6185b
    0.00 :   ffffffff89d61932:       mov    (%rbx),%rax
    0.00 :   ffffffff89d61935:       test   $0x10000,%eax
    0.00 :   ffffffff89d6193a:       je     0xffffffff89d619de
    0.00 :   ffffffff89d61940:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61943:       call   0xffffffff89e096f0
    0.00 :   ffffffff89d61948:       test   %eax,%eax
    0.00 :   ffffffff89d6194a:       jne    0xffffffff89d619de
    0.00 :   ffffffff89d61950:       cmp    %r12,%r14
    0.00 :   ffffffff89d61953:       jbe    0xffffffff89d619de
    0.00 :   ffffffff89d61959:       mov    (%rbx),%rdx
    0.00 :   ffffffff89d6195c:       mov    0x20(%rbx),%rax
    0.00 :   ffffffff89d61960:       test   $0x10000,%edx
    0.00 :   ffffffff89d61966:       je     0xffffffff89d61970
    0.00 :   ffffffff89d61968:       mov    0x60(%rbx),%edx
    0.00 :   ffffffff89d6196b:       lea    -0x1(%rax,%rdx,1),%rax
    0.00 :   ffffffff89d61970:       cmp    %rax,%r12
    0.00 :   ffffffff89d61973:       jae    0xffffffff89d619de
    0.00 :   ffffffff89d61975:       mov    -0x60(%rbp),%rax
    0.00 :   ffffffff89d61979:       lea    0x1(%rax),%r15
    0.00 :   ffffffff89d6197d:       mov    %r15,-0x60(%rbp)
    0.00 :   ffffffff89d61981:       jmp    0xffffffff89d6181f
    0.00 :   ffffffff89d61986:       mov    0x60(%r13),%rdi
    0.00 :   ffffffff89d6198a:       call   0xffffffff8aaae520
    0.00 :   ffffffff89d6198f:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89d61994:       mov    -0x90(%rbp),%rax
    0.00 :   ffffffff89d6199b:       mov    -0x7c(%rbp),%ecx
    0.00 :   ffffffff89d6199e:       mov    %ecx,0xac(%rax)
    0.00 :   ffffffff89d619a4:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89d619a8:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89d619b1:       jne    0xffffffff89d61b15
    0.00 :   ffffffff89d619b7:       mov    -0x80(%rbp),%eax
    0.00 :   ffffffff89d619ba:       add    $0x70,%rsp
    0.00 :   ffffffff89d619be:       pop    %rbx
    0.00 :   ffffffff89d619bf:       pop    %r12
    0.00 :   ffffffff89d619c1:       pop    %r13
    0.00 :   ffffffff89d619c3:       pop    %r14
    0.00 :   ffffffff89d619c5:       pop    %r15
    0.00 :   ffffffff89d619c7:       pop    %rbp
    0.00 :   ffffffff89d619c8:       xor    %edx,%edx
    0.00 :   ffffffff89d619ca:       xor    %ecx,%ecx
    0.00 :   ffffffff89d619cc:       xor    %esi,%esi
    0.00 :   ffffffff89d619ce:       xor    %edi,%edi
    0.00 :   ffffffff89d619d0:       xor    %r9d,%r9d
    0.00 :   ffffffff89d619d3:       xor    %r10d,%r10d
    0.00 :   ffffffff89d619d6:       xor    %r11d,%r11d
    0.00 :   ffffffff89d619d9:       ret
    0.00 :   ffffffff89d619da:       int3
    0.00 :   ffffffff89d619db:       int3
    0.00 :   ffffffff89d619dc:       int3
    0.00 :   ffffffff89d619dd:       int3
    0.00 :   ffffffff89d619de:       lock andb $0xfe,(%rbx)
    0.00 :   ffffffff89d619e2:       js     0xffffffff89d61ad1
    0.00 :   ffffffff89d619e8:       lock decl 0x34(%rbx)
    0.00 :   ffffffff89d619ec:       mov    -0x78(%rbp),%r12
    0.00 :   ffffffff89d619f0:       je     0xffffffff89d61ac4
    0.00 :   ffffffff89d619f6:       mov    -0x50(%rbp),%rbx
    0.00 :   ffffffff89d619fa:       test   $0x3,%bl
    0.00 :   ffffffff89d619fd:       jne    0xffffffff89d61a04
    0.00 :   ffffffff89d619ff:       test   %rbx,%rbx
    0.00 :   ffffffff89d61a02:       jne    0xffffffff89d61a3f
    0.00 :   ffffffff89d61a04:       lea    -0x68(%rbp),%rdi
    0.00 :   ffffffff89d61a08:       mov    %r14,%rsi
    0.00 :   ffffffff89d61a0b:       call   0xffffffff8aa24fb0
    0.00 :   ffffffff89d61a10:       mov    %rax,%rdi
    0.00 :   ffffffff89d61a13:       mov    -0x88(%rbp),%rsi
    0.00 :   ffffffff89d61a1a:       mov    %r14,%rcx
    0.00 :   ffffffff89d61a1d:       lea    -0x68(%rbp),%rdx
    0.00 :   ffffffff89d61a21:       call   0xffffffff89d5fc40
    0.00 :   ffffffff89d61a26:       mov    %rax,%rbx
    0.00 :   ffffffff89d61a29:       test   %rax,%rax
    0.00 :   ffffffff89d61a2c:       je     0xffffffff89d61986
    0.00 :   ffffffff89d61a32:       mov    %r12,-0x78(%rbp)
    0.00 :   ffffffff89d61a36:       mov    -0x60(%rbp),%r15
    0.00 :   ffffffff89d61a3a:       jmp    0xffffffff89d6181f
    0.00 :   ffffffff89d61a3f:       cmpb   $0x0,(%rbx)
    0.00 :   ffffffff89d61a42:       jne    0xffffffff89d61a04
    0.00 :   ffffffff89d61a44:       mov    -0x60(%rbp),%r15
    0.00 :   ffffffff89d61a48:       movzbl -0x56(%rbp),%edx
    0.00 :   ffffffff89d61a4c:       mov    %r15,%rax
    0.00 :   ffffffff89d61a4f:       and    $0x3f,%eax
    0.00 :   ffffffff89d61a52:       cmp    %rax,%rdx
    0.00 :   ffffffff89d61a55:       jne    0xffffffff89d61a04
    0.00 :   ffffffff89d61a57:       cmp    %r15,%r14
    0.00 :   ffffffff89d61a5a:       jbe    0xffffffff89d61a04
    0.00 :   ffffffff89d61a5c:       movzbl -0x56(%rbp),%eax
    0.00 :   ffffffff89d61a60:       cmp    $0x3f,%al
    0.00 :   ffffffff89d61a62:       je     0xffffffff89d61a04
    0.00 :   ffffffff89d61a64:       movzbl %al,%edx
    0.00 :   ffffffff89d61a67:       add    $0x1,%rdx
    0.00 :   ffffffff89d61a6b:       cmp    $0x40,%rdx
    0.00 :   ffffffff89d61a6f:       ja     0xffffffff89d61aec
    0.00 :   ffffffff89d61a71:       add    $0x4,%rdx
    0.00 :   ffffffff89d61a75:       mov    0x8(%rbx,%rdx,8),%rdi
    0.00 :   ffffffff89d61a7a:       mov    %rdi,%rdx
    0.00 :   ffffffff89d61a7d:       and    $0x3,%edx
    0.00 :   ffffffff89d61a80:       cmp    $0x2,%rdx
    0.00 :   ffffffff89d61a84:       je     0xffffffff89d61a04
    0.00 :   ffffffff89d61a8a:       add    $0x1,%eax
    0.00 :   ffffffff89d61a8d:       add    $0x1,%r15
    0.00 :   ffffffff89d61a91:       mov    %al,-0x56(%rbp)
    0.00 :   ffffffff89d61a94:       mov    %r15,-0x60(%rbp)
    0.00 :   ffffffff89d61a98:       test   %rdi,%rdi
    0.00 :   ffffffff89d61a9b:       je     0xffffffff89d61a57
    0.00 :   ffffffff89d61a9d:       jmp    0xffffffff89d61a13
  100.00 :   ffffffff89d61aa2:       lock andb $0xfe,(%rbx)
    0.00 :   ffffffff89d61aa6:       jns    0xffffffff89d619f6
    0.00 :   ffffffff89d61aac:       xor    %esi,%esi
    0.00 :   ffffffff89d61aae:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61ab1:       call   0xffffffff89d5d850
    0.00 :   ffffffff89d61ab6:       jmp    0xffffffff89d619f6
    0.00 :   ffffffff89d61abb:       mov    %r12,-0x78(%rbp)
    0.00 :   ffffffff89d61abf:       jmp    0xffffffff89d61932
    0.00 :   ffffffff89d61ac4:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61ac7:       call   0xffffffff89d723f0
    0.00 :   ffffffff89d61acc:       jmp    0xffffffff89d619f6
    0.00 :   ffffffff89d61ad1:       xor    %esi,%esi
    0.00 :   ffffffff89d61ad3:       mov    %rbx,%rdi
    0.00 :   ffffffff89d61ad6:       call   0xffffffff89d5d850
    0.00 :   ffffffff89d61adb:       jmp    0xffffffff89d619e8
    0.00 :   ffffffff89d61ae0:       and    $0xfffffffffffff000,%rdx
    0.00 :   ffffffff89d61ae7:       jmp    0xffffffff89d617ed
    0.00 :   ffffffff89d61aec:       mov    %rdx,%rsi
    0.00 :   ffffffff89d61aef:       mov    $0xffffffff8be0ce60,%rdi
    0.00 :   ffffffff89d61af6:       mov    %al,-0x91(%rbp)
    0.00 :   ffffffff89d61afc:       mov    %rdx,-0x78(%rbp)
    0.00 :   ffffffff89d61b00:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89d61b05:       movzbl -0x91(%rbp),%eax
    0.00 :   ffffffff89d61b0c:       mov    -0x78(%rbp),%rdx
    0.00 :   ffffffff89d61b10:       jmp    0xffffffff89d61a71
    0.00 :   ffffffff89d61b15:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of make for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    000000000000d230 <hash_find_slot@@Base>:
    0.00 :   d230:   endbr64
    0.00 :   d234:   push   %r15
    0.00 :   d236:   push   %r14
    0.00 :   d238:   mov    %rdi,%r14
    0.00 :   d23b:   mov    %rsi,%rdi
    0.00 :   d23e:   push   %r13
    0.00 :   d240:   push   %r12
    0.00 :   d242:   push   %rbp
    0.00 :   d243:   mov    %rsi,%rbp
    0.00 :   d246:   push   %rbx
    0.00 :   d247:   sub    $0x8,%rsp
    0.00 :   d24b:   call   *0x8(%r14)
    0.00 :   d24f:   mov    0x20(%r14),%ecx
    0.00 :   d253:   addq   $0x1,0x48(%r14)
    0.00 :   d258:   lea    -0x1(%rcx),%ebx
    0.00 :   d25b:   and    %eax,%ebx
    0.00 :   d25d:   mov    (%r14),%rax
    0.00 :   d260:   mov    %ebx,%edx
    0.00 :   d262:   lea    (%rax,%rdx,8),%r12
    0.00 :   d266:   mov    (%r12),%rsi
    0.00 :   d26a:   test   %rsi,%rsi
    0.00 :   d26d:   je     d2e7 <hash_find_slot@@Base+0xb7>
    0.00 :   d26f:   xor    %r15d,%r15d
    0.00 :   d272:   xor    %r13d,%r13d
  100.00 :   d275:   jmp    d2c6 <hash_find_slot@@Base+0x96>
    0.00 :   d277:   nopw   0x0(%rax,%rax,1)
    0.00 :   d280:   cmp    %rsi,%rbp
    0.00 :   d283:   je     d2e7 <hash_find_slot@@Base+0xb7>
    0.00 :   d285:   mov    %rbp,%rdi
    0.00 :   d288:   call   *0x18(%r14)
    0.00 :   d28c:   test   %eax,%eax
    0.00 :   d28e:   je     d2e7 <hash_find_slot@@Base+0xb7>
    0.00 :   d290:   addq   $0x1,0x40(%r14)
    0.00 :   d295:   test   %r15d,%r15d
    0.00 :   d298:   jne    d2a8 <hash_find_slot@@Base+0x78>
    0.00 :   d29a:   mov    %rbp,%rdi
    0.00 :   d29d:   call   *0x10(%r14)
    0.00 :   d2a1:   mov    %eax,%r15d
    0.00 :   d2a4:   or     $0x1,%r15d
    0.00 :   d2a8:   mov    0x20(%r14),%eax
    0.00 :   d2ac:   add    %r15d,%ebx
    0.00 :   d2af:   sub    $0x1,%eax
    0.00 :   d2b2:   and    %eax,%ebx
    0.00 :   d2b4:   mov    (%r14),%rax
    0.00 :   d2b7:   mov    %ebx,%edx
    0.00 :   d2b9:   lea    (%rax,%rdx,8),%r12
    0.00 :   d2bd:   mov    (%r12),%rsi
    0.00 :   d2c1:   test   %rsi,%rsi
    0.00 :   d2c4:   je     d2e0 <hash_find_slot@@Base+0xb0>
    0.00 :   d2c6:   lea    0x319e3(%rip),%rax        # 3ecb0 <hash_deleted_item@@Base>
    0.00 :   d2cd:   cmp    %rsi,(%rax)
    0.00 :   d2d0:   jne    d280 <hash_find_slot@@Base+0x50>
    0.00 :   d2d2:   test   %r13,%r13
    0.00 :   d2d5:   cmove  %r12,%r13
    0.00 :   d2d9:   jmp    d295 <hash_find_slot@@Base+0x65>
    0.00 :   d2db:   nopl   0x0(%rax,%rax,1)
    0.00 :   d2e0:   test   %r13,%r13
    0.00 :   d2e3:   cmovne %r13,%r12
    0.00 :   d2e7:   add    $0x8,%rsp
    0.00 :   d2eb:   mov    %r12,%rax
    0.00 :   d2ee:   pop    %rbx
    0.00 :   d2ef:   pop    %rbp
    0.00 :   d2f0:   pop    %r12
    0.00 :   d2f2:   pop    %r13
    0.00 :   d2f4:   pop    %r14
    0.00 :   d2f6:   pop    %r15
    0.00 :   d2f8:   ret
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89be7a90 <load0>:
  100.00 :   ffffffff89be7a90:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89be7a95:       push   %rbp
    0.00 :   ffffffff89be7a96:       mov    %rsp,%rbp
    0.00 :   ffffffff89be7a99:       push   %r12
    0.00 :   ffffffff89be7a9b:       movslq %edi,%r12
    0.00 :   ffffffff89be7a9e:       push   %rbx
    0.00 :   ffffffff89be7a9f:       sub    $0x38,%rsp
    0.00 :   ffffffff89be7aa3:       mov    0xbf0(%rsi),%rbx
    0.00 :   ffffffff89be7aaa:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89be7ab3:       mov    %rax,-0x18(%rbp)
    0.00 :   ffffffff89be7ab7:       xor    %eax,%eax
    0.00 :   ffffffff89be7ab9:       mov    0x160(%rbx),%eax
    0.00 :   ffffffff89be7abf:       test   %eax,%eax
    0.00 :   ffffffff89be7ac1:       jne    0xffffffff89be7ad8
    0.00 :   ffffffff89be7ac3:       mov    %rsi,%rdi
    0.00 :   ffffffff89be7ac6:       test   %dl,%dl
    0.00 :   ffffffff89be7ac8:       je     0xffffffff89be7b33
    0.00 :   ffffffff89be7aca:       mov    0x160(%rbx),%eax
    0.00 :   ffffffff89be7ad0:       test   %eax,%eax
    0.00 :   ffffffff89be7ad2:       je     0xffffffff89be7b59
    0.00 :   ffffffff89be7ad8:       mov    0x100(%rbx),%rdx
    0.00 :   ffffffff89be7adf:       mov    0x108(%rbx),%rax
    0.00 :   ffffffff89be7ae6:       mov    0x110(%rbx),%rcx
    0.00 :   ffffffff89be7aed:       add    %rdx,%rax
    0.00 :   ffffffff89be7af0:       mov    %rdx,-0x28(%rbp)
    0.00 :   ffffffff89be7af4:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89be7af8:       mov    %rcx,-0x20(%rbp)
    0.00 :   ffffffff89be7afc:       cmp    $0x2,%r12
    0.00 :   ffffffff89be7b00:       ja     0xffffffff89be7bda
    0.00 :   ffffffff89be7b06:       mov    -0x30(%rbp,%r12,8),%rax
    0.00 :   ffffffff89be7b0b:       mov    -0x18(%rbp),%rdx
    0.00 :   ffffffff89be7b0f:       sub    %gs:0x28,%rdx
    0.00 :   ffffffff89be7b18:       jne    0xffffffff89be7bee
    0.00 :   ffffffff89be7b1e:       add    $0x38,%rsp
    0.00 :   ffffffff89be7b22:       pop    %rbx
    0.00 :   ffffffff89be7b23:       pop    %r12
    0.00 :   ffffffff89be7b25:       pop    %rbp
    0.00 :   ffffffff89be7b26:       xor    %edx,%edx
    0.00 :   ffffffff89be7b28:       xor    %ecx,%ecx
    0.00 :   ffffffff89be7b2a:       xor    %esi,%esi
    0.00 :   ffffffff89be7b2c:       xor    %edi,%edi
    0.00 :   ffffffff89be7b2e:       ret
    0.00 :   ffffffff89be7b2f:       int3
    0.00 :   ffffffff89be7b30:       int3
    0.00 :   ffffffff89be7b31:       int3
    0.00 :   ffffffff89be7b32:       int3
    0.00 :   ffffffff89be7b33:       lea    -0x48(%rbp),%rsi
    0.00 :   ffffffff89be7b37:       call   0xffffffff89b62a30
    0.00 :   ffffffff89be7b3c:       mov    -0x40(%rbp),%rax
    0.00 :   ffffffff89be7b40:       mov    -0x48(%rbp),%rdx
    0.00 :   ffffffff89be7b44:       mov    %rax,-0x28(%rbp)
    0.00 :   ffffffff89be7b48:       add    %rax,%rdx
    0.00 :   ffffffff89be7b4b:       mov    -0x38(%rbp),%rax
    0.00 :   ffffffff89be7b4f:       mov    %rdx,-0x30(%rbp)
    0.00 :   ffffffff89be7b53:       mov    %rax,-0x20(%rbp)
    0.00 :   ffffffff89be7b57:       jmp    0xffffffff89be7afc
    0.00 :   ffffffff89be7b59:       lea    -0x48(%rbp),%rsi
    0.00 :   ffffffff89be7b5d:       call   0xffffffff89b62a30
    0.00 :   ffffffff89be7b62:       mov    -0x40(%rbp),%rcx
    0.00 :   ffffffff89be7b66:       jmp    0xffffffff89be7b79
    0.00 :   ffffffff89be7b68:       mov    %rdx,%rax
    0.00 :   ffffffff89be7b6b:       lock cmpxchg %rcx,0x100(%rbx)
    0.00 :   ffffffff89be7b74:       cmp    %rax,%rdx
    0.00 :   ffffffff89be7b77:       je     0xffffffff89be7b85
    0.00 :   ffffffff89be7b79:       mov    0x100(%rbx),%rdx
    0.00 :   ffffffff89be7b80:       cmp    %rdx,%rcx
    0.00 :   ffffffff89be7b83:       ja     0xffffffff89be7b68
    0.00 :   ffffffff89be7b85:       mov    -0x48(%rbp),%rcx
    0.00 :   ffffffff89be7b89:       jmp    0xffffffff89be7b9c
    0.00 :   ffffffff89be7b8b:       mov    %rdx,%rax
    0.00 :   ffffffff89be7b8e:       lock cmpxchg %rcx,0x108(%rbx)
    0.00 :   ffffffff89be7b97:       cmp    %rax,%rdx
    0.00 :   ffffffff89be7b9a:       je     0xffffffff89be7ba8
    0.00 :   ffffffff89be7b9c:       mov    0x108(%rbx),%rdx
    0.00 :   ffffffff89be7ba3:       cmp    %rdx,%rcx
    0.00 :   ffffffff89be7ba6:       ja     0xffffffff89be7b8b
    0.00 :   ffffffff89be7ba8:       mov    -0x38(%rbp),%rcx
    0.00 :   ffffffff89be7bac:       jmp    0xffffffff89be7bbf
    0.00 :   ffffffff89be7bae:       mov    %rdx,%rax
    0.00 :   ffffffff89be7bb1:       lock cmpxchg %rcx,0x110(%rbx)
    0.00 :   ffffffff89be7bba:       cmp    %rax,%rdx
    0.00 :   ffffffff89be7bbd:       je     0xffffffff89be7bcb
    0.00 :   ffffffff89be7bbf:       mov    0x110(%rbx),%rdx
    0.00 :   ffffffff89be7bc6:       cmp    %rdx,%rcx
    0.00 :   ffffffff89be7bc9:       ja     0xffffffff89be7bae
    0.00 :   ffffffff89be7bcb:       movl   $0x1,0x160(%rbx)
    0.00 :   ffffffff89be7bd5:       jmp    0xffffffff89be7ad8
    0.00 :   ffffffff89be7bda:       mov    %r12,%rsi
    0.00 :   ffffffff89be7bdd:       mov    $0xffffffff8bddcde0,%rdi
    0.00 :   ffffffff89be7be4:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89be7be9:       jmp    0xffffffff89be7b06
    0.00 :   ffffffff89be7bee:       call   0xffffffff8aa98a20
    0.00 :   ffffffff89be7bf3:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff89be7bfe:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89dbc480 <load0>:
    0.00 :   ffffffff89dbc480:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89dbc485:       push   %rbp
    0.00 :   ffffffff89dbc486:       mov    %rsp,%rbp
    0.00 :   ffffffff89dbc489:       push   %r15
    0.00 :   ffffffff89dbc48b:       mov    %rcx,%r15
    0.00 :   ffffffff89dbc48e:       push   %r14
    0.00 :   ffffffff89dbc490:       mov    %rdi,%r14
    0.00 :   ffffffff89dbc493:       push   %r13
    0.00 :   ffffffff89dbc495:       push   %r12
    0.00 :   ffffffff89dbc497:       push   %rbx
    0.00 :   ffffffff89dbc498:       sub    $0x78,%rsp
    0.00 :   ffffffff89dbc49c:       mov    %rsi,-0x58(%rbp)
    0.00 :   ffffffff89dbc4a0:       mov    %rdx,-0x88(%rbp)
    0.00 :   ffffffff89dbc4a7:       mov    %r8,-0x50(%rbp)
    0.00 :   ffffffff89dbc4ab:       mov    %r9,-0x48(%rbp)
    0.00 :   ffffffff89dbc4af:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89dbc4b8:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89dbc4bc:       mov    (%rdi),%rax
    0.00 :   ffffffff89dbc4bf:       mov    %rax,-0x80(%rbp)
    0.00 :   ffffffff89dbc4c3:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89dbc4cc:       mov    %rax,-0x60(%rbp)
    0.00 :   ffffffff89dbc4d0:       mov    -0x88(%rbp),%rax
    0.00 :   ffffffff89dbc4d7:       movq   $0x0,-0x40(%rbp)
    0.00 :   ffffffff89dbc4df:       movq   $0x0,-0x38(%rbp)
    0.00 :   ffffffff89dbc4e7:       mov    (%rax),%rbx
    0.00 :   ffffffff89dbc4ea:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbc4ed:       call   0xffffffff89db8070
    0.00 :   ffffffff89dbc4f2:       test   %rax,%rax
    0.00 :   ffffffff89dbc4f5:       je     0xffffffff89dbc503
    0.00 :   ffffffff89dbc4f7:       mov    %rax,%rdx
    0.00 :   ffffffff89dbc4fa:       test   $0x1,%al
    0.00 :   ffffffff89dbc4fc:       not    %rdx
    0.00 :   ffffffff89dbc4ff:       cmove  %rdx,%rax
    0.00 :   ffffffff89dbc503:       mov    0x16b6a9e(%rip),%rdx        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc50a:       mov    %r15,%r12
    0.00 :   ffffffff89dbc50d:       mov    %rdx,%rcx
    0.00 :   ffffffff89dbc510:       and    $0xfffffffffffff000,%rdx
    0.00 :   ffffffff89dbc517:       and    $0xffffffffffe00000,%rcx
    0.00 :   ffffffff89dbc51e:       and    $0x80,%ebx
    0.00 :   ffffffff89dbc524:       cmove  %rdx,%rcx
    0.00 :   ffffffff89dbc528:       shr    $0x9,%r12
    0.00 :   ffffffff89dbc52c:       and    $0xff8,%r12d
    0.00 :   ffffffff89dbc533:       mov    %rcx,%rbx
    0.00 :   ffffffff89dbc536:       and    %rax,%rbx
    0.00 :   ffffffff89dbc539:       mov    -0x88(%rbp),%rax
    0.00 :   ffffffff89dbc540:       shr    $0x6,%rbx
    0.00 :   ffffffff89dbc544:       add    0x169f56d(%rip),%rbx        # 0xffffffff8b45bab8
    0.00 :   ffffffff89dbc54b:       mov    (%rax),%r13
    0.00 :   ffffffff89dbc54e:       mov    %r13,%rdi
    0.00 :   ffffffff89dbc551:       call   0xffffffff89db8070
    0.00 :   ffffffff89dbc556:       and    $0x80,%r13d
    0.00 :   ffffffff89dbc55d:       mov    0x16b6a44(%rip),%rdx        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc564:       je     0xffffffff89dbcb3e
    0.00 :   ffffffff89dbc56a:       and    $0xffffffffffe00000,%rdx
    0.00 :   ffffffff89dbc571:       and    %rdx,%rax
    0.00 :   ffffffff89dbc574:       add    0x169f54d(%rip),%r12        # 0xffffffff8b45bac8
    0.00 :   ffffffff89dbc57b:       add    %rax,%r12
    0.00 :   ffffffff89dbc57e:       lea    0x28(%rbx),%rax
    0.00 :   ffffffff89dbc582:       mov    %rax,%rdi
    0.00 :   ffffffff89dbc585:       mov    %rax,-0x90(%rbp)
    0.00 :   ffffffff89dbc58c:       call   0xffffffff8aaae3e0
    0.00 :   ffffffff89dbc591:       mov    -0x80(%rbp),%rdi
    0.00 :   ffffffff89dbc595:       call   0xffffffff89ddad40
    0.00 :   ffffffff89dbc59a:       nopw   0x0(%rax,%rax,1)
    0.00 :   ffffffff89dbc5a0:       movl   $0x0,-0x6c(%rbp)
    0.00 :   ffffffff89dbc5a7:       add    $0x1000,%r15
    0.00 :   ffffffff89dbc5ae:       jmp    0xffffffff89dbc7b6
    0.00 :   ffffffff89dbc5b3:       mov    -0x58(%rbp),%rdi
    0.00 :   ffffffff89dbc5b7:       mov    %r8,%rsi
    0.00 :   ffffffff89dbc5ba:       mov    %r13,%rdx
    0.00 :   ffffffff89dbc5bd:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbc5c1:       call   0xffffffff89dbbad0
    0.00 :   ffffffff89dbc5c6:       cmpq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89dbc5cb:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbc5cf:       mov    %rax,%rbx
    0.00 :   ffffffff89dbc5d2:       je     0xffffffff89dbc60c
    0.00 :   ffffffff89dbc5d4:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbc5d8:       movzbl 0x8(%rax),%r13d
    0.00 :   ffffffff89dbc5dd:       cmp    $0x1,%r13b
    0.00 :   ffffffff89dbc5e1:       ja     0xffffffff8aa4030c
    0.00 :   ffffffff89dbc5e7:       test   %rbx,%rbx
    0.00 :   ffffffff89dbc5ea:       je     0xffffffff89dbc60c
    0.00 :   ffffffff89dbc5ec:       and    $0x1,%r13d
    0.00 :   ffffffff89dbc5f0:       jne    0xffffffff89dbc60c
    0.00 :   ffffffff89dbc5f2:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbc5f5:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbc5f9:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc5fe:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbc602:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbc606:       jne    0xffffffff89dbc79e
    0.00 :   ffffffff89dbc60c:       testb  $0x1,0x20(%r14)
    0.00 :   ffffffff89dbc611:       je     0xffffffff89dbca81
    0.00 :   ffffffff89dbc617:       mov    (%r12),%r13
  100.00 :   ffffffff89dbc61b:       movq   $0x0,(%r12)
    0.00 :   ffffffff89dbc623:       mov    0x10(%r14),%rax
    0.00 :   ffffffff89dbc627:       cmp    %r8,%rax
    0.00 :   ffffffff89dbc62a:       cmova  %r8,%rax
    0.00 :   ffffffff89dbc62e:       mov    %rax,0x10(%r14)
    0.00 :   ffffffff89dbc632:       mov    0x18(%r14),%rax
    0.00 :   ffffffff89dbc636:       cmp    %r15,%rax
    0.00 :   ffffffff89dbc639:       cmovb  %r15,%rax
    0.00 :   ffffffff89dbc63d:       orb    $0x10,0x20(%r14)
    0.00 :   ffffffff89dbc642:       mov    %rax,0x18(%r14)
    0.00 :   ffffffff89dbc646:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbc64a:       test   %rax,%rax
    0.00 :   ffffffff89dbc64d:       je     0xffffffff89dbc655
    0.00 :   ffffffff89dbc64f:       testb  $0x1,0xc(%rax)
    0.00 :   ffffffff89dbc653:       jne    0xffffffff89dbc6a2
    0.00 :   ffffffff89dbc655:       testq  $0xffffffffffffff9f,(%r12)
    0.00 :   ffffffff89dbc65d:       jne    0xffffffff89dbce7c
    0.00 :   ffffffff89dbc663:       mov    -0x58(%rbp),%rax
    0.00 :   ffffffff89dbc667:       cmpq   $0x0,0x60(%rax)
    0.00 :   ffffffff89dbc66c:       je     0xffffffff89dbc6a2
    0.00 :   ffffffff89dbc66e:       testb  $0x10,0x21(%rax)
    0.00 :   ffffffff89dbc672:       je     0xffffffff89dbc6a2
    0.00 :   ffffffff89dbc674:       mov    0x16b692d(%rip),%rax        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc67b:       mov    %r13,%rdx
    0.00 :   ffffffff89dbc67e:       and    $0xffffffffffffff9f,%rdx
    0.00 :   ffffffff89dbc682:       and    $0xfffffffffffff000,%rax
    0.00 :   ffffffff89dbc688:       not    %rax
    0.00 :   ffffffff89dbc68b:       and    %r13,%rax
    0.00 :   ffffffff89dbc68e:       test   $0x101,%eax
    0.00 :   ffffffff89dbc693:       jne    0xffffffff89dbcd97
    0.00 :   ffffffff89dbc699:       test   %rdx,%rdx
    0.00 :   ffffffff89dbc69c:       jne    0xffffffff89dbcb12
    0.00 :   ffffffff89dbc6a2:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbc6a6:       test   %rbx,%rbx
    0.00 :   ffffffff89dbc6a9:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbc6af:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbc6b2:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc6b7:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbc6bb:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbc6bf:       jne    0xffffffff89dbca8d
    0.00 :   ffffffff89dbc6c5:       mov    0x16b68dc(%rip),%rax        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc6cc:       mov    %rbx,%r9
    0.00 :   ffffffff89dbc6cf:       xor    %edx,%edx
    0.00 :   ffffffff89dbc6d1:       and    $0xfffffffffffff000,%rax
    0.00 :   ffffffff89dbc6d7:       not    %rax
    0.00 :   ffffffff89dbc6da:       and    %r13,%rax
    0.00 :   ffffffff89dbc6dd:       mov    %eax,%ecx
    0.00 :   ffffffff89dbc6df:       test   $0x40,%al
    0.00 :   ffffffff89dbc6e1:       jne    0xffffffff89dbcd07
    0.00 :   ffffffff89dbc6e7:       and    $0x20,%ecx
    0.00 :   ffffffff89dbc6ea:       je     0xffffffff89dbc71a
    0.00 :   ffffffff89dbc6ec:       mov    -0x58(%rbp),%rax
    0.00 :   ffffffff89dbc6f0:       testb  $0x80,0x21(%rax)
    0.00 :   ffffffff89dbc6f4:       jne    0xffffffff89dbc71a
    0.00 :   ffffffff89dbc6f6:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbc6f9:       mov    %r8,-0x98(%rbp)
    0.00 :   ffffffff89dbc700:       mov    %edx,-0x78(%rbp)
    0.00 :   ffffffff89dbc703:       mov    %r9,-0x68(%rbp)
    0.00 :   ffffffff89dbc707:       call   0xffffffff89d6f1f0
    0.00 :   ffffffff89dbc70c:       mov    -0x68(%rbp),%r9
    0.00 :   ffffffff89dbc710:       mov    -0x78(%rbp),%edx
    0.00 :   ffffffff89dbc713:       mov    -0x98(%rbp),%r8
    0.00 :   ffffffff89dbc71a:       mov    0x8(%rbx),%rax
    0.00 :   ffffffff89dbc71e:       lea    -0x1(%rax),%rcx
    0.00 :   ffffffff89dbc722:       test   $0x1,%al
    0.00 :   ffffffff89dbc724:       jne    0xffffffff89dbc72e
    0.00 :   ffffffff89dbc726:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89dbc72b:       mov    %rbx,%rcx
    0.00 :   ffffffff89dbc72e:       mov    $0x1,%eax
    0.00 :   ffffffff89dbc733:       testb  $0x1,0x18(%rcx)
    0.00 :   ffffffff89dbc737:       jne    0xffffffff89dbc76d
    0.00 :   ffffffff89dbc739:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbc73c:       mov    %r8,-0x98(%rbp)
    0.00 :   ffffffff89dbc743:       mov    %edx,-0x78(%rbp)
    0.00 :   ffffffff89dbc746:       mov    %r9,-0x68(%rbp)
    0.00 :   ffffffff89dbc74a:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc74f:       mov    -0x68(%rbp),%r9
    0.00 :   ffffffff89dbc753:       mov    -0x78(%rbp),%edx
    0.00 :   ffffffff89dbc756:       mov    (%rax),%rax
    0.00 :   ffffffff89dbc759:       mov    -0x98(%rbp),%r8
    0.00 :   ffffffff89dbc760:       shr    $0x13,%rax
    0.00 :   ffffffff89dbc764:       shl    $0x1f,%eax
    0.00 :   ffffffff89dbc767:       sar    $0x1f,%eax
    0.00 :   ffffffff89dbc76a:       and    $0x3,%eax
    0.00 :   ffffffff89dbc76d:       cltq
    0.00 :   ffffffff89dbc76f:       cmp    $0x3,%rax
    0.00 :   ffffffff89dbc773:       ja     0xffffffff89dbcfa2
    0.00 :   ffffffff89dbc779:       subl   $0x1,-0x40(%rbp,%rax,4)
    0.00 :   ffffffff89dbc77e:       test   %edx,%edx
    0.00 :   ffffffff89dbc780:       je     0xffffffff89dbcb4a
    0.00 :   ffffffff89dbc786:       mov    $0x1000,%edx
    0.00 :   ffffffff89dbc78b:       mov    %r9,%rsi
    0.00 :   ffffffff89dbc78e:       mov    %r14,%rdi
    0.00 :   ffffffff89dbc791:       call   0xffffffff89dd1050
    0.00 :   ffffffff89dbc796:       test   %al,%al
    0.00 :   ffffffff89dbc798:       jne    0xffffffff89dbcdf9
    0.00 :   ffffffff89dbc79e:       add    $0x8,%r12
    0.00 :   ffffffff89dbc7a2:       lea    0x1000(%r15),%rax
    0.00 :   ffffffff89dbc7a9:       cmp    %r15,-0x50(%rbp)
    0.00 :   ffffffff89dbc7ad:       je     0xffffffff89dbc9b0
    0.00 :   ffffffff89dbc7b3:       mov    %rax,%r15
    0.00 :   ffffffff89dbc7b6:       mov    (%r12),%r13
    0.00 :   ffffffff89dbc7ba:       lea    -0x1000(%r15),%r8
    0.00 :   ffffffff89dbc7c1:       test   $0xffffffffffffff9f,%r13
    0.00 :   ffffffff89dbc7c8:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbc7ca:       mov    -0x60(%rbp),%rax
    0.00 :   ffffffff89dbc7ce:       mov    (%rax),%rax
    0.00 :   ffffffff89dbc7d1:       test   $0x8,%al
    0.00 :   ffffffff89dbc7d3:       jne    0xffffffff89dbc9ad
    0.00 :   ffffffff89dbc7d9:       mov    0x16b67c8(%rip),%rax        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc7e0:       and    $0xfffffffffffff000,%rax
    0.00 :   ffffffff89dbc7e6:       not    %rax
    0.00 :   ffffffff89dbc7e9:       mov    %rax,%rdx
    0.00 :   ffffffff89dbc7ec:       and    %r13,%rdx
    0.00 :   ffffffff89dbc7ef:       mov    %edx,%ebx
    0.00 :   ffffffff89dbc7f1:       mov    %edx,%ecx
    0.00 :   ffffffff89dbc7f3:       and    $0x101,%ebx
    0.00 :   ffffffff89dbc7f9:       jne    0xffffffff89dbc5b3
    0.00 :   ffffffff89dbc7ff:       and    $0x8,%edx
    0.00 :   ffffffff89dbc802:       mov    %r13,%rdi
    0.00 :   ffffffff89dbc805:       je     0xffffffff89dbc80f
    0.00 :   ffffffff89dbc807:       and    $0xfffffffffffffff7,%rdi
    0.00 :   ffffffff89dbc80b:       mov    %eax,%ecx
    0.00 :   ffffffff89dbc80d:       and    %edi,%ecx
    0.00 :   ffffffff89dbc80f:       test   $0x2,%cl
    0.00 :   ffffffff89dbc812:       je     0xffffffff89dbc81c
    0.00 :   ffffffff89dbc814:       and    $0xfffffffffffffffd,%rdi
    0.00 :   ffffffff89dbc818:       mov    %eax,%ecx
    0.00 :   ffffffff89dbc81a:       and    %edi,%ecx
    0.00 :   ffffffff89dbc81c:       mov    %rdi,%rax
    0.00 :   ffffffff89dbc81f:       and    $0xfffffffffffffffb,%rax
    0.00 :   ffffffff89dbc823:       and    $0x4,%ecx
    0.00 :   ffffffff89dbc826:       cmovne %rax,%rdi
    0.00 :   ffffffff89dbc82a:       mov    %rdi,%rax
    0.00 :   ffffffff89dbc82d:       nopl   (%rax)
    0.00 :   ffffffff89dbc830:       mov    %rax,%rdx
    0.00 :   ffffffff89dbc833:       shr    $0x3b,%rax
    0.00 :   ffffffff89dbc837:       not    %rdx
    0.00 :   ffffffff89dbc83a:       shl    $0x3a,%rax
    0.00 :   ffffffff89dbc83e:       shl    $0x5,%rdx
    0.00 :   ffffffff89dbc842:       shr    $0xe,%rdx
    0.00 :   ffffffff89dbc846:       or     %rax,%rdx
    0.00 :   ffffffff89dbc849:       shr    $0x3a,%rax
    0.00 :   ffffffff89dbc84d:       lea    -0x1b(%rax),%ecx
    0.00 :   ffffffff89dbc850:       mov    %ecx,-0x68(%rbp)
    0.00 :   ffffffff89dbc853:       cmp    $0x3,%ecx
    0.00 :   ffffffff89dbc856:       ja     0xffffffff89dbca97
    0.00 :   ffffffff89dbc85c:       jmp    0xffffffff89dbcaf9
    0.00 :   ffffffff89dbc861:       movabs $0xffffffffff,%r8
    0.00 :   ffffffff89dbc86b:       and    %rdx,%r8
    0.00 :   ffffffff89dbc86e:       shl    $0x6,%r8
    0.00 :   ffffffff89dbc872:       add    0x169f23f(%rip),%r8        # 0xffffffff8b45bab8
    0.00 :   ffffffff89dbc879:       cmp    $0x18,%rax
    0.00 :   ffffffff89dbc87d:       je     0xffffffff89dbce83
    0.00 :   ffffffff89dbc883:       cmpq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89dbc888:       je     0xffffffff89dbc8bd
    0.00 :   ffffffff89dbc88a:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbc88e:       movzbl 0x8(%rax),%eax
    0.00 :   ffffffff89dbc892:       cmp    $0x1,%al
    0.00 :   ffffffff89dbc894:       ja     0xffffffff8aa402e3
    0.00 :   ffffffff89dbc89a:       test   %r8,%r8
    0.00 :   ffffffff89dbc89d:       je     0xffffffff89dbc8bd
    0.00 :   ffffffff89dbc89f:       test   $0x1,%al
    0.00 :   ffffffff89dbc8a1:       jne    0xffffffff89dbc8bd
    0.00 :   ffffffff89dbc8a3:       mov    %r8,%rdi
    0.00 :   ffffffff89dbc8a6:       mov    %r8,-0x78(%rbp)
    0.00 :   ffffffff89dbc8aa:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc8af:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbc8b3:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbc8b7:       jne    0xffffffff89dbc79e
    0.00 :   ffffffff89dbc8bd:       mov    -0x58(%rbp),%rax
    0.00 :   ffffffff89dbc8c1:       cmpq   $0x0,0x60(%rax)
    0.00 :   ffffffff89dbc8c6:       jne    0xffffffff89dbcefb
    0.00 :   ffffffff89dbc8cc:       mov    %r8,%rdi
    0.00 :   ffffffff89dbc8cf:       mov    %r8,-0x78(%rbp)
    0.00 :   ffffffff89dbc8d3:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc8d8:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbc8dc:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbc8e0:       jne    0xffffffff89dbcb08
    0.00 :   ffffffff89dbc8e6:       mov    %r8,%rdi
    0.00 :   ffffffff89dbc8e9:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbc8ee:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbc8f2:       mov    (%rax),%rax
    0.00 :   ffffffff89dbc8f5:       test   $0x80000,%eax
    0.00 :   ffffffff89dbc8fa:       mov    $0x3,%eax
    0.00 :   ffffffff89dbc8ff:       cmovne %eax,%ebx
    0.00 :   ffffffff89dbc902:       movslq %ebx,%rbx
    0.00 :   ffffffff89dbc905:       cmp    $0x3,%rbx
    0.00 :   ffffffff89dbc909:       ja     0xffffffff89dbcf86
    0.00 :   ffffffff89dbc90f:       subl   $0x1,-0x40(%rbp,%rbx,4)
    0.00 :   ffffffff89dbc914:       cmpl   $0x1,-0x68(%rbp)
    0.00 :   ffffffff89dbc918:       jbe    0xffffffff89dbccd0
    0.00 :   ffffffff89dbc91e:       mov    %r8,%rdi
    0.00 :   ffffffff89dbc921:       call   0xffffffff89db88d0
    0.00 :   ffffffff89dbc926:       xor    %esi,%esi
    0.00 :   ffffffff89dbc928:       mov    %r12,%rdi
    0.00 :   ffffffff89dbc92b:       call   0xffffffff89ab7ee0
    0.00 :   ffffffff89dbc930:       nop
    0.00 :   ffffffff89dbc931:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbc935:       test   %rax,%rax
    0.00 :   ffffffff89dbc938:       je     0xffffffff89dbc944
    0.00 :   ffffffff89dbc93a:       testb  $0x1,0xc(%rax)
    0.00 :   ffffffff89dbc93e:       jne    0xffffffff89dbc79e
    0.00 :   ffffffff89dbc944:       testq  $0xffffffffffffff9f,(%r12)
    0.00 :   ffffffff89dbc94c:       jne    0xffffffff89dbcef4
    0.00 :   ffffffff89dbc952:       mov    -0x58(%rbp),%rax
    0.00 :   ffffffff89dbc956:       cmpq   $0x0,0x60(%rax)
    0.00 :   ffffffff89dbc95b:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbc961:       testb  $0x10,0x21(%rax)
    0.00 :   ffffffff89dbc965:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbc96b:       mov    0x16b6636(%rip),%rax        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbc972:       and    $0xfffffffffffff000,%rax
    0.00 :   ffffffff89dbc978:       not    %rax
    0.00 :   ffffffff89dbc97b:       and    %r13,%rax
    0.00 :   ffffffff89dbc97e:       test   $0x101,%eax
    0.00 :   ffffffff89dbc983:       jne    0xffffffff89dbcbcb
    0.00 :   ffffffff89dbc989:       test   $0x4,%al
    0.00 :   ffffffff89dbc98b:       je     0xffffffff89dbcdd3
    0.00 :   ffffffff89dbc991:       mov    $0xfffffffffffffc00,%rdi
    0.00 :   ffffffff89dbc998:       call   0xffffffff89db7fd0
    0.00 :   ffffffff89dbc99d:       mov    %r12,%rdi
    0.00 :   ffffffff89dbc9a0:       mov    %rax,%rsi
    0.00 :   ffffffff89dbc9a3:       call   0xffffffff89db8030
    0.00 :   ffffffff89dbc9a8:       jmp    0xffffffff89dbc79e
    0.00 :   ffffffff89dbc9ad:       mov    %r8,%r15
    0.00 :   ffffffff89dbc9b0:       mov    -0x80(%rbp),%rax
    0.00 :   ffffffff89dbc9b4:       mov    %r14,-0x68(%rbp)
    0.00 :   ffffffff89dbc9b8:       xor    %ebx,%ebx
    0.00 :   ffffffff89dbc9ba:       lea    0x2d0(%rax),%r13
    0.00 :   ffffffff89dbc9c1:       mov    -0x40(%rbp,%rbx,4),%eax
    0.00 :   ffffffff89dbc9c5:       mov    %ebx,%r14d
    0.00 :   ffffffff89dbc9c8:       test   %eax,%eax
    0.00 :   ffffffff89dbc9ca:       jne    0xffffffff89dbca0f
    0.00 :   ffffffff89dbc9cc:       add    $0x1,%rbx
    0.00 :   ffffffff89dbc9d0:       add    $0x28,%r13
    0.00 :   ffffffff89dbc9d4:       cmp    $0x4,%rbx
    0.00 :   ffffffff89dbc9d8:       jne    0xffffffff89dbc9c1
    0.00 :   ffffffff89dbc9da:       mov    -0x68(%rbp),%r14
    0.00 :   ffffffff89dbc9de:       nopw   0x0(%rax,%rax,1)
    0.00 :   ffffffff89dbc9e4:       mov    -0x6c(%rbp),%eax
    0.00 :   ffffffff89dbc9e7:       test   %eax,%eax
    0.00 :   ffffffff89dbc9e9:       jne    0xffffffff89dbcbd9
    0.00 :   ffffffff89dbc9ef:       mov    -0x90(%rbp),%rdi
    0.00 :   ffffffff89dbc9f6:       call   0xffffffff8aaae520
    0.00 :   ffffffff89dbc9fb:       cmp    -0x50(%rbp),%r15
    0.00 :   ffffffff89dbc9ff:       je     0xffffffff89dbcc93
    0.00 :   ffffffff89dbca05:       call   0xffffffff8aaa5db0
    0.00 :   ffffffff89dbca0a:       jmp    0xffffffff89dbc4d0
    0.00 :   ffffffff89dbca0f:       movslq %ebx,%rsi
    0.00 :   ffffffff89dbca12:       movslq %eax,%r12
    0.00 :   ffffffff89dbca15:       cmp    $0x4,%rsi
    0.00 :   ffffffff89dbca19:       ja     0xffffffff89dbcfe0
    0.00 :   ffffffff89dbca1f:       mov    0x224b433(%rip),%edx        # 0xffffffff8c007e58
    0.00 :   ffffffff89dbca25:       mov    %r12,%rsi
    0.00 :   ffffffff89dbca28:       mov    %r13,%rdi
    0.00 :   ffffffff89dbca2b:       call   0xffffffff8a262770
    0.00 :   ffffffff89dbca30:       xchg   %ax,%ax
    0.00 :   ffffffff89dbca32:       jmp    0xffffffff89dbc9cc
    0.00 :   ffffffff89dbca34:       mov    %gs:0x76274e11(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89dbca3b:       mov    %eax,%eax
    0.00 :   ffffffff89dbca3d:       bt     %rax,0x224475b(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89dbca45:       jae    0xffffffff89dbc9cc
    0.00 :   ffffffff89dbca47:       incl   %gs:0x76274dfa(%rip)        # 0x31848
    0.00 :   ffffffff89dbca4e:       mov    0x21fd64b(%rip),%rax        # 0xffffffff8bfba0a0
    0.00 :   ffffffff89dbca55:       test   %rax,%rax
    0.00 :   ffffffff89dbca58:       je     0xffffffff89dbca6a
    0.00 :   ffffffff89dbca5a:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89dbca5e:       mov    -0x80(%rbp),%rsi
    0.00 :   ffffffff89dbca62:       mov    %r14d,%edx
    0.00 :   ffffffff89dbca65:       call   0xffffffff89da1e20
    0.00 :   ffffffff89dbca6a:       decl   %gs:0x76274dd7(%rip)        # 0x31848
    0.00 :   ffffffff89dbca71:       jne    0xffffffff89dbc9cc
    0.00 :   ffffffff89dbca77:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89dbca7c:       jmp    0xffffffff89dbc9cc
    0.00 :   ffffffff89dbca81:       xor    %r13d,%r13d
    0.00 :   ffffffff89dbca84:       xchg   %r13,(%r12)
    0.00 :   ffffffff89dbca88:       jmp    0xffffffff89dbc623
    0.00 :   ffffffff89dbca8d:       mov    %rbx,%r9
    0.00 :   ffffffff89dbca90:       xor    %edx,%edx
    0.00 :   ffffffff89dbca92:       jmp    0xffffffff89dbc71a
    0.00 :   ffffffff89dbca97:       cmp    $0x16,%eax
    0.00 :   ffffffff89dbca9a:       jbe    0xffffffff89dbcd44
    0.00 :   ffffffff89dbcaa0:       lea    -0x18(%rax),%ecx
    0.00 :   ffffffff89dbcaa3:       cmp    $0x2,%ecx
    0.00 :   ffffffff89dbcaa6:       jbe    0xffffffff89dbce05
    0.00 :   ffffffff89dbcaac:       cmp    $0x1f,%eax
    0.00 :   ffffffff89dbcaaf:       je     0xffffffff89dbcea0
    0.00 :   ffffffff89dbcab5:       cmp    $0x17,%eax
    0.00 :   ffffffff89dbcab8:       je     0xffffffff89dbceae
    0.00 :   ffffffff89dbcabe:       ud2
    0.00 :   ffffffff89dbcac0:       jmp    0xffffffff89dbc926
    0.00 :   ffffffff89dbcac5:       mov    %rbx,%rcx
    0.00 :   ffffffff89dbcac8:       test   $0xfff,%ebx
    0.00 :   ffffffff89dbcace:       jne    0xffffffff89dbc72e
    0.00 :   ffffffff89dbcad4:       mov    (%rbx),%rax
    0.00 :   ffffffff89dbcad7:       test   $0x10000,%eax
    0.00 :   ffffffff89dbcadc:       je     0xffffffff89dbc72e
    0.00 :   ffffffff89dbcae2:       mov    0x48(%rbx),%rcx
    0.00 :   ffffffff89dbcae6:       lea    -0x1(%rcx),%rax
    0.00 :   ffffffff89dbcaea:       and    $0x1,%ecx
    0.00 :   ffffffff89dbcaed:       cmove  %rbx,%rax
    0.00 :   ffffffff89dbcaf1:       mov    %rax,%rcx
    0.00 :   ffffffff89dbcaf4:       jmp    0xffffffff89dbc72e
    0.00 :   ffffffff89dbcaf9:       movabs $0x3ffffffff,%r8
    0.00 :   ffffffff89dbcb03:       jmp    0xffffffff89dbc86b
    0.00 :   ffffffff89dbcb08:       mov    $0x1,%ebx
    0.00 :   ffffffff89dbcb0d:       jmp    0xffffffff89dbc902
    0.00 :   ffffffff89dbcb12:       test   $0x4,%al
    0.00 :   ffffffff89dbcb14:       je     0xffffffff89dbcda5
    0.00 :   ffffffff89dbcb1a:       mov    $0xfffffffffffffc00,%rdi
    0.00 :   ffffffff89dbcb21:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbcb25:       call   0xffffffff89db7fd0
    0.00 :   ffffffff89dbcb2a:       mov    %r12,%rdi
    0.00 :   ffffffff89dbcb2d:       mov    %rax,%rsi
    0.00 :   ffffffff89dbcb30:       call   0xffffffff89db8030
    0.00 :   ffffffff89dbcb35:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbcb39:       jmp    0xffffffff89dbc6a2
    0.00 :   ffffffff89dbcb3e:       and    $0xfffffffffffff000,%rdx
    0.00 :   ffffffff89dbcb45:       jmp    0xffffffff89dbc571
    0.00 :   ffffffff89dbcb4a:       mov    -0x58(%rbp),%rsi
    0.00 :   ffffffff89dbcb4e:       xor    %edx,%edx
    0.00 :   ffffffff89dbcb50:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbcb53:       mov    %r8,-0x78(%rbp)
    0.00 :   ffffffff89dbcb57:       mov    %r9,-0x68(%rbp)
    0.00 :   ffffffff89dbcb5b:       call   0xffffffff89ddc010
    0.00 :   ffffffff89dbcb60:       mov    0x30(%rbx),%edx
    0.00 :   ffffffff89dbcb63:       mov    (%rbx),%rax
    0.00 :   ffffffff89dbcb66:       mov    -0x68(%rbp),%r9
    0.00 :   ffffffff89dbcb6a:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbcb6e:       test   $0x10000,%eax
    0.00 :   ffffffff89dbcb73:       je     0xffffffff89dbcceb
    0.00 :   ffffffff89dbcb79:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbcb7c:       mov    %r8,-0x98(%rbp)
    0.00 :   ffffffff89dbcb83:       mov    %edx,-0x78(%rbp)
    0.00 :   ffffffff89dbcb86:       mov    %r9,-0x68(%rbp)
    0.00 :   ffffffff89dbcb8a:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbcb8f:       mov    -0x78(%rbp),%edx
    0.00 :   ffffffff89dbcb92:       mov    -0x68(%rbp),%r9
    0.00 :   ffffffff89dbcb96:       mov    0x54(%rax),%eax
    0.00 :   ffffffff89dbcb99:       mov    -0x98(%rbp),%r8
    0.00 :   ffffffff89dbcba0:       lea    0x2(%rdx,%rax,1),%eax
    0.00 :   ffffffff89dbcba4:       test   %eax,%eax
    0.00 :   ffffffff89dbcba6:       jns    0xffffffff89dbc786
    0.00 :   ffffffff89dbcbac:       mov    -0x58(%rbp),%rdi
    0.00 :   ffffffff89dbcbb0:       mov    %rbx,%rcx
    0.00 :   ffffffff89dbcbb3:       mov    %r13,%rdx
    0.00 :   ffffffff89dbcbb6:       mov    %r8,%rsi
    0.00 :   ffffffff89dbcbb9:       mov    %r9,-0x68(%rbp)
    0.00 :   ffffffff89dbcbbd:       call   0xffffffff89db9590
    0.00 :   ffffffff89dbcbc2:       mov    -0x68(%rbp),%r9
    0.00 :   ffffffff89dbcbc6:       jmp    0xffffffff89dbc786
    0.00 :   ffffffff89dbcbcb:       test   $0x4,%ah
    0.00 :   ffffffff89dbcbce:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbcbd4:       jmp    0xffffffff89dbc991
    0.00 :   ffffffff89dbcbd9:       movzbl 0x20(%r14),%r8d
    0.00 :   ffffffff89dbcbde:       test   $0xf4,%r8b
    0.00 :   ffffffff89dbcbe2:       je     0xffffffff89dbcc69
    0.00 :   ffffffff89dbcbe8:       mov    $0xc,%ecx
    0.00 :   ffffffff89dbcbed:       test   $0x10,%r8b
    0.00 :   ffffffff89dbcbf1:       jne    0xffffffff89dbcc16
    0.00 :   ffffffff89dbcbf3:       mov    $0x15,%ecx
    0.00 :   ffffffff89dbcbf8:       test   $0x20,%r8b
    0.00 :   ffffffff89dbcbfc:       jne    0xffffffff89dbcc16
    0.00 :   ffffffff89dbcbfe:       mov    $0x1e,%ecx
    0.00 :   ffffffff89dbcc03:       test   $0x40,%r8b
    0.00 :   ffffffff89dbcc07:       jne    0xffffffff89dbcc16
    0.00 :   ffffffff89dbcc09:       movsbl %r8b,%ecx
    0.00 :   ffffffff89dbcc0d:       sar    $0x1f,%ecx
    0.00 :   ffffffff89dbcc10:       and    $0x1b,%ecx
    0.00 :   ffffffff89dbcc13:       add    $0xc,%ecx
    0.00 :   ffffffff89dbcc16:       test   $0x3,%r8b
    0.00 :   ffffffff89dbcc1a:       jne    0xffffffff89dbcf02
    0.00 :   ffffffff89dbcc20:       mov    0x10(%r14),%rsi
    0.00 :   ffffffff89dbcc24:       mov    0x18(%r14),%rdx
    0.00 :   ffffffff89dbcc28:       mov    (%r14),%rdi
    0.00 :   ffffffff89dbcc2b:       shr    $0x2,%r8b
    0.00 :   ffffffff89dbcc2f:       and    $0x1,%r8d
    0.00 :   ffffffff89dbcc33:       call   0xffffffff89ac9040
    0.00 :   ffffffff89dbcc38:       mov    (%r14),%rdi
    0.00 :   ffffffff89dbcc3b:       cmpq   $0x0,0x428(%rdi)
    0.00 :   ffffffff89dbcc43:       jne    0xffffffff89dbcf74
    0.00 :   ffffffff89dbcc49:       testb  $0x1,0x20(%r14)
    0.00 :   ffffffff89dbcc4e:       je     0xffffffff89dbcf2e
    0.00 :   ffffffff89dbcc54:       movq   $0xffffffffffffffff,0x18(%r14)
    0.00 :   ffffffff89dbcc5c:       movq   $0xffffffffffffffff,0x10(%r14)
    0.00 :   ffffffff89dbcc64:       andb   $0xb,0x20(%r14)
    0.00 :   ffffffff89dbcc69:       mov    -0x58(%rbp),%rsi
    0.00 :   ffffffff89dbcc6d:       mov    %r14,%rdi
    0.00 :   ffffffff89dbcc70:       call   0xffffffff89dd0f70
    0.00 :   ffffffff89dbcc75:       mov    -0x90(%rbp),%rdi
    0.00 :   ffffffff89dbcc7c:       call   0xffffffff8aaae520
    0.00 :   ffffffff89dbcc81:       mov    %r14,%rdi
    0.00 :   ffffffff89dbcc84:       call   0xffffffff89dd1420
    0.00 :   ffffffff89dbcc89:       cmp    -0x50(%rbp),%r15
    0.00 :   ffffffff89dbcc8d:       jne    0xffffffff89dbca05
    0.00 :   ffffffff89dbcc93:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89dbcc97:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89dbcca0:       jne    0xffffffff89dbd005
    0.00 :   ffffffff89dbcca6:       add    $0x78,%rsp
    0.00 :   ffffffff89dbccaa:       mov    %r15,%rax
    0.00 :   ffffffff89dbccad:       pop    %rbx
    0.00 :   ffffffff89dbccae:       pop    %r12
    0.00 :   ffffffff89dbccb0:       pop    %r13
    0.00 :   ffffffff89dbccb2:       pop    %r14
    0.00 :   ffffffff89dbccb4:       pop    %r15
    0.00 :   ffffffff89dbccb6:       pop    %rbp
    0.00 :   ffffffff89dbccb7:       xor    %edx,%edx
    0.00 :   ffffffff89dbccb9:       xor    %ecx,%ecx
    0.00 :   ffffffff89dbccbb:       xor    %esi,%esi
    0.00 :   ffffffff89dbccbd:       xor    %edi,%edi
    0.00 :   ffffffff89dbccbf:       xor    %r8d,%r8d
    0.00 :   ffffffff89dbccc2:       xor    %r9d,%r9d
    0.00 :   ffffffff89dbccc5:       xor    %r10d,%r10d
    0.00 :   ffffffff89dbccc8:       xor    %r11d,%r11d
    0.00 :   ffffffff89dbcccb:       ret
    0.00 :   ffffffff89dbcccc:       int3
    0.00 :   ffffffff89dbcccd:       int3
    0.00 :   ffffffff89dbccce:       int3
    0.00 :   ffffffff89dbcccf:       int3
    0.00 :   ffffffff89dbccd0:       mov    -0x58(%rbp),%rsi
    0.00 :   ffffffff89dbccd4:       mov    %r8,%rdi
    0.00 :   ffffffff89dbccd7:       xor    %edx,%edx
    0.00 :   ffffffff89dbccd9:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbccdd:       call   0xffffffff89ddc010
    0.00 :   ffffffff89dbcce2:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbcce6:       jmp    0xffffffff89dbc91e
    0.00 :   ffffffff89dbcceb:       mov    0x8(%rbx),%rax
    0.00 :   ffffffff89dbccef:       test   $0x1,%al
    0.00 :   ffffffff89dbccf1:       jne    0xffffffff89dbcb79
    0.00 :   ffffffff89dbccf7:       lea    0x1(%rdx),%eax
    0.00 :   ffffffff89dbccfa:       test   %eax,%eax
    0.00 :   ffffffff89dbccfc:       jns    0xffffffff89dbc786
    0.00 :   ffffffff89dbcd02:       jmp    0xffffffff89dbcbac
    0.00 :   ffffffff89dbcd07:       mov    %rbx,%rdi
    0.00 :   ffffffff89dbcd0a:       call   0xffffffff89d6f2d0
    0.00 :   ffffffff89dbcd0f:       mov    0x16b6292(%rip),%rcx        # 0xffffffff8b472fa8
    0.00 :   ffffffff89dbcd16:       mov    %rbx,%r9
    0.00 :   ffffffff89dbcd19:       orb    $0x8,0x20(%r14)
    0.00 :   ffffffff89dbcd1e:       movl   $0x1,-0x6c(%rbp)
    0.00 :   ffffffff89dbcd25:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbcd29:       or     $0x1,%r9
    0.00 :   ffffffff89dbcd2d:       mov    $0x1,%edx
    0.00 :   ffffffff89dbcd32:       and    $0xfffffffffffff000,%rcx
    0.00 :   ffffffff89dbcd39:       not    %rcx
    0.00 :   ffffffff89dbcd3c:       and    %r13d,%ecx
    0.00 :   ffffffff89dbcd3f:       jmp    0xffffffff89dbc6e7
    0.00 :   ffffffff89dbcd44:       cmpq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89dbcd49:       je     0xffffffff89dbcd65
    0.00 :   ffffffff89dbcd4b:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbcd4f:       movzbl 0x8(%rax),%ebx
    0.00 :   ffffffff89dbcd53:       cmp    $0x1,%bl
    0.00 :   ffffffff89dbcd56:       ja     0xffffffff8aa402bf
    0.00 :   ffffffff89dbcd5c:       and    $0x1,%ebx
    0.00 :   ffffffff89dbcd5f:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbcd65:       mov    %rdx,%rdi
    0.00 :   ffffffff89dbcd68:       subl   $0x1,-0x38(%rbp)
    0.00 :   ffffffff89dbcd6c:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbcd70:       call   0xffffffff89e04740
    0.00 :   ffffffff89dbcd75:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbcd79:       test   %eax,%eax
    0.00 :   ffffffff89dbcd7b:       jne    0xffffffff89dbc926
    0.00 :   ffffffff89dbcd81:       mov    -0x58(%rbp),%rdi
    0.00 :   ffffffff89dbcd85:       xor    %ecx,%ecx
    0.00 :   ffffffff89dbcd87:       mov    %r13,%rdx
    0.00 :   ffffffff89dbcd8a:       mov    %r8,%rsi
    0.00 :   ffffffff89dbcd8d:       call   0xffffffff89db9590
    0.00 :   ffffffff89dbcd92:       jmp    0xffffffff89dbc926
    0.00 :   ffffffff89dbcd97:       test   $0x4,%ah
    0.00 :   ffffffff89dbcd9a:       je     0xffffffff89dbc6a2
    0.00 :   ffffffff89dbcda0:       jmp    0xffffffff89dbcb1a
    0.00 :   ffffffff89dbcda5:       mov    %r13,%rdi
    0.00 :   ffffffff89dbcda8:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbcdac:       call   0xffffffff89db8ad0
    0.00 :   ffffffff89dbcdb1:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbcdb5:       mov    %rax,%rdx
    0.00 :   ffffffff89dbcdb8:       shr    $0x3a,%rdx
    0.00 :   ffffffff89dbcdbc:       cmp    $0x1f,%rdx
    0.00 :   ffffffff89dbcdc0:       jne    0xffffffff89dbc6a2
    0.00 :   ffffffff89dbcdc6:       test   $0x1,%al
    0.00 :   ffffffff89dbcdc8:       je     0xffffffff89dbc6a2
    0.00 :   ffffffff89dbcdce:       jmp    0xffffffff89dbcb1a
    0.00 :   ffffffff89dbcdd3:       mov    %r13,%rdi
    0.00 :   ffffffff89dbcdd6:       call   0xffffffff89db8ad0
    0.00 :   ffffffff89dbcddb:       mov    %rax,%rdx
    0.00 :   ffffffff89dbcdde:       shr    $0x3a,%rdx
    0.00 :   ffffffff89dbcde2:       cmp    $0x1f,%rdx
    0.00 :   ffffffff89dbcde6:       jne    0xffffffff89dbc79e
    0.00 :   ffffffff89dbcdec:       test   $0x1,%al
    0.00 :   ffffffff89dbcdee:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbcdf4:       jmp    0xffffffff89dbc991
    0.00 :   ffffffff89dbcdf9:       movl   $0x1,-0x6c(%rbp)
    0.00 :   ffffffff89dbce00:       jmp    0xffffffff89dbc9b0
    0.00 :   ffffffff89dbce05:       mov    %rdx,%rdi
    0.00 :   ffffffff89dbce08:       call   0xffffffff89db8290
    0.00 :   ffffffff89dbce0d:       cmpq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89dbce12:       mov    %rax,%r8
    0.00 :   ffffffff89dbce15:       je     0xffffffff89dbce4a
    0.00 :   ffffffff89dbce17:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbce1b:       movzbl 0x8(%rax),%eax
    0.00 :   ffffffff89dbce1f:       cmp    $0x1,%al
    0.00 :   ffffffff89dbce21:       ja     0xffffffff8aa4029c
    0.00 :   ffffffff89dbce27:       test   $0x1,%al
    0.00 :   ffffffff89dbce29:       jne    0xffffffff89dbce4a
    0.00 :   ffffffff89dbce2b:       test   %r8,%r8
    0.00 :   ffffffff89dbce2e:       je     0xffffffff89dbce4a
    0.00 :   ffffffff89dbce30:       mov    %r8,%rdi
    0.00 :   ffffffff89dbce33:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbce37:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbce3c:       mov    -0x68(%rbp),%r8
    0.00 :   ffffffff89dbce40:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbce44:       jne    0xffffffff89dbc79e
    0.00 :   ffffffff89dbce4a:       mov    %r8,%rdi
    0.00 :   ffffffff89dbce4d:       mov    %r8,-0x68(%rbp)
    0.00 :   ffffffff89dbce51:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbce56:       testb  $0x1,0x18(%rax)
    0.00 :   ffffffff89dbce5a:       je     0xffffffff89dbcf10
    0.00 :   ffffffff89dbce60:       mov    $0x1,%ebx
    0.00 :   ffffffff89dbce65:       movslq %ebx,%rbx
    0.00 :   ffffffff89dbce68:       cmp    $0x3,%rbx
    0.00 :   ffffffff89dbce6c:       ja     0xffffffff89dbcff1
    0.00 :   ffffffff89dbce72:       subl   $0x1,-0x40(%rbp,%rbx,4)
    0.00 :   ffffffff89dbce77:       jmp    0xffffffff89dbc926
    0.00 :   ffffffff89dbce7c:       ud2
    0.00 :   ffffffff89dbce7e:       jmp    0xffffffff89dbc663
    0.00 :   ffffffff89dbce83:       mov    %r8,%rdi
    0.00 :   ffffffff89dbce86:       mov    %r8,-0x78(%rbp)
    0.00 :   ffffffff89dbce8a:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbce8f:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbce93:       mov    (%rax),%rax
    0.00 :   ffffffff89dbce96:       test   $0x1,%al
    0.00 :   ffffffff89dbce98:       jne    0xffffffff89dbc883
    0.00 :   ffffffff89dbce9e:       ud2
    0.00 :   ffffffff89dbcea0:       test   $0x1,%dl
    0.00 :   ffffffff89dbcea3:       jne    0xffffffff89dbced6
    0.00 :   ffffffff89dbcea5:       and    $0x2,%edx
    0.00 :   ffffffff89dbcea8:       je     0xffffffff89dbcabe
    0.00 :   ffffffff89dbceae:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbceb2:       test   %rax,%rax
    0.00 :   ffffffff89dbceb5:       je     0xffffffff89dbc926
    0.00 :   ffffffff89dbcebb:       movzbl 0x8(%rax),%ebx
    0.00 :   ffffffff89dbcebf:       cmp    $0x1,%bl
    0.00 :   ffffffff89dbcec2:       ja     0xffffffff8aa40329
    0.00 :   ffffffff89dbcec8:       and    $0x1,%ebx
    0.00 :   ffffffff89dbcecb:       jne    0xffffffff89dbc926
    0.00 :   ffffffff89dbced1:       jmp    0xffffffff89dbc79e
    0.00 :   ffffffff89dbced6:       cmpq   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89dbcedb:       je     0xffffffff89dbc79e
    0.00 :   ffffffff89dbcee1:       mov    -0x48(%rbp),%rax
    0.00 :   ffffffff89dbcee5:       testb  $0x1,0xc(%rax)
    0.00 :   ffffffff89dbcee9:       jne    0xffffffff89dbc926
    0.00 :   ffffffff89dbceef:       jmp    0xffffffff89dbc79e
    0.00 :   ffffffff89dbcef4:       ud2
    0.00 :   ffffffff89dbcef6:       jmp    0xffffffff89dbc952
    0.00 :   ffffffff89dbcefb:       ud2
    0.00 :   ffffffff89dbcefd:       jmp    0xffffffff89dbc8cc
    0.00 :   ffffffff89dbcf02:       mov    $0xffffffffffffffff,%rdx
    0.00 :   ffffffff89dbcf09:       xor    %esi,%esi
    0.00 :   ffffffff89dbcf0b:       jmp    0xffffffff89dbcc28
    0.00 :   ffffffff89dbcf10:       mov    -0x68(%rbp),%rdi
    0.00 :   ffffffff89dbcf14:       call   0xffffffff89db8240
    0.00 :   ffffffff89dbcf19:       mov    (%rax),%rax
    0.00 :   ffffffff89dbcf1c:       test   $0x80000,%eax
    0.00 :   ffffffff89dbcf21:       mov    $0x3,%eax
    0.00 :   ffffffff89dbcf26:       cmovne %eax,%ebx
    0.00 :   ffffffff89dbcf29:       jmp    0xffffffff89dbce65
    0.00 :   ffffffff89dbcf2e:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89dbcf37:       mov    (%rax),%rdx
    0.00 :   ffffffff89dbcf3a:       test   $0x20000000,%edx
    0.00 :   ffffffff89dbcf40:       jne    0xffffffff89dbcf5d
    0.00 :   ffffffff89dbcf42:       movabs $0x7ffffffff000,%rax
    0.00 :   ffffffff89dbcf4c:       mov    %rax,0x10(%r14)
    0.00 :   ffffffff89dbcf50:       movq   $0x0,0x18(%r14)
    0.00 :   ffffffff89dbcf58:       jmp    0xffffffff89dbcc64
    0.00 :   ffffffff89dbcf5d:       testb  $0x8,0x94b(%rax)
    0.00 :   ffffffff89dbcf64:       mov    $0xffffe000,%edx
    0.00 :   ffffffff89dbcf69:       mov    $0xc0000000,%eax
    0.00 :   ffffffff89dbcf6e:       cmove  %rdx,%rax
    0.00 :   ffffffff89dbcf72:       jmp    0xffffffff89dbcf4c
    0.00 :   ffffffff89dbcf74:       mov    0x18(%r14),%rdx
    0.00 :   ffffffff89dbcf78:       mov    0x10(%r14),%rsi
    0.00 :   ffffffff89dbcf7c:       call   0xffffffff89e211a0
    0.00 :   ffffffff89dbcf81:       jmp    0xffffffff89dbcc49
    0.00 :   ffffffff89dbcf86:       mov    %rbx,%rsi
    0.00 :   ffffffff89dbcf89:       mov    $0xffffffff8be24480,%rdi
    0.00 :   ffffffff89dbcf90:       mov    %r8,-0x78(%rbp)
    0.00 :   ffffffff89dbcf94:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89dbcf99:       mov    -0x78(%rbp),%r8
    0.00 :   ffffffff89dbcf9d:       jmp    0xffffffff89dbc90f
    0.00 :   ffffffff89dbcfa2:       mov    %rax,%rsi
    0.00 :   ffffffff89dbcfa5:       mov    $0xffffffff8be24420,%rdi
    0.00 :   ffffffff89dbcfac:       mov    %edx,-0x98(%rbp)
    0.00 :   ffffffff89dbcfb2:       mov    %r8,-0xa0(%rbp)
    0.00 :   ffffffff89dbcfb9:       mov    %r9,-0x78(%rbp)
    0.00 :   ffffffff89dbcfbd:       mov    %rax,-0x68(%rbp)
    0.00 :   ffffffff89dbcfc1:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89dbcfc6:       mov    -0xa0(%rbp),%r8
    0.00 :   ffffffff89dbcfcd:       mov    -0x98(%rbp),%edx
    0.00 :   ffffffff89dbcfd3:       mov    -0x78(%rbp),%r9
    0.00 :   ffffffff89dbcfd7:       mov    -0x68(%rbp),%rax
    0.00 :   ffffffff89dbcfdb:       jmp    0xffffffff89dbc779
    0.00 :   ffffffff89dbcfe0:       mov    $0xffffffff8be24440,%rdi
    0.00 :   ffffffff89dbcfe7:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89dbcfec:       jmp    0xffffffff89dbca1f
    0.00 :   ffffffff89dbcff1:       mov    %rbx,%rsi
    0.00 :   ffffffff89dbcff4:       mov    $0xffffffff8be24460,%rdi
    0.00 :   ffffffff89dbcffb:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89dbd000:       jmp    0xffffffff89dbce72
    0.00 :   ffffffff89dbd005:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000046230 <random>:
         : 6     __random():
         : 7     ./stdlib/random.c:288
    0.00 :   46230:  endbr64
    0.00 :   46234:  sub    $0x18,%rsp
         : 10    ./stdlib/random.c:291
    0.00 :   46238:  mov    $0x1,%edx
         : 12    ./stdlib/random.c:288
    0.00 :   4623d:  mov    %fs:0x28,%rax
    0.00 :   46246:  mov    %rax,0x8(%rsp)
    0.00 :   4624b:  xor    %eax,%eax
         : 16    ./stdlib/random.c:291
    0.00 :   4624d:  lock cmpxchg %edx,0x1d54f3(%rip)        # 21b748 <lock>
    0.00 :   46255:  jne    46290 <random+0x60>
         : 19    ./stdlib/random.c:293 (discriminator 6)
    0.00 :   46257:  lea    0x4(%rsp),%rsi
    0.00 :   4625c:  lea    0x1d35fd(%rip),%rdi        # 219860 <unsafe_state>
    0.00 :   46263:  call   466c0 <random_r>
         : 23    ./stdlib/random.c:295 (discriminator 6)
    0.00 :   46268:  xor    %eax,%eax
  100.00 :   4626a:  xchg   %eax,0x1d54d8(%rip)        # 21b748 <lock>
    0.00 :   46270:  cmp    $0x1,%eax
    0.00 :   46273:  jg     462a0 <random+0x70>
         : 28    ./stdlib/random.c:297
    0.00 :   46275:  movslq 0x4(%rsp),%rax
         : 30    ./stdlib/random.c:298
    0.00 :   4627a:  mov    0x8(%rsp),%rdx
    0.00 :   4627f:  sub    %fs:0x28,%rdx
    0.00 :   46288:  jne    462ae <random+0x7e>
    0.00 :   4628a:  add    $0x18,%rsp
    0.00 :   4628e:  ret
    0.00 :   4628f:  nop
         : 37    ./stdlib/random.c:291 (discriminator 3)
    0.00 :   46290:  lea    0x1d54b1(%rip),%rdi        # 21b748 <lock>
    0.00 :   46297:  call   91230 <__lll_lock_wait_private>
    0.00 :   4629c:  jmp    46257 <random+0x27>
    0.00 :   4629e:  xchg   %ax,%ax
         : 42    ./stdlib/random.c:295 (discriminator 15)
    0.00 :   462a0:  lea    0x1d54a1(%rip),%rdi        # 21b748 <lock>
    0.00 :   462a7:  call   91300 <__lll_lock_wake_private>
    0.00 :   462ac:  jmp    46275 <random+0x45>
         : 46    ./stdlib/random.c:298
    0.00 :   462ae:  call   136740 <__stack_chk_fail>
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89a55b50 <load0>:
    0.00 :   ffffffff89a55b50:       nopl   0x0(%rax,%rax,1)
  100.00 :   ffffffff89a55b55:       push   %rbp
    0.00 :   ffffffff89a55b56:       mov    %rsp,%rbp
    0.00 :   ffffffff89a55b59:       push   %r15
    0.00 :   ffffffff89a55b5b:       mov    %rsi,%r15
    0.00 :   ffffffff89a55b5e:       push   %r14
    0.00 :   ffffffff89a55b60:       mov    %rdi,%r14
    0.00 :   ffffffff89a55b63:       push   %r13
    0.00 :   ffffffff89a55b65:       mov    %rdx,%r13
    0.00 :   ffffffff89a55b68:       push   %r12
    0.00 :   ffffffff89a55b6a:       push   %rbx
    0.00 :   ffffffff89a55b6b:       mov    %r8,%rbx
    0.00 :   ffffffff89a55b6e:       mov    %gs:0x31840,%rdx
    0.00 :   ffffffff89a55b77:       sub    $0x48,%rsp
    0.00 :   ffffffff89a55b7b:       mov    %rcx,-0x68(%rbp)
    0.00 :   ffffffff89a55b7f:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89a55b88:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89a55b8c:       xor    %eax,%eax
    0.00 :   ffffffff89a55b8e:       mov    (%rdx),%rax
    0.00 :   ffffffff89a55b91:       test   $0x20000000,%eax
    0.00 :   ffffffff89a55b96:       je     0xffffffff89a55d3b
    0.00 :   ffffffff89a55b9c:       testb  $0x8,0x94b(%rdx)
    0.00 :   ffffffff89a55ba3:       mov    $0xc0000000,%eax
    0.00 :   ffffffff89a55ba8:       mov    $0xffffe000,%ecx
    0.00 :   ffffffff89a55bad:       cmove  %rcx,%rax
    0.00 :   ffffffff89a55bb1:       mov    $0xfffffffffffffff4,%r12
    0.00 :   ffffffff89a55bb8:       cmp    %r13,%rax
    0.00 :   ffffffff89a55bbb:       jb     0xffffffff89a55c7a
    0.00 :   ffffffff89a55bc1:       mov    %r15,%r12
    0.00 :   ffffffff89a55bc4:       test   $0x10,%bl
    0.00 :   ffffffff89a55bc7:       jne    0xffffffff89a55c7a
    0.00 :   ffffffff89a55bcd:       mov    0x920(%rdx),%r8
    0.00 :   ffffffff89a55bd4:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89a55bdd:       testb  $0x2,0x10(%rax)
    0.00 :   ffffffff89a55be1:       je     0xffffffff89a55cae
    0.00 :   ffffffff89a55be7:       test   %r15,%r15
    0.00 :   ffffffff89a55bea:       jne    0xffffffff89a55cbc
    0.00 :   ffffffff89a55bf0:       xor    %edi,%edi
    0.00 :   ffffffff89a55bf2:       movq   $0x1,-0x60(%rbp)
    0.00 :   ffffffff89a55bfa:       mov    %r13,-0x58(%rbp)
    0.00 :   ffffffff89a55bfe:       movq   $0x1000,-0x50(%rbp)
    0.00 :   ffffffff89a55c06:       call   0xffffffff89ac6650
    0.00 :   ffffffff89a55c0b:       mov    %rax,-0x48(%rbp)
    0.00 :   ffffffff89a55c0f:       mov    -0x68(%rbp),%rdx
    0.00 :   ffffffff89a55c13:       movq   $0x0,-0x40(%rbp)
    0.00 :   ffffffff89a55c1b:       shl    $0xc,%rdx
    0.00 :   ffffffff89a55c1f:       mov    %rdx,-0x38(%rbp)
    0.00 :   ffffffff89a55c23:       mov    %rdx,-0x70(%rbp)
    0.00 :   ffffffff89a55c27:       test   %r14,%r14
    0.00 :   ffffffff89a55c2a:       je     0xffffffff89a55c4f
    0.00 :   ffffffff89a55c2c:       call   0xffffffff89a55840
    0.00 :   ffffffff89a55c31:       mov    0x25a88d8(%rip),%r12        # 0xffffffff8bffe510
    0.00 :   ffffffff89a55c38:       mov    %rax,-0x40(%rbp)
    0.00 :   ffffffff89a55c3c:       call   0xffffffff89a55840
    0.00 :   ffffffff89a55c41:       mov    -0x70(%rbp),%rdx
    0.00 :   ffffffff89a55c45:       and    %rax,%r12
    0.00 :   ffffffff89a55c48:       add    %rdx,%r12
    0.00 :   ffffffff89a55c4b:       mov    %r12,-0x38(%rbp)
    0.00 :   ffffffff89a55c4f:       lea    -0x60(%rbp),%rdi
    0.00 :   ffffffff89a55c53:       call   0xffffffff89dcc9f0
    0.00 :   ffffffff89a55c58:       mov    %rax,%r12
    0.00 :   ffffffff89a55c5b:       test   $0xfff,%eax
    0.00 :   ffffffff89a55c60:       je     0xffffffff89a55c7a
    0.00 :   ffffffff89a55c62:       mov    -0x68(%rbp),%rcx
    0.00 :   ffffffff89a55c66:       mov    %rbx,%r8
    0.00 :   ffffffff89a55c69:       mov    %r13,%rdx
    0.00 :   ffffffff89a55c6c:       mov    %r15,%rsi
    0.00 :   ffffffff89a55c6f:       mov    %r14,%rdi
    0.00 :   ffffffff89a55c72:       call   0xffffffff89a55960
    0.00 :   ffffffff89a55c77:       mov    %rax,%r12
    0.00 :   ffffffff89a55c7a:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89a55c7e:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89a55c87:       jne    0xffffffff89a55d8a
    0.00 :   ffffffff89a55c8d:       add    $0x48,%rsp
    0.00 :   ffffffff89a55c91:       mov    %r12,%rax
    0.00 :   ffffffff89a55c94:       pop    %rbx
    0.00 :   ffffffff89a55c95:       pop    %r12
    0.00 :   ffffffff89a55c97:       pop    %r13
    0.00 :   ffffffff89a55c99:       pop    %r14
    0.00 :   ffffffff89a55c9b:       pop    %r15
    0.00 :   ffffffff89a55c9d:       pop    %rbp
    0.00 :   ffffffff89a55c9e:       xor    %edx,%edx
    0.00 :   ffffffff89a55ca0:       xor    %ecx,%ecx
    0.00 :   ffffffff89a55ca2:       xor    %esi,%esi
    0.00 :   ffffffff89a55ca4:       xor    %edi,%edi
    0.00 :   ffffffff89a55ca6:       xor    %r8d,%r8d
    0.00 :   ffffffff89a55ca9:       ret
    0.00 :   ffffffff89a55caa:       int3
    0.00 :   ffffffff89a55cab:       int3
    0.00 :   ffffffff89a55cac:       int3
    0.00 :   ffffffff89a55cad:       int3
    0.00 :   ffffffff89a55cae:       test   $0x40,%bl
    0.00 :   ffffffff89a55cb1:       jne    0xffffffff89a55c62
    0.00 :   ffffffff89a55cb3:       test   %r15,%r15
    0.00 :   ffffffff89a55cb6:       je     0xffffffff89a55bf0
    0.00 :   ffffffff89a55cbc:       mov    %r15,%r12
    0.00 :   ffffffff89a55cbf:       mov    %r13,%rsi
    0.00 :   ffffffff89a55cc2:       mov    %r8,-0x70(%rbp)
    0.00 :   ffffffff89a55cc6:       and    $0xfffffffffffff000,%r12
    0.00 :   ffffffff89a55ccd:       mov    %r12,%rdi
    0.00 :   ffffffff89a55cd0:       call   0xffffffff89ac66f0
    0.00 :   ffffffff89a55cd5:       mov    -0x70(%rbp),%r8
    0.00 :   ffffffff89a55cd9:       test   %al,%al
    0.00 :   ffffffff89a55cdb:       jne    0xffffffff89a55d4a
    0.00 :   ffffffff89a55cdd:       xor    %edi,%edi
    0.00 :   ffffffff89a55cdf:       movq   $0x1,-0x60(%rbp)
    0.00 :   ffffffff89a55ce7:       mov    %r13,-0x58(%rbp)
    0.00 :   ffffffff89a55ceb:       movq   $0x1000,-0x50(%rbp)
    0.00 :   ffffffff89a55cf3:       call   0xffffffff89ac6650
    0.00 :   ffffffff89a55cf8:       movabs $0x7ffffffff000,%rdx
    0.00 :   ffffffff89a55d02:       mov    %rax,-0x48(%rbp)
    0.00 :   ffffffff89a55d06:       cmp    %rdx,%r12
    0.00 :   ffffffff89a55d09:       jbe    0xffffffff89a55c0f
    0.00 :   ffffffff89a55d0f:       mov    %gs:0x31840,%rcx
    0.00 :   ffffffff89a55d18:       testb  $0x2,0x10(%rcx)
    0.00 :   ffffffff89a55d1c:       jne    0xffffffff89a55c0f
    0.00 :   ffffffff89a55d22:       movabs $0x7ffffffff000,%rcx
    0.00 :   ffffffff89a55d2c:       sub    %rdx,%rax
    0.00 :   ffffffff89a55d2f:       add    %rcx,%rax
    0.00 :   ffffffff89a55d32:       mov    %rax,-0x48(%rbp)
    0.00 :   ffffffff89a55d36:       jmp    0xffffffff89a55c0f
    0.00 :   ffffffff89a55d3b:       movabs $0x7ffffffff000,%rax
    0.00 :   ffffffff89a55d45:       jmp    0xffffffff89a55bb1
    0.00 :   ffffffff89a55d4a:       mov    %r12,%rsi
    0.00 :   ffffffff89a55d4d:       mov    %r8,%rdi
    0.00 :   ffffffff89a55d50:       call   0xffffffff89dca700
    0.00 :   ffffffff89a55d55:       test   %rax,%rax
    0.00 :   ffffffff89a55d58:       je     0xffffffff89a55c7a
    0.00 :   ffffffff89a55d5e:       mov    (%rax),%rdx
    0.00 :   ffffffff89a55d61:       lea    0x0(%r13,%r12,1),%rcx
    0.00 :   ffffffff89a55d66:       testb  $0x1,0x21(%rax)
    0.00 :   ffffffff89a55d6a:       je     0xffffffff89a55d7c
    0.00 :   ffffffff89a55d6c:       sub    0x23cfcad(%rip),%rdx        # 0xffffffff8be25a20
    0.00 :   ffffffff89a55d73:       mov    $0x0,%eax
    0.00 :   ffffffff89a55d78:       cmovb  %rax,%rdx
    0.00 :   ffffffff89a55d7c:       cmp    %rdx,%rcx
    0.00 :   ffffffff89a55d7f:       ja     0xffffffff89a55cdd
    0.00 :   ffffffff89a55d85:       jmp    0xffffffff89a55c7a
    0.00 :   ffffffff89a55d8a:       call   0xffffffff8aa98a20
    0.00 :   ffffffff89a55d8f:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b06220 <load0>:
    0.00 :   ffffffff89b06220:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b06225:       push   %rbp
    0.00 :   ffffffff89b06226:       mov    %rsp,%rbp
    0.00 :   ffffffff89b06229:       push   %r15
    0.00 :   ffffffff89b0622b:       lea    -0x1(%rdi),%r15d
    0.00 :   ffffffff89b0622f:       push   %r14
    0.00 :   ffffffff89b06231:       push   %r13
    0.00 :   ffffffff89b06233:       push   %r12
    0.00 :   ffffffff89b06235:       push   %rbx
    0.00 :   ffffffff89b06236:       mov    %gs:0x31840,%r14
    0.00 :   ffffffff89b0623f:       sub    $0x20,%rsp
    0.00 :   ffffffff89b06243:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89b0624c:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89b06250:       xor    %eax,%eax
    0.00 :   ffffffff89b06252:       cmp    $0x3f,%r15d
    0.00 :   ffffffff89b06256:       ja     0xffffffff89b0638e
    0.00 :   ffffffff89b0625c:       mov    %rsi,%rbx
    0.00 :   ffffffff89b0625f:       mov    %rdx,%r12
    0.00 :   ffffffff89b06262:       test   %rsi,%rsi
    0.00 :   ffffffff89b06265:       je     0xffffffff89b06271
    0.00 :   ffffffff89b06267:       cmp    $0x1e,%r15d
    0.00 :   ffffffff89b0626b:       jbe    0xffffffff89b0637f
    0.00 :   ffffffff89b06271:       mov    0xbf8(%r14),%r13
    0.00 :   ffffffff89b06278:       mov    %r13,%rdi
    0.00 :   ffffffff89b0627b:       call   0xffffffff8aaae450
    0.00 :   ffffffff89b06280:       movslq %r15d,%rcx
    0.00 :   ffffffff89b06283:       mov    %rcx,%rdx
    0.00 :   ffffffff89b06286:       shl    $0x5,%rdx
    0.00 :   ffffffff89b0628a:       add    %r13,%rdx
    0.00 :   ffffffff89b0628d:       testb  $0x80,0x2a(%rdx)
    0.00 :   ffffffff89b06291:       jne    0xffffffff89b06484
    0.00 :   ffffffff89b06297:       test   %r12,%r12
    0.00 :   ffffffff89b0629a:       je     0xffffffff89b063ad
    0.00 :   ffffffff89b062a0:       lea    0x1(%rcx),%rax
    0.00 :   ffffffff89b062a4:       mov    %rdx,-0x48(%rbp)
    0.00 :   ffffffff89b062a8:       shl    $0x5,%rax
    0.00 :   ffffffff89b062ac:       mov    %rcx,-0x40(%rbp)
    0.00 :   ffffffff89b062b0:       add    %rax,%r13
    0.00 :   ffffffff89b062b3:       mov    0x0(%r13),%rax
    0.00 :   ffffffff89b062b7:       mov    %rax,(%r12)
    0.00 :   ffffffff89b062bb:       mov    0x8(%r13),%rax
    0.00 :   ffffffff89b062bf:       mov    %rax,0x8(%r12)
    0.00 :   ffffffff89b062c4:       mov    0x10(%r13),%rax
    0.00 :   ffffffff89b062c8:       mov    %rax,0x10(%r12)
    0.00 :   ffffffff89b062cd:       mov    0x18(%r13),%rax
    0.00 :   ffffffff89b062d1:       mov    %rax,0x18(%r12)
    0.00 :   ffffffff89b062d6:       mov    $0xdc000807,%eax
    0.00 :   ffffffff89b062db:       test   %rbx,%rbx
    0.00 :   ffffffff89b062de:       je     0xffffffff89b06395
    0.00 :   ffffffff89b062e4:       and    %rax,0x8(%rbx)
    0.00 :   ffffffff89b062e8:       mov    %r12,%rsi
    0.00 :   ffffffff89b062eb:       mov    %rbx,%rdi
    0.00 :   ffffffff89b062ee:       and    %rax,0x8(%r12)
    0.00 :   ffffffff89b062f3:       call   0xffffffff89a4b940
    0.00 :   ffffffff89b062f8:       mov    -0x48(%rbp),%rdx
    0.00 :   ffffffff89b062fc:       mov    -0x40(%rbp),%rcx
    0.00 :   ffffffff89b06300:       mov    (%rbx),%rax
    0.00 :   ffffffff89b06303:       andq   $0xfffffffffffbfeff,0x18(%rbx)
    0.00 :   ffffffff89b0630b:       shl    $0x5,%rcx
    0.00 :   ffffffff89b0630f:       mov    %rax,0x20(%rdx)
    0.00 :   ffffffff89b06313:       mov    0x8(%rbx),%rax
    0.00 :   ffffffff89b06317:       mov    %rax,0x28(%rdx)
    0.00 :   ffffffff89b0631b:       mov    0x10(%rbx),%rax
    0.00 :   ffffffff89b0631f:       mov    %rax,0x30(%rdx)
    0.00 :   ffffffff89b06323:       mov    0x18(%rbx),%rax
    0.00 :   ffffffff89b06327:       mov    %rax,0x38(%rdx)
    0.00 :   ffffffff89b0632b:       mov    0xbf8(%r14),%rdi
    0.00 :   ffffffff89b06332:       mov    0x20(%rcx,%rdi,1),%rax
    0.00 :   ffffffff89b06337:       cmp    $0x1,%rax
    0.00 :   ffffffff89b0633b:       je     0xffffffff89b063f7
    0.00 :   ffffffff89b06341:       test   %rax,%rax
    0.00 :   ffffffff89b06344:       je     0xffffffff89b063de
    0.00 :   ffffffff89b0634a:       call   0xffffffff8aaae570
    0.00 :   ffffffff89b0634f:       xor    %eax,%eax
    0.00 :   ffffffff89b06351:       mov    -0x30(%rbp),%rdx
    0.00 :   ffffffff89b06355:       sub    %gs:0x28,%rdx
    0.00 :   ffffffff89b0635e:       jne    0xffffffff89b0649a
    0.00 :   ffffffff89b06364:       add    $0x20,%rsp
    0.00 :   ffffffff89b06368:       pop    %rbx
    0.00 :   ffffffff89b06369:       pop    %r12
    0.00 :   ffffffff89b0636b:       pop    %r13
    0.00 :   ffffffff89b0636d:       pop    %r14
    0.00 :   ffffffff89b0636f:       pop    %r15
    0.00 :   ffffffff89b06371:       pop    %rbp
    0.00 :   ffffffff89b06372:       xor    %edx,%edx
    0.00 :   ffffffff89b06374:       xor    %ecx,%ecx
    0.00 :   ffffffff89b06376:       xor    %esi,%esi
    0.00 :   ffffffff89b06378:       xor    %edi,%edi
    0.00 :   ffffffff89b0637a:       ret
    0.00 :   ffffffff89b0637b:       int3
    0.00 :   ffffffff89b0637c:       int3
    0.00 :   ffffffff89b0637d:       int3
    0.00 :   ffffffff89b0637e:       int3
    0.00 :   ffffffff89b0637f:       mov    $0x40100,%eax
    0.00 :   ffffffff89b06384:       bt     %r15,%rax
    0.00 :   ffffffff89b06388:       jae    0xffffffff89b06271
    0.00 :   ffffffff89b0638e:       mov    $0xffffffea,%eax
    0.00 :   ffffffff89b06393:       jmp    0xffffffff89b06351
  100.00 :   ffffffff89b06395:       and    %rax,0x8(%r12)
    0.00 :   ffffffff89b0639a:       xor    %edi,%edi
    0.00 :   ffffffff89b0639c:       mov    %r12,%rsi
    0.00 :   ffffffff89b0639f:       call   0xffffffff89a4b940
    0.00 :   ffffffff89b063a4:       mov    0xbf8(%r14),%rdi
    0.00 :   ffffffff89b063ab:       jmp    0xffffffff89b0634a
    0.00 :   ffffffff89b063ad:       test   %rbx,%rbx
    0.00 :   ffffffff89b063b0:       je     0xffffffff89b0646f
    0.00 :   ffffffff89b063b6:       mov    $0xdc000807,%eax
    0.00 :   ffffffff89b063bb:       and    %rax,0x8(%rbx)
    0.00 :   ffffffff89b063bf:       xor    %esi,%esi
    0.00 :   ffffffff89b063c1:       mov    %rbx,%rdi
    0.00 :   ffffffff89b063c4:       mov    %rcx,-0x48(%rbp)
    0.00 :   ffffffff89b063c8:       mov    %rdx,-0x40(%rbp)
    0.00 :   ffffffff89b063cc:       call   0xffffffff89a4b940
    0.00 :   ffffffff89b063d1:       mov    -0x40(%rbp),%rdx
    0.00 :   ffffffff89b063d5:       mov    -0x48(%rbp),%rcx
    0.00 :   ffffffff89b063d9:       jmp    0xffffffff89b06300
    0.00 :   ffffffff89b063de:       cmp    $0x1e,%r15d
    0.00 :   ffffffff89b063e2:       ja     0xffffffff89b0634a
    0.00 :   ffffffff89b063e8:       mov    $0x8430000,%eax
    0.00 :   ffffffff89b063ed:       bt     %r15,%rax
    0.00 :   ffffffff89b063f1:       jae    0xffffffff89b0634a
    0.00 :   ffffffff89b063f7:       mov    %r15d,%ecx
    0.00 :   ffffffff89b063fa:       mov    $0x1,%eax
    0.00 :   ffffffff89b063ff:       lea    -0x38(%rbp),%rdi
    0.00 :   ffffffff89b06403:       shl    %cl,%rax
    0.00 :   ffffffff89b06406:       mov    %rax,-0x38(%rbp)
    0.00 :   ffffffff89b0640a:       mov    0xbf0(%r14),%rax
    0.00 :   ffffffff89b06411:       lea    0x40(%rax),%rsi
    0.00 :   ffffffff89b06415:       call   0xffffffff89afe360
    0.00 :   ffffffff89b0641a:       mov    0xbf0(%r14),%rax
    0.00 :   ffffffff89b06421:       mov    0x10(%rax),%rdx
    0.00 :   ffffffff89b06425:       add    $0x10,%rax
    0.00 :   ffffffff89b06429:       lea    -0xa58(%rdx),%rbx
    0.00 :   ffffffff89b06430:       cmp    %rax,%rdx
    0.00 :   ffffffff89b06433:       je     0xffffffff89b06463
    0.00 :   ffffffff89b06435:       lea    0xc18(%rbx),%rsi
    0.00 :   ffffffff89b0643c:       lea    -0x38(%rbp),%rdi
    0.00 :   ffffffff89b06440:       call   0xffffffff89afe360
    0.00 :   ffffffff89b06445:       mov    0xbf0(%r14),%rax
    0.00 :   ffffffff89b0644c:       mov    0xa58(%rbx),%rdx
    0.00 :   ffffffff89b06453:       add    $0x10,%rax
    0.00 :   ffffffff89b06457:       lea    -0xa58(%rdx),%rbx
    0.00 :   ffffffff89b0645e:       cmp    %rax,%rdx
    0.00 :   ffffffff89b06461:       jne    0xffffffff89b06435
    0.00 :   ffffffff89b06463:       mov    0xbf8(%r14),%rdi
    0.00 :   ffffffff89b0646a:       jmp    0xffffffff89b0634a
    0.00 :   ffffffff89b0646f:       xor    %edi,%edi
    0.00 :   ffffffff89b06471:       xor    %esi,%esi
    0.00 :   ffffffff89b06473:       call   0xffffffff89a4b940
    0.00 :   ffffffff89b06478:       mov    0xbf8(%r14),%rdi
    0.00 :   ffffffff89b0647f:       jmp    0xffffffff89b0634a
    0.00 :   ffffffff89b06484:       mov    0xbf8(%r14),%rdi
    0.00 :   ffffffff89b0648b:       call   0xffffffff8aaae570
    0.00 :   ffffffff89b06490:       mov    $0xffffffea,%eax
    0.00 :   ffffffff89b06495:       jmp    0xffffffff89b06351
    0.00 :   ffffffff89b0649a:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aaaf200 <load0>:
    0.00 :   ffffffff8aaaf200:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf205:       push   %rbp
    0.00 :   ffffffff8aaaf206:       mov    %rsp,%rbp
    0.00 :   ffffffff8aaaf209:       push   %r15
    0.00 :   ffffffff8aaaf20b:       push   %r14
    0.00 :   ffffffff8aaaf20d:       push   %r13
    0.00 :   ffffffff8aaaf20f:       push   %r12
    0.00 :   ffffffff8aaaf211:       push   %rbx
    0.00 :   ffffffff8aaaf212:       sub    $0x28,%rsp
    0.00 :   ffffffff8aaaf216:       mov    0x11587a3(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff8aaaf21d:       mov    %gs:0x75582642(%rip),%r12w        # 0x31868
    0.00 :   ffffffff8aaaf226:       add    $0x1,%rax
    0.00 :   ffffffff8aaaf22a:       movzwl %r12w,%r12d
    0.00 :   ffffffff8aaaf22e:       mov    %rax,-0x40(%rbp)
    0.00 :   ffffffff8aaaf232:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff8aaaf23b:       mov    0x2c(%rax),%esi
    0.00 :   ffffffff8aaaf23e:       mov    %rax,-0x38(%rbp)
    0.00 :   ffffffff8aaaf242:       andl   $0xfffff7ff,0x2c(%rax)
    0.00 :   ffffffff8aaaf249:       mov    %esi,-0x44(%rbp)
    0.00 :   ffffffff8aaaf24c:       addl   $0x100,%gs:0x755825f1(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf257:       movl   $0xa,-0x30(%rbp)
    0.00 :   ffffffff8aaaf25e:       movw   $0x0,%gs:0x75582600(%rip)        # 0x31868
    0.00 :   ffffffff8aaaf268:       sti
    0.00 :   ffffffff8aaaf269:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf26e:       mov    $0xffffffff,%r10d
    0.00 :   ffffffff8aaaf274:       mov    $0xffffffff8bc060c0,%r11
    0.00 :   ffffffff8aaaf27b:       bsf    %r12d,%r10d
    0.00 :   ffffffff8aaaf27f:       add    $0x1,%r10d
    0.00 :   ffffffff8aaaf283:       mov    %r11,%rbx
    0.00 :   ffffffff8aaaf286:       mov    %r10d,%r14d
    0.00 :   ffffffff8aaaf289:       je     0xffffffff8aaaf322
    0.00 :   ffffffff8aaaf28f:       lea    -0x1(%r14),%eax
    0.00 :   ffffffff8aaaf293:       cltq
    0.00 :   ffffffff8aaaf295:       lea    (%rbx,%rax,8),%rbx
    0.00 :   ffffffff8aaaf299:       mov    %rbx,%rax
    0.00 :   ffffffff8aaaf29c:       sub    $0xffffffff8bc060c0,%rax
    0.00 :   ffffffff8aaaf2a2:       sar    $0x3,%rax
    0.00 :   ffffffff8aaaf2a6:       mov    %gs:0x7558259a(%rip),%r13d        # 0x31848
    0.00 :   ffffffff8aaaf2ae:       mov    %eax,-0x2c(%rbp)
    0.00 :   ffffffff8aaaf2b1:       and    $0x7fffffff,%r13d
    0.00 :   ffffffff8aaaf2b8:       mov    %eax,%r15d
    0.00 :   ffffffff8aaaf2bb:       cmp    $0x9,%eax
    0.00 :   ffffffff8aaaf2be:       ja     0xffffffff8aaaf4de
    0.00 :   ffffffff8aaaf2c4:       incl   %gs:0x20348(,%r15,4)
    0.00 :   ffffffff8aaaf2cd:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf2d2:       mov    (%rbx),%rax
    0.00 :   ffffffff8aaaf2d5:       mov    %rbx,%rdi
    0.00 :   ffffffff8aaaf2d8:       call   *%rax
    0.00 :   ffffffff8aaaf2da:       nopl   (%rax)
    0.00 :   ffffffff8aaaf2dd:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf2e2:       mov    %gs:0x7558255e(%rip),%r9d        # 0x31848
    0.00 :   ffffffff8aaaf2ea:       and    $0x7fffffff,%r9d
    0.00 :   ffffffff8aaaf2f1:       cmp    %r13d,%r9d
    0.00 :   ffffffff8aaaf2f4:       jne    0xffffffff8aaaf47b
    0.00 :   ffffffff8aaaf2fa:       add    $0x8,%rbx
  100.00 :   ffffffff8aaaf2fe:       cmp    $0x1f,%r14d
    0.00 :   ffffffff8aaaf302:       ja     0xffffffff8aaaf516
    0.00 :   ffffffff8aaaf308:       mov    %r14d,%ecx
    0.00 :   ffffffff8aaaf30b:       mov    $0xffffffff,%r14d
    0.00 :   ffffffff8aaaf311:       shr    %cl,%r12d
    0.00 :   ffffffff8aaaf314:       bsf    %r12d,%r14d
    0.00 :   ffffffff8aaaf318:       add    $0x1,%r14d
    0.00 :   ffffffff8aaaf31c:       jne    0xffffffff8aaaf28f
    0.00 :   ffffffff8aaaf322:       mov    %gs:0x75570f56(%rip),%rax        # 0x20280
    0.00 :   ffffffff8aaaf32a:       cmp    -0x38(%rbp),%rax
    0.00 :   ffffffff8aaaf32e:       je     0xffffffff8aaaf4c3
    0.00 :   ffffffff8aaaf334:       cli
    0.00 :   ffffffff8aaaf335:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf33a:       mov    %gs:0x75582525(%rip),%r12w        # 0x31868
    0.00 :   ffffffff8aaaf343:       movzwl %r12w,%r12d
    0.00 :   ffffffff8aaaf347:       test   %r12d,%r12d
    0.00 :   ffffffff8aaaf34a:       je     0xffffffff8aaaf37f
    0.00 :   ffffffff8aaaf34c:       mov    0x115866d(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff8aaaf353:       cmp    -0x40(%rbp),%rax
    0.00 :   ffffffff8aaaf357:       jns    0xffffffff8aaaf36e
    0.00 :   ffffffff8aaaf359:       mov    -0x38(%rbp),%rax
    0.00 :   ffffffff8aaaf35d:       mov    (%rax),%rax
    0.00 :   ffffffff8aaaf360:       test   $0x8,%al
    0.00 :   ffffffff8aaaf362:       jne    0xffffffff8aaaf36e
    0.00 :   ffffffff8aaaf364:       subl   $0x1,-0x30(%rbp)
    0.00 :   ffffffff8aaaf368:       jne    0xffffffff8aaaf25e
    0.00 :   ffffffff8aaaf36e:       mov    %gs:0x75570f0a(%rip),%rdi        # 0x20280
    0.00 :   ffffffff8aaaf376:       test   %rdi,%rdi
    0.00 :   ffffffff8aaaf379:       jne    0xffffffff8aaaf4cd
    0.00 :   ffffffff8aaaf37f:       addl   $0xffffff00,%gs:0x755824be(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf38a:       mov    %gs:0x755824b7(%rip),%eax        # 0x31848
    0.00 :   ffffffff8aaaf391:       test   $0xffff00,%eax
    0.00 :   ffffffff8aaaf396:       jne    0xffffffff8aaaf4d7
    0.00 :   ffffffff8aaaf39c:       mov    -0x44(%rbp),%edx
    0.00 :   ffffffff8aaaf39f:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff8aaaf3a8:       and    $0x800,%edx
    0.00 :   ffffffff8aaaf3ae:       andl   $0xfffff7ff,0x2c(%rax)
    0.00 :   ffffffff8aaaf3b5:       or     %edx,0x2c(%rax)
    0.00 :   ffffffff8aaaf3b8:       add    $0x28,%rsp
    0.00 :   ffffffff8aaaf3bc:       pop    %rbx
    0.00 :   ffffffff8aaaf3bd:       pop    %r12
    0.00 :   ffffffff8aaaf3bf:       pop    %r13
    0.00 :   ffffffff8aaaf3c1:       pop    %r14
    0.00 :   ffffffff8aaaf3c3:       pop    %r15
    0.00 :   ffffffff8aaaf3c5:       pop    %rbp
    0.00 :   ffffffff8aaaf3c6:       xor    %eax,%eax
    0.00 :   ffffffff8aaaf3c8:       xor    %edx,%edx
    0.00 :   ffffffff8aaaf3ca:       xor    %ecx,%ecx
    0.00 :   ffffffff8aaaf3cc:       xor    %esi,%esi
    0.00 :   ffffffff8aaaf3ce:       xor    %edi,%edi
    0.00 :   ffffffff8aaaf3d0:       xor    %r8d,%r8d
    0.00 :   ffffffff8aaaf3d3:       xor    %r9d,%r9d
    0.00 :   ffffffff8aaaf3d6:       xor    %r10d,%r10d
    0.00 :   ffffffff8aaaf3d9:       xor    %r11d,%r11d
    0.00 :   ffffffff8aaaf3dc:       ret
    0.00 :   ffffffff8aaaf3dd:       int3
    0.00 :   ffffffff8aaaf3de:       int3
    0.00 :   ffffffff8aaaf3df:       int3
    0.00 :   ffffffff8aaaf3e0:       int3
    0.00 :   ffffffff8aaaf3e1:       mov    %gs:0x75582464(%rip),%eax        # 0x3184c
    0.00 :   ffffffff8aaaf3e8:       mov    %eax,%eax
    0.00 :   ffffffff8aaaf3ea:       bt     %rax,0x1551dae(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff8aaaf3f2:       jae    0xffffffff8aaaf2e2
    0.00 :   ffffffff8aaaf3f8:       incl   %gs:0x75582449(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf3ff:       mov    0x150649a(%rip),%rax        # 0xffffffff8bfb58a0
    0.00 :   ffffffff8aaaf406:       test   %rax,%rax
    0.00 :   ffffffff8aaaf409:       je     0xffffffff8aaaf417
    0.00 :   ffffffff8aaaf40b:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff8aaaf40f:       mov    -0x2c(%rbp),%esi
    0.00 :   ffffffff8aaaf412:       call   0xffffffff89af2110
    0.00 :   ffffffff8aaaf417:       decl   %gs:0x7558242a(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf41e:       jne    0xffffffff8aaaf2e2
    0.00 :   ffffffff8aaaf424:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf429:       jmp    0xffffffff8aaaf2e2
    0.00 :   ffffffff8aaaf42e:       mov    %gs:0x75582417(%rip),%eax        # 0x3184c
    0.00 :   ffffffff8aaaf435:       mov    %eax,%eax
    0.00 :   ffffffff8aaaf437:       bt     %rax,0x1551d61(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff8aaaf43f:       jae    0xffffffff8aaaf2d2
    0.00 :   ffffffff8aaaf445:       incl   %gs:0x755823fc(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf44c:       mov    0x15064ad(%rip),%rax        # 0xffffffff8bfb5900
    0.00 :   ffffffff8aaaf453:       test   %rax,%rax
    0.00 :   ffffffff8aaaf456:       je     0xffffffff8aaaf464
    0.00 :   ffffffff8aaaf458:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff8aaaf45c:       mov    -0x2c(%rbp),%esi
    0.00 :   ffffffff8aaaf45f:       call   0xffffffff89af20b0
    0.00 :   ffffffff8aaaf464:       decl   %gs:0x755823dd(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf46b:       jne    0xffffffff8aaaf2d2
    0.00 :   ffffffff8aaaf471:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaaf476:       jmp    0xffffffff8aaaf2d2
    0.00 :   ffffffff8aaaf47b:       mov    (%rbx),%rcx
    0.00 :   ffffffff8aaaf47e:       cmp    $0x9,%r15
    0.00 :   ffffffff8aaaf482:       ja     0xffffffff8aaaf4f2
    0.00 :   ffffffff8aaaf484:       mov    -0x751da020(,%r15,8),%rdx
    0.00 :   ffffffff8aaaf48c:       mov    -0x2c(%rbp),%esi
    0.00 :   ffffffff8aaaf48f:       mov    %r13d,%r8d
    0.00 :   ffffffff8aaaf492:       mov    $0xffffffff8b32c8a0,%rdi
    0.00 :   ffffffff8aaaf499:       call   0xffffffff89b8c620
    0.00 :   ffffffff8aaaf49e:       mov    %gs:0x755823a3(%rip),%ecx        # 0x31848
    0.00 :   ffffffff8aaaf4a5:       mov    %ecx,%edx
    0.00 :   ffffffff8aaaf4a7:       mov    %ecx,%eax
    0.00 :   ffffffff8aaaf4a9:       and    $0x80000000,%edx
    0.00 :   ffffffff8aaaf4af:       or     %r13d,%edx
    0.00 :   ffffffff8aaaf4b2:       cmpxchg %edx,%gs:0x7558238e(%rip)        # 0x31848
    0.00 :   ffffffff8aaaf4ba:       cmp    %eax,%ecx
    0.00 :   ffffffff8aaaf4bc:       jne    0xffffffff8aaaf49e
    0.00 :   ffffffff8aaaf4be:       jmp    0xffffffff8aaaf2fa
    0.00 :   ffffffff8aaaf4c3:       call   0xffffffff89bb8970
    0.00 :   ffffffff8aaaf4c8:       jmp    0xffffffff8aaaf334
    0.00 :   ffffffff8aaaf4cd:       call   0xffffffff89b3c2d0
    0.00 :   ffffffff8aaaf4d2:       jmp    0xffffffff8aaaf37f
    0.00 :   ffffffff8aaaf4d7:       ud2
    0.00 :   ffffffff8aaaf4d9:       jmp    0xffffffff8aaaf39c
    0.00 :   ffffffff8aaaf4de:       mov    %r15,%rsi
    0.00 :   ffffffff8aaaf4e1:       mov    $0xffffffff8bc7fbe0,%rdi
    0.00 :   ffffffff8aaaf4e8:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8aaaf4ed:       jmp    0xffffffff8aaaf2c4
    0.00 :   ffffffff8aaaf4f2:       mov    %r15,%rsi
    0.00 :   ffffffff8aaaf4f5:       mov    $0xffffffff8bc7fba0,%rdi
    0.00 :   ffffffff8aaaf4fc:       mov    %r9d,-0x48(%rbp)
    0.00 :   ffffffff8aaaf500:       mov    %rcx,-0x50(%rbp)
    0.00 :   ffffffff8aaaf504:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8aaaf509:       mov    -0x48(%rbp),%r9d
    0.00 :   ffffffff8aaaf50d:       mov    -0x50(%rbp),%rcx
    0.00 :   ffffffff8aaaf511:       jmp    0xffffffff8aaaf484
    0.00 :   ffffffff8aaaf516:       mov    %r12d,%eax
    0.00 :   ffffffff8aaaf519:       movslq %r14d,%rdx
    0.00 :   ffffffff8aaaf51c:       mov    $0xffffffff8bc7fd40,%rdi
    0.00 :   ffffffff8aaaf523:       mov    %rax,%rsi
    0.00 :   ffffffff8aaaf526:       call   0xffffffff8a278c60
    0.00 :   ffffffff8aaaf52b:       jmp    0xffffffff8aaaf308
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b4b050 <load0>:
    0.00 :   ffffffff89b4b050:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4b055:       mov    0x80(%rdi),%rcx
    0.00 :   ffffffff89b4b05c:       test   %rcx,%rcx
    0.00 :   ffffffff89b4b05f:       je     0xffffffff89b4b107
    0.00 :   ffffffff89b4b065:       mov    %rdi,%rsi
    0.00 :   ffffffff89b4b068:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4b06d:       push   %rbp
    0.00 :   ffffffff89b4b06e:       mov    0x150(%rcx),%rdi
    0.00 :   ffffffff89b4b075:       mov    (%rcx),%rax
  100.00 :   ffffffff89b4b078:       mov    0xd8(%rdi),%r8
    0.00 :   ffffffff89b4b07f:       mov    %rsp,%rbp
    0.00 :   ffffffff89b4b082:       test   %rax,%rax
    0.00 :   ffffffff89b4b085:       je     0xffffffff89b4b097
    0.00 :   ffffffff89b4b087:       shr    $0xa,%rax
    0.00 :   ffffffff89b4b08b:       mov    $0x2,%edx
    0.00 :   ffffffff89b4b090:       cmp    %rdx,%rax
    0.00 :   ffffffff89b4b093:       cmovb  %rdx,%rax
    0.00 :   ffffffff89b4b097:       mov    0xa0(%rcx),%rdx
    0.00 :   ffffffff89b4b09e:       cmp    %rdx,%rax
    0.00 :   ffffffff89b4b0a1:       cmovae %rax,%rdx
    0.00 :   ffffffff89b4b0a5:       mov    0x100(%rdi),%rax
    0.00 :   ffffffff89b4b0ac:       sub    0x100(%rcx),%rax
    0.00 :   ffffffff89b4b0b3:       mov    %rax,%rcx
    0.00 :   ffffffff89b4b0b6:       mov    %r8,%rax
    0.00 :   ffffffff89b4b0b9:       imul   %rdx,%rax
    0.00 :   ffffffff89b4b0bd:       add    %rdx,%rcx
    0.00 :   ffffffff89b4b0c0:       je     0xffffffff89b4b0c7
    0.00 :   ffffffff89b4b0c2:       cqto
    0.00 :   ffffffff89b4b0c4:       idiv   %rcx
    0.00 :   ffffffff89b4b0c7:       mov    0x78(%rsi),%rdi
    0.00 :   ffffffff89b4b0cb:       mov    $0x2,%edx
    0.00 :   ffffffff89b4b0d0:       cmp    %rdx,%rax
    0.00 :   ffffffff89b4b0d3:       cmovge %rax,%rdx
    0.00 :   ffffffff89b4b0d7:       cmp    %rax,%r8
    0.00 :   ffffffff89b4b0da:       cmovg  %rdx,%r8
    0.00 :   ffffffff89b4b0de:       mov    %r8,%rdx
    0.00 :   ffffffff89b4b0e1:       call   0xffffffff89b4aed0
    0.00 :   ffffffff89b4b0e6:       pop    %rbp
    0.00 :   ffffffff89b4b0e7:       xor    %eax,%eax
    0.00 :   ffffffff89b4b0e9:       xor    %edx,%edx
    0.00 :   ffffffff89b4b0eb:       xor    %ecx,%ecx
    0.00 :   ffffffff89b4b0ed:       xor    %esi,%esi
    0.00 :   ffffffff89b4b0ef:       xor    %edi,%edi
    0.00 :   ffffffff89b4b0f1:       xor    %r8d,%r8d
    0.00 :   ffffffff89b4b0f4:       ret
    0.00 :   ffffffff89b4b0f5:       int3
    0.00 :   ffffffff89b4b0f6:       int3
    0.00 :   ffffffff89b4b0f7:       int3
    0.00 :   ffffffff89b4b0f8:       int3
    0.00 :   ffffffff89b4b0f9:       mov    0x18c(%rcx),%eax
    0.00 :   ffffffff89b4b0ff:       test   %eax,%eax
    0.00 :   ffffffff89b4b101:       je     0xffffffff89b4b06d
    0.00 :   ffffffff89b4b107:       xor    %eax,%eax
    0.00 :   ffffffff89b4b109:       xor    %edx,%edx
    0.00 :   ffffffff89b4b10b:       xor    %ecx,%ecx
    0.00 :   ffffffff89b4b10d:       xor    %esi,%esi
    0.00 :   ffffffff89b4b10f:       xor    %edi,%edi
    0.00 :   ffffffff89b4b111:       xor    %r8d,%r8d
    0.00 :   ffffffff89b4b114:       ret
    0.00 :   ffffffff89b4b115:       int3
    0.00 :   ffffffff89b4b116:       int3
    0.00 :   ffffffff89b4b117:       int3
    0.00 :   ffffffff89b4b118:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aaa5db0 <load0>:
  100.00 :   ffffffff8aaa5db0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8aaa5db5:       mov    %gs:0x7558ba8c(%rip),%edx        # 0x31848
    0.00 :   ffffffff8aaa5dbc:       test   %edx,%edx
    0.00 :   ffffffff8aaa5dbe:       je     0xffffffff8aaa5dc9
    0.00 :   ffffffff8aaa5dc0:       xor    %eax,%eax
    0.00 :   ffffffff8aaa5dc2:       xor    %edx,%edx
    0.00 :   ffffffff8aaa5dc4:       ret
    0.00 :   ffffffff8aaa5dc5:       int3
    0.00 :   ffffffff8aaa5dc6:       int3
    0.00 :   ffffffff8aaa5dc7:       int3
    0.00 :   ffffffff8aaa5dc8:       int3
    0.00 :   ffffffff8aaa5dc9:       push   %rbp
    0.00 :   ffffffff8aaa5dca:       mov    %rsp,%rbp
    0.00 :   ffffffff8aaa5dcd:       call   0xffffffff8aaa5cf0
    0.00 :   ffffffff8aaa5dd2:       mov    $0x1,%eax
    0.00 :   ffffffff8aaa5dd7:       pop    %rbp
    0.00 :   ffffffff8aaa5dd8:       xor    %edx,%edx
    0.00 :   ffffffff8aaa5dda:       ret
    0.00 :   ffffffff8aaa5ddb:       int3
    0.00 :   ffffffff8aaa5ddc:       int3
    0.00 :   ffffffff8aaa5ddd:       int3
    0.00 :   ffffffff8aaa5dde:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89a9cd30 <load0>:
    0.00 :   ffffffff89a9cd30:       nopl   0x0(%rax,%rax,1)
  100.00 :   ffffffff89a9cd35:       push   %rbp
    0.00 :   ffffffff89a9cd36:       xor    %esi,%esi
    0.00 :   ffffffff89a9cd38:       mov    %rsp,%rbp
    0.00 :   ffffffff89a9cd3b:       push   %r12
    0.00 :   ffffffff89a9cd3d:       push   %rbx
    0.00 :   ffffffff89a9cd3e:       mov    0x19d529b(%rip),%rax        # 0xffffffff8b471fe0
    0.00 :   ffffffff89a9cd45:       mov    %gs:0x76594a1b(%rip),%rbx        # 0x31768
    0.00 :   ffffffff89a9cd4d:       mov    %rdi,%gs:0x76594a13(%rip)        # 0x31768
    0.00 :   ffffffff89a9cd55:       mov    $0xb0,%edi
    0.00 :   ffffffff89a9cd5a:       mov    (%rax),%rax
    0.00 :   ffffffff89a9cd5d:       call   *%rax
    0.00 :   ffffffff89a9cd5f:       nopl   (%rax)
    0.00 :   ffffffff89a9cd62:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a9cd67:       mov    $0x1fd80,%r12
    0.00 :   ffffffff89a9cd6e:       add    %gs:0x7657cc6a(%rip),%r12        # 0x199e0
    0.00 :   ffffffff89a9cd76:       cmpq   $0x0,(%r12)
    0.00 :   ffffffff89a9cd7b:       je     0xffffffff89a9ce40
    0.00 :   ffffffff89a9cd81:       incl   %gs:0x76594a00(%rip)        # 0x31788
    0.00 :   ffffffff89a9cd88:       mov    (%r12),%rax
    0.00 :   ffffffff89a9cd8c:       mov    %r12,%rdi
    0.00 :   ffffffff89a9cd8f:       call   *%rax
    0.00 :   ffffffff89a9cd91:       nopl   (%rax)
    0.00 :   ffffffff89a9cd94:       xchg   %ax,%ax
    0.00 :   ffffffff89a9cd96:       mov    %rbx,%gs:0x765949ca(%rip)        # 0x31768
    0.00 :   ffffffff89a9cd9e:       pop    %rbx
    0.00 :   ffffffff89a9cd9f:       pop    %r12
    0.00 :   ffffffff89a9cda1:       pop    %rbp
    0.00 :   ffffffff89a9cda2:       xor    %eax,%eax
    0.00 :   ffffffff89a9cda4:       xor    %esi,%esi
    0.00 :   ffffffff89a9cda6:       xor    %edi,%edi
    0.00 :   ffffffff89a9cda8:       ret
    0.00 :   ffffffff89a9cda9:       int3
    0.00 :   ffffffff89a9cdaa:       int3
    0.00 :   ffffffff89a9cdab:       int3
    0.00 :   ffffffff89a9cdac:       int3
    0.00 :   ffffffff89a9cdad:       mov    %gs:0x76594a98(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89a9cdb4:       mov    %eax,%eax
    0.00 :   ffffffff89a9cdb6:       bt     %rax,0x25643e2(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89a9cdbe:       jae    0xffffffff89a9cd96
    0.00 :   ffffffff89a9cdc0:       incl   %gs:0x76594a81(%rip)        # 0x31848
    0.00 :   ffffffff89a9cdc7:       mov    0x2518112(%rip),%rax        # 0xffffffff8bfb4ee0
    0.00 :   ffffffff89a9cdce:       test   %rax,%rax
    0.00 :   ffffffff89a9cdd1:       je     0xffffffff89a9cde1
    0.00 :   ffffffff89a9cdd3:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89a9cdd7:       mov    $0xec,%esi
    0.00 :   ffffffff89a9cddc:       call   0xffffffff89a4c320
    0.00 :   ffffffff89a9cde1:       decl   %gs:0x76594a60(%rip)        # 0x31848
    0.00 :   ffffffff89a9cde8:       jne    0xffffffff89a9cd96
    0.00 :   ffffffff89a9cdea:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a9cdef:       jmp    0xffffffff89a9cd96
    0.00 :   ffffffff89a9cdf1:       mov    %gs:0x76594a54(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89a9cdf8:       mov    %eax,%eax
    0.00 :   ffffffff89a9cdfa:       bt     %rax,0x256439e(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89a9ce02:       jae    0xffffffff89a9cd67
    0.00 :   ffffffff89a9ce08:       incl   %gs:0x76594a39(%rip)        # 0x31848
    0.00 :   ffffffff89a9ce0f:       mov    0x251812a(%rip),%rax        # 0xffffffff8bfb4f40
    0.00 :   ffffffff89a9ce16:       test   %rax,%rax
    0.00 :   ffffffff89a9ce19:       je     0xffffffff89a9ce29
    0.00 :   ffffffff89a9ce1b:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89a9ce1f:       mov    $0xec,%esi
    0.00 :   ffffffff89a9ce24:       call   0xffffffff89a4c2c0
    0.00 :   ffffffff89a9ce29:       decl   %gs:0x76594a18(%rip)        # 0x31848
    0.00 :   ffffffff89a9ce30:       jne    0xffffffff89a9cd67
    0.00 :   ffffffff89a9ce36:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a9ce3b:       jmp    0xffffffff89a9cd67
    0.00 :   ffffffff89a9ce40:       mov    $0xffffffff8b320008,%rdi
    0.00 :   ffffffff89a9ce47:       mov    %gs:0x765949fe(%rip),%esi        # 0x3184c
    0.00 :   ffffffff89a9ce4e:       call   0xffffffff89b8c620
    0.00 :   ffffffff89a9ce53:       testb  $0x10,0x3c(%r12)
    0.00 :   ffffffff89a9ce59:       jne    0xffffffff89a9cd94
    0.00 :   ffffffff89a9ce5f:       call   0xffffffff89a9c580
    0.00 :   ffffffff89a9ce64:       jmp    0xffffffff89a9cd94
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000129150 <__profil_counter>:
         : 6      __profil_counter():
         : 7      ./gmon/../sysdeps/unix/sysv/linux/profil-counter.h:25
  100.00 :   129150: endbr64
         : 9      profil_count():
         : 10     ./gmon/../sysdeps/posix/profil.c:42
    0.00 :   129154: mov    0xa8(%rdx),%rax
    0.00 :   12915b: sub    0xf8486(%rip),%rax        # 2215e8 <pc_offset>
    0.00 :   129162: mov    %rax,%rdx
         : 14     ./gmon/../sysdeps/posix/profil.c:47
    0.00 :   129165: mov    0xf8475(%rip),%ecx        # 2215e0 <pc_scale>
    0.00 :   12916b: shr    $0x11,%rax
         : 17     ./gmon/../sysdeps/posix/profil.c:42
    0.00 :   12916f: shr    %rdx
         : 19     ./gmon/../sysdeps/posix/profil.c:47
    0.00 :   129172: movzwl %dx,%edx
    0.00 :   129175: imul   %rcx,%rax
    0.00 :   129179: imul   %rcx,%rdx
    0.00 :   12917d: shr    $0x10,%rdx
    0.00 :   129181: add    %rdx,%rax
         : 25     ./gmon/../sysdeps/posix/profil.c:49
    0.00 :   129184: cmp    0xf8465(%rip),%rax        # 2215f0 <nsamples>
    0.00 :   12918b: jae    129199 <__profil_counter+0x49>
         : 28     ./gmon/../sysdeps/posix/profil.c:50
    0.00 :   12918d: mov    0xf8464(%rip),%rdx        # 2215f8 <samples>
    0.00 :   129194: addw   $0x1,(%rdx,%rax,2)
         : 31     __profil_counter():
         : 32     ./gmon/../sysdeps/unix/sysv/linux/profil-counter.h:32
    0.00 :   129199: ret
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b7cf20 <load0>:
    0.00 :   ffffffff89b7cf20:       push   %rbp
    0.00 :   ffffffff89b7cf21:       mov    %rsp,%rbp
    0.00 :   ffffffff89b7cf24:       push   %r12
    0.00 :   ffffffff89b7cf26:       push   %rbx
    0.00 :   ffffffff89b7cf27:       mov    %rdi,%rbx
    0.00 :   ffffffff89b7cf2a:       pushf
    0.00 :   ffffffff89b7cf2b:       pop    %rax
    0.00 :   ffffffff89b7cf2c:       nopl   0x0(%rax)
    0.00 :   ffffffff89b7cf30:       mov    %rax,%r12
    0.00 :   ffffffff89b7cf33:       cli
    0.00 :   ffffffff89b7cf34:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b7cf39:       incl   %gs:0x764b4908(%rip)        # 0x31848
    0.00 :   ffffffff89b7cf40:       xor    %eax,%eax
    0.00 :   ffffffff89b7cf42:       mov    $0x1,%edx
  100.00 :   ffffffff89b7cf47:       lock cmpxchg %edx,(%rbx)
    0.00 :   ffffffff89b7cf4b:       jne    0xffffffff89b7cf6d
    0.00 :   ffffffff89b7cf4d:       mov    %r12,%rax
    0.00 :   ffffffff89b7cf50:       pop    %rbx
    0.00 :   ffffffff89b7cf51:       pop    %r12
    0.00 :   ffffffff89b7cf53:       pop    %rbp
    0.00 :   ffffffff89b7cf54:       xor    %edx,%edx
    0.00 :   ffffffff89b7cf56:       xor    %ecx,%ecx
    0.00 :   ffffffff89b7cf58:       xor    %esi,%esi
    0.00 :   ffffffff89b7cf5a:       xor    %edi,%edi
    0.00 :   ffffffff89b7cf5c:       xor    %r8d,%r8d
    0.00 :   ffffffff89b7cf5f:       xor    %r9d,%r9d
    0.00 :   ffffffff89b7cf62:       xor    %r10d,%r10d
    0.00 :   ffffffff89b7cf65:       xor    %r11d,%r11d
    0.00 :   ffffffff89b7cf68:       ret
    0.00 :   ffffffff89b7cf69:       int3
    0.00 :   ffffffff89b7cf6a:       int3
    0.00 :   ffffffff89b7cf6b:       int3
    0.00 :   ffffffff89b7cf6c:       int3
    0.00 :   ffffffff89b7cf6d:       mov    %eax,%esi
    0.00 :   ffffffff89b7cf6f:       mov    %rbx,%rdi
    0.00 :   ffffffff89b7cf72:       call   0xffffffff8aaae650
    0.00 :   ffffffff89b7cf77:       nop
    0.00 :   ffffffff89b7cf78:       mov    %r12,%rax
    0.00 :   ffffffff89b7cf7b:       pop    %rbx
    0.00 :   ffffffff89b7cf7c:       pop    %r12
    0.00 :   ffffffff89b7cf7e:       pop    %rbp
    0.00 :   ffffffff89b7cf7f:       xor    %edx,%edx
    0.00 :   ffffffff89b7cf81:       xor    %ecx,%ecx
    0.00 :   ffffffff89b7cf83:       xor    %esi,%esi
    0.00 :   ffffffff89b7cf85:       xor    %edi,%edi
    0.00 :   ffffffff89b7cf87:       xor    %r8d,%r8d
    0.00 :   ffffffff89b7cf8a:       xor    %r9d,%r9d
    0.00 :   ffffffff89b7cf8d:       xor    %r10d,%r10d
    0.00 :   ffffffff89b7cf90:       xor    %r11d,%r11d
    0.00 :   ffffffff89b7cf93:       ret
    0.00 :   ffffffff89b7cf94:       int3
    0.00 :   ffffffff89b7cf95:       int3
    0.00 :   ffffffff89b7cf96:       int3
    0.00 :   ffffffff89b7cf97:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b47ab0 <load0>:
    0.00 :   ffffffff89b47ab0:       push   %rbp
    0.00 :   ffffffff89b47ab1:       mov    %rsp,%rbp
    0.00 :   ffffffff89b47ab4:       push   %r15
    0.00 :   ffffffff89b47ab6:       push   %r14
    0.00 :   ffffffff89b47ab8:       mov    %edx,%r14d
    0.00 :   ffffffff89b47abb:       push   %r13
    0.00 :   ffffffff89b47abd:       push   %r12
    0.00 :   ffffffff89b47abf:       mov    %rsi,%r12
    0.00 :   ffffffff89b47ac2:       push   %rbx
    0.00 :   ffffffff89b47ac3:       mov    %rdi,%rbx
    0.00 :   ffffffff89b47ac6:       sub    $0x20,%rsp
    0.00 :   ffffffff89b47aca:       mov    0x18c(%rdi),%eax
    0.00 :   ffffffff89b47ad0:       test   %eax,%eax
    0.00 :   ffffffff89b47ad2:       jne    0xffffffff89b4816a
    0.00 :   ffffffff89b47ad8:       mov    0x130(%rdi),%r15
    0.00 :   ffffffff89b47adf:       cmpl   $0x1,0xa08(%r15)
    0.00 :   ffffffff89b47ae7:       jbe    0xffffffff89b4817d
    0.00 :   ffffffff89b47aed:       mov    0xa48(%r15),%r13
    0.00 :   ffffffff89b47af4:       sub    0x180(%rbx),%r13
    0.00 :   ffffffff89b47afb:       sub    0xa50(%r15),%r13
    0.00 :   ffffffff89b47b02:       cmpq   $0x0,0xc0(%r12)
    0.00 :   ffffffff89b47b0b:       je     0xffffffff89b47b17
    0.00 :   ffffffff89b47b0d:       test   $0x2,%r14b
    0.00 :   ffffffff89b47b11:       je     0xffffffff89b480b9
  100.00 :   ffffffff89b47b17:       mov    0xc4(%rbx),%r15d
    0.00 :   ffffffff89b47b1e:       test   %r15d,%r15d
    0.00 :   ffffffff89b47b21:       jne    0xffffffff89b47e9d
    0.00 :   ffffffff89b47b27:       mov    %rbx,%rsi
    0.00 :   ffffffff89b47b2a:       mov    %r13,%rdi
    0.00 :   ffffffff89b47b2d:       call   0xffffffff89b60320
    0.00 :   ffffffff89b47b32:       mov    0x80(%r12),%rdx
    0.00 :   ffffffff89b47b3a:       or     %eax,%r15d
    0.00 :   ffffffff89b47b3d:       test   %rdx,%rdx
    0.00 :   ffffffff89b47b40:       je     0xffffffff89b47b4c
    0.00 :   ffffffff89b47b42:       cmpq   $0x0,0x108(%rdx)
    0.00 :   ffffffff89b47b4a:       jne    0xffffffff89b47bb5
    0.00 :   ffffffff89b47b4c:       cmpq   $0x0,0xc0(%r12)
    0.00 :   ffffffff89b47b55:       jne    0xffffffff89b47b61
    0.00 :   ffffffff89b47b57:       test   $0x4,%r14b
    0.00 :   ffffffff89b47b5b:       jne    0xffffffff89b480a9
    0.00 :   ffffffff89b47b61:       test   $0x8,%r14b
    0.00 :   ffffffff89b47b65:       jne    0xffffffff89b47e1d
    0.00 :   ffffffff89b47b6b:       test   %r15d,%r15d
    0.00 :   ffffffff89b47b6e:       je     0xffffffff89b47b92
    0.00 :   ffffffff89b47b70:       mov    0x130(%rbx),%r12
    0.00 :   ffffffff89b47b77:       lea    0x100(%r12),%rax
    0.00 :   ffffffff89b47b7f:       cmp    %rax,%rbx
    0.00 :   ffffffff89b47b82:       je     0xffffffff89b481c8
    0.00 :   ffffffff89b47b88:       and    $0x1,%r14d
    0.00 :   ffffffff89b47b8c:       jne    0xffffffff89b47e28
    0.00 :   ffffffff89b47b92:       add    $0x20,%rsp
    0.00 :   ffffffff89b47b96:       pop    %rbx
    0.00 :   ffffffff89b47b97:       pop    %r12
    0.00 :   ffffffff89b47b99:       pop    %r13
    0.00 :   ffffffff89b47b9b:       pop    %r14
    0.00 :   ffffffff89b47b9d:       pop    %r15
    0.00 :   ffffffff89b47b9f:       pop    %rbp
    0.00 :   ffffffff89b47ba0:       xor    %eax,%eax
    0.00 :   ffffffff89b47ba2:       xor    %edx,%edx
    0.00 :   ffffffff89b47ba4:       xor    %ecx,%ecx
    0.00 :   ffffffff89b47ba6:       xor    %esi,%esi
    0.00 :   ffffffff89b47ba8:       xor    %edi,%edi
    0.00 :   ffffffff89b47baa:       xor    %r8d,%r8d
    0.00 :   ffffffff89b47bad:       xor    %r9d,%r9d
    0.00 :   ffffffff89b47bb0:       ret
    0.00 :   ffffffff89b47bb1:       int3
    0.00 :   ffffffff89b47bb2:       int3
    0.00 :   ffffffff89b47bb3:       int3
    0.00 :   ffffffff89b47bb4:       int3
    0.00 :   ffffffff89b47bb5:       movq   $0x0,0x108(%rdx)
    0.00 :   ffffffff89b47bc0:       mov    0x78(%r12),%rsi
    0.00 :   ffffffff89b47bc5:       mov    0x110(%rdx),%rax
    0.00 :   ffffffff89b47bcc:       movq   $0x1,0x108(%rsi)
    0.00 :   ffffffff89b47bd7:       add    %rax,0x110(%rsi)
    0.00 :   ffffffff89b47bde:       mov    0xb0(%rdx),%rcx
    0.00 :   ffffffff89b47be5:       mov    %rcx,%rdi
    0.00 :   ffffffff89b47be8:       sub    0xf0(%r12),%rdi
    0.00 :   ffffffff89b47bf0:       je     0xffffffff89b47c70
    0.00 :   ffffffff89b47bf2:       mov    0x9c(%rsi),%eax
    0.00 :   ffffffff89b47bf8:       mov    0xd8(%r12),%r8d
    0.00 :   ffffffff89b47c00:       mov    %rcx,0xf0(%r12)
    0.00 :   ffffffff89b47c08:       add    $0xb67e,%eax
    0.00 :   ffffffff89b47c0d:       imul   %ecx,%eax
    0.00 :   ffffffff89b47c10:       mov    %eax,%ecx
    0.00 :   ffffffff89b47c12:       mov    %eax,0xd8(%r12)
    0.00 :   ffffffff89b47c1a:       sub    %r8,%rcx
    0.00 :   ffffffff89b47c1d:       mov    0xb0(%rsi),%r8
    0.00 :   ffffffff89b47c24:       lea    (%rdi,%r8,1),%rax
    0.00 :   ffffffff89b47c28:       test   %rdi,%rdi
    0.00 :   ffffffff89b47c2b:       jns    0xffffffff89b4811a
    0.00 :   ffffffff89b47c31:       cmp    %rax,%r8
    0.00 :   ffffffff89b47c34:       jae    0xffffffff89b4811a
    0.00 :   ffffffff89b47c3a:       xor    %edi,%edi
    0.00 :   ffffffff89b47c3c:       xor    %eax,%eax
    0.00 :   ffffffff89b47c3e:       mov    %rax,0xb0(%rsi)
    0.00 :   ffffffff89b47c45:       mov    0x98(%rsi),%r8d
    0.00 :   ffffffff89b47c4c:       lea    (%r8,%rcx,1),%eax
    0.00 :   ffffffff89b47c50:       test   %rcx,%rcx
    0.00 :   ffffffff89b47c53:       jns    0xffffffff89b48160
    0.00 :   ffffffff89b47c59:       cmp    %eax,%r8d
    0.00 :   ffffffff89b47c5c:       jae    0xffffffff89b48160
    0.00 :   ffffffff89b47c62:       xor    %eax,%eax
    0.00 :   ffffffff89b47c64:       mov    %eax,0x98(%rsi)
    0.00 :   ffffffff89b47c6a:       mov    %edi,0x98(%rsi)
    0.00 :   ffffffff89b47c70:       mov    0xa8(%rdx),%rcx
    0.00 :   ffffffff89b47c77:       mov    %rcx,%rdi
    0.00 :   ffffffff89b47c7a:       sub    0xe8(%r12),%rdi
    0.00 :   ffffffff89b47c82:       je     0xffffffff89b47d08
    0.00 :   ffffffff89b47c88:       mov    0x9c(%rsi),%eax
    0.00 :   ffffffff89b47c8e:       mov    %rcx,0xe8(%r12)
    0.00 :   ffffffff89b47c96:       add    $0xb67e,%eax
    0.00 :   ffffffff89b47c9b:       imul   %ecx,%eax
    0.00 :   ffffffff89b47c9e:       mov    %rax,%r8
    0.00 :   ffffffff89b47ca1:       sub    0xd0(%r12),%r8
    0.00 :   ffffffff89b47ca9:       mov    %rax,0xd0(%r12)
    0.00 :   ffffffff89b47cb1:       mov    0xa8(%rsi),%rcx
    0.00 :   ffffffff89b47cb8:       lea    (%rdi,%rcx,1),%rax
    0.00 :   ffffffff89b47cbc:       test   %rdi,%rdi
    0.00 :   ffffffff89b47cbf:       jns    0xffffffff89b4810f
    0.00 :   ffffffff89b47cc5:       cmp    %rax,%rcx
    0.00 :   ffffffff89b47cc8:       jae    0xffffffff89b4810f
    0.00 :   ffffffff89b47cce:       xor    %ecx,%ecx
    0.00 :   ffffffff89b47cd0:       xor    %eax,%eax
    0.00 :   ffffffff89b47cd2:       mov    %rax,0xa8(%rsi)
    0.00 :   ffffffff89b47cd9:       mov    0x90(%rsi),%rdi
    0.00 :   ffffffff89b47ce0:       lea    (%r8,%rdi,1),%rax
    0.00 :   ffffffff89b47ce4:       test   %r8,%r8
    0.00 :   ffffffff89b47ce7:       jns    0xffffffff89b4814c
    0.00 :   ffffffff89b47ced:       cmp    %rax,%rdi
    0.00 :   ffffffff89b47cf0:       jae    0xffffffff89b4814c
    0.00 :   ffffffff89b47cf6:       xor    %eax,%eax
    0.00 :   ffffffff89b47cf8:       mov    %rax,0x90(%rsi)
    0.00 :   ffffffff89b47cff:       mov    %ecx,%eax
    0.00 :   ffffffff89b47d01:       mov    %rax,0x90(%rsi)
    0.00 :   ffffffff89b47d08:       mov    0x110(%rdx),%rax
    0.00 :   ffffffff89b47d0f:       test   %rax,%rax
    0.00 :   ffffffff89b47d12:       je     0xffffffff89b47e0a
    0.00 :   ffffffff89b47d18:       movq   $0x0,0x110(%rdx)
    0.00 :   ffffffff89b47d23:       mov    0x9c(%rsi),%ecx
    0.00 :   ffffffff89b47d29:       add    $0xb67e,%ecx
    0.00 :   ffffffff89b47d2f:       test   %rax,%rax
    0.00 :   ffffffff89b47d32:       js     0xffffffff89b480d5
    0.00 :   ffffffff89b47d38:       add    0xc8(%r12),%rax
    0.00 :   ffffffff89b47d40:       mov    %ecx,%edx
    0.00 :   ffffffff89b47d42:       cmp    %rdx,%rax
    0.00 :   ffffffff89b47d45:       cmovg  %rdx,%rax
    0.00 :   ffffffff89b47d49:       mov    0xd8(%r12),%edx
    0.00 :   ffffffff89b47d51:       mov    (%r12),%r8
    0.00 :   ffffffff89b47d55:       shr    $0xa,%edx
    0.00 :   ffffffff89b47d58:       cmp    %rax,%rdx
    0.00 :   ffffffff89b47d5b:       cmovge %rdx,%rax
    0.00 :   ffffffff89b47d5f:       mov    %rax,%rdi
    0.00 :   ffffffff89b47d62:       test   %r8,%r8
    0.00 :   ffffffff89b47d65:       je     0xffffffff89b48156
    0.00 :   ffffffff89b47d6b:       mov    $0x2,%eax
    0.00 :   ffffffff89b47d70:       shr    $0xa,%r8
    0.00 :   ffffffff89b47d74:       cmp    %rax,%r8
    0.00 :   ffffffff89b47d77:       cmovb  %rax,%r8
    0.00 :   ffffffff89b47d7b:       xor    %edx,%edx
    0.00 :   ffffffff89b47d7d:       mov    %r8,%r9
    0.00 :   ffffffff89b47d80:       imul   %rdi,%r9
    0.00 :   ffffffff89b47d84:       mov    %r9,%rax
    0.00 :   ffffffff89b47d87:       div    %rcx
    0.00 :   ffffffff89b47d8a:       mov    %rax,%rdx
    0.00 :   ffffffff89b47d8d:       sub    0xe0(%r12),%rdx
    0.00 :   ffffffff89b47d95:       je     0xffffffff89b47e0a
    0.00 :   ffffffff89b47d97:       imul   0xc8(%r12),%r8
    0.00 :   ffffffff89b47da0:       mov    %rax,0xe0(%r12)
    0.00 :   ffffffff89b47da8:       mov    %rdi,0xc8(%r12)
    0.00 :   ffffffff89b47db0:       mov    0xa0(%rsi),%rcx
    0.00 :   ffffffff89b47db7:       sub    %r8,%r9
    0.00 :   ffffffff89b47dba:       lea    (%rdx,%rcx,1),%rax
    0.00 :   ffffffff89b47dbe:       test   %rdx,%rdx
    0.00 :   ffffffff89b47dc1:       jns    0xffffffff89b481bd
    0.00 :   ffffffff89b47dc7:       cmp    %rax,%rcx
    0.00 :   ffffffff89b47dca:       jae    0xffffffff89b481bd
    0.00 :   ffffffff89b47dd0:       xor    %edx,%edx
    0.00 :   ffffffff89b47dd2:       xor    %eax,%eax
    0.00 :   ffffffff89b47dd4:       mov    %rax,0xa0(%rsi)
    0.00 :   ffffffff89b47ddb:       mov    0x88(%rsi),%rcx
    0.00 :   ffffffff89b47de2:       lea    (%r9,%rcx,1),%rax
    0.00 :   ffffffff89b47de6:       test   %r9,%r9
    0.00 :   ffffffff89b47de9:       jns    0xffffffff89b481b3
    0.00 :   ffffffff89b47def:       cmp    %rax,%rcx
    0.00 :   ffffffff89b47df2:       jae    0xffffffff89b481b3
    0.00 :   ffffffff89b47df8:       xor    %eax,%eax
    0.00 :   ffffffff89b47dfa:       mov    %rax,0x88(%rsi)
    0.00 :   ffffffff89b47e01:       mov    %edx,%eax
    0.00 :   ffffffff89b47e03:       mov    %rax,0x88(%rsi)
    0.00 :   ffffffff89b47e0a:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b47e0f:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b47e14:       or     $0x1,%r15d
    0.00 :   ffffffff89b47e18:       jmp    0xffffffff89b47b4c
    0.00 :   ffffffff89b47e1d:       mov    %r12,%rsi
    0.00 :   ffffffff89b47e20:       mov    %rbx,%rdi
    0.00 :   ffffffff89b47e23:       call   0xffffffff89b475d0
    0.00 :   ffffffff89b47e28:       mov    0x100(%rbx),%rdx
    0.00 :   ffffffff89b47e2f:       mov    0xa0(%rbx),%rax
    0.00 :   ffffffff89b47e36:       mov    0x150(%rbx),%rsi
    0.00 :   ffffffff89b47e3d:       sub    %rdx,%rax
    0.00 :   ffffffff89b47e40:       cmp    $0xffffffff8d157ec0,%rsi
    0.00 :   ffffffff89b47e47:       je     0xffffffff89b47b92
    0.00 :   ffffffff89b47e4d:       mov    %rax,%rcx
    0.00 :   ffffffff89b47e50:       neg    %rcx
    0.00 :   ffffffff89b47e53:       cmovs  %rax,%rcx
    0.00 :   ffffffff89b47e57:       shr    $0x6,%rdx
    0.00 :   ffffffff89b47e5b:       cmp    %rdx,%rcx
    0.00 :   ffffffff89b47e5e:       jbe    0xffffffff89b47b92
    0.00 :   ffffffff89b47e64:       lock add %rax,0x100(%rsi)
    0.00 :   ffffffff89b47e6c:       mov    0xa0(%rbx),%rax
    0.00 :   ffffffff89b47e73:       mov    %rax,0x100(%rbx)
    0.00 :   ffffffff89b47e7a:       add    $0x20,%rsp
    0.00 :   ffffffff89b47e7e:       pop    %rbx
    0.00 :   ffffffff89b47e7f:       pop    %r12
    0.00 :   ffffffff89b47e81:       pop    %r13
    0.00 :   ffffffff89b47e83:       pop    %r14
    0.00 :   ffffffff89b47e85:       pop    %r15
    0.00 :   ffffffff89b47e87:       pop    %rbp
    0.00 :   ffffffff89b47e88:       xor    %eax,%eax
    0.00 :   ffffffff89b47e8a:       xor    %edx,%edx
    0.00 :   ffffffff89b47e8c:       xor    %ecx,%ecx
    0.00 :   ffffffff89b47e8e:       xor    %esi,%esi
    0.00 :   ffffffff89b47e90:       xor    %edi,%edi
    0.00 :   ffffffff89b47e92:       xor    %r8d,%r8d
    0.00 :   ffffffff89b47e95:       xor    %r9d,%r9d
    0.00 :   ffffffff89b47e98:       ret
    0.00 :   ffffffff89b47e99:       int3
    0.00 :   ffffffff89b47e9a:       int3
    0.00 :   ffffffff89b47e9b:       int3
    0.00 :   ffffffff89b47e9c:       int3
    0.00 :   ffffffff89b47e9d:       mov    0x9c(%rbx),%eax
    0.00 :   ffffffff89b47ea3:       lea    0xc0(%rbx),%rdi
    0.00 :   ffffffff89b47eaa:       mov    %rdi,-0x40(%rbp)
    0.00 :   ffffffff89b47eae:       lea    0xb67e(%rax),%edx
    0.00 :   ffffffff89b47eb4:       mov    %edx,-0x44(%rbp)
    0.00 :   ffffffff89b47eb7:       call   0xffffffff8aaae3e0
    0.00 :   ffffffff89b47ebc:       mov    0xd0(%rbx),%rsi
    0.00 :   ffffffff89b47ec3:       mov    0xc8(%rbx),%r8
    0.00 :   ffffffff89b47eca:       movq   $0x0,0xd0(%rbx)
    0.00 :   ffffffff89b47ed5:       mov    0xd8(%rbx),%r15
    0.00 :   ffffffff89b47edc:       mov    -0x40(%rbp),%rdi
    0.00 :   ffffffff89b47ee0:       movq   $0x0,0xc8(%rbx)
    0.00 :   ffffffff89b47eeb:       movq   $0x0,0xd8(%rbx)
    0.00 :   ffffffff89b47ef6:       movl   $0x0,0xc4(%rbx)
    0.00 :   ffffffff89b47f00:       mov    %rsi,-0x38(%rbp)
    0.00 :   ffffffff89b47f04:       mov    %r8,-0x30(%rbp)
    0.00 :   ffffffff89b47f08:       call   0xffffffff8aaae520
    0.00 :   ffffffff89b47f0d:       mov    0xa0(%rbx),%rax
    0.00 :   ffffffff89b47f14:       mov    -0x30(%rbp),%r8
    0.00 :   ffffffff89b47f18:       mov    -0x38(%rbp),%rsi
    0.00 :   ffffffff89b47f1c:       mov    -0x44(%rbp),%edx
    0.00 :   ffffffff89b47f1f:       sub    %r8,%rax
    0.00 :   ffffffff89b47f22:       jb     0xffffffff89b480cc
    0.00 :   ffffffff89b47f28:       imul   $0xb67e,%eax,%edi
    0.00 :   ffffffff89b47f2e:       mov    %edx,%ecx
    0.00 :   ffffffff89b47f30:       mov    %rax,0xa0(%rbx)
    0.00 :   ffffffff89b47f37:       mov    0x88(%rbx),%rax
    0.00 :   ffffffff89b47f3e:       imul   %rcx,%r8
    0.00 :   ffffffff89b47f42:       sub    %r8,%rax
    0.00 :   ffffffff89b47f45:       jb     0xffffffff89b4813e
    0.00 :   ffffffff89b47f4b:       cmp    %eax,%edi
    0.00 :   ffffffff89b47f4d:       cmovb  %eax,%edi
    0.00 :   ffffffff89b47f50:       mov    %rax,0x88(%rbx)
    0.00 :   ffffffff89b47f57:       mov    %edi,%eax
    0.00 :   ffffffff89b47f59:       mov    %rax,0x88(%rbx)
    0.00 :   ffffffff89b47f60:       mov    0xb0(%rbx),%rax
    0.00 :   ffffffff89b47f67:       sub    %rsi,%rax
    0.00 :   ffffffff89b47f6a:       jb     0xffffffff89b48135
    0.00 :   ffffffff89b47f70:       imul   $0xb67e,%eax,%edi
    0.00 :   ffffffff89b47f76:       imul   %esi,%edx
    0.00 :   ffffffff89b47f79:       mov    %rax,0xb0(%rbx)
    0.00 :   ffffffff89b47f80:       mov    0x98(%rbx),%eax
    0.00 :   ffffffff89b47f86:       sub    %edx,%eax
    0.00 :   ffffffff89b47f88:       jb     0xffffffff89b4812e
    0.00 :   ffffffff89b47f8e:       cmp    %eax,%edi
    0.00 :   ffffffff89b47f90:       cmovb  %eax,%edi
    0.00 :   ffffffff89b47f93:       mov    %eax,0x98(%rbx)
    0.00 :   ffffffff89b47f99:       mov    0xa8(%rbx),%rax
    0.00 :   ffffffff89b47fa0:       mov    %edi,0x98(%rbx)
    0.00 :   ffffffff89b47fa6:       sub    %r15,%rax
    0.00 :   ffffffff89b47fa9:       jb     0xffffffff89b48125
    0.00 :   ffffffff89b47faf:       imul   $0xb67e,%eax,%edx
    0.00 :   ffffffff89b47fb5:       imul   %rcx,%r15
    0.00 :   ffffffff89b47fb9:       mov    %rax,0xa8(%rbx)
    0.00 :   ffffffff89b47fc0:       mov    0x90(%rbx),%rax
    0.00 :   ffffffff89b47fc7:       sub    %r15,%rax
    0.00 :   ffffffff89b47fca:       jb     0xffffffff89b48145
    0.00 :   ffffffff89b47fd0:       cmp    %eax,%edx
    0.00 :   ffffffff89b47fd2:       cmovb  %eax,%edx
    0.00 :   ffffffff89b47fd5:       mov    %rax,0x90(%rbx)
    0.00 :   ffffffff89b47fdc:       neg    %r15
    0.00 :   ffffffff89b47fdf:       mov    %edx,%eax
    0.00 :   ffffffff89b47fe1:       sar    $0xa,%r15
    0.00 :   ffffffff89b47fe5:       mov    %rax,0x90(%rbx)
    0.00 :   ffffffff89b47fec:       add    %r15,0x110(%rbx)
    0.00 :   ffffffff89b47ff3:       mov    $0x1,%r15d
    0.00 :   ffffffff89b47ff9:       movq   $0x1,0x108(%rbx)
    0.00 :   ffffffff89b48004:       jmp    0xffffffff89b47b27
    0.00 :   ffffffff89b48009:       mov    %gs:0x764e983c(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89b48010:       mov    %eax,%eax
    0.00 :   ffffffff89b48012:       bt     %rax,0x24b9186(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89b4801a:       setb   %al
    0.00 :   ffffffff89b4801d:       or     $0x1,%r15d
    0.00 :   ffffffff89b48021:       test   %al,%al
    0.00 :   ffffffff89b48023:       je     0xffffffff89b47b4c
    0.00 :   ffffffff89b48029:       incl   %gs:0x764e9818(%rip)        # 0x31848
    0.00 :   ffffffff89b48030:       mov    0x246de09(%rip),%rax        # 0xffffffff8bfb5e40
    0.00 :   ffffffff89b48037:       test   %rax,%rax
    0.00 :   ffffffff89b4803a:       je     0xffffffff89b48048
    0.00 :   ffffffff89b4803c:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89b48040:       mov    %r12,%rsi
    0.00 :   ffffffff89b48043:       call   0xffffffff89b2be60
    0.00 :   ffffffff89b48048:       decl   %gs:0x764e97f9(%rip)        # 0x31848
    0.00 :   ffffffff89b4804f:       jne    0xffffffff89b47b4c
    0.00 :   ffffffff89b48055:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4805a:       jmp    0xffffffff89b47b4c
    0.00 :   ffffffff89b4805f:       mov    %gs:0x764e97e6(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89b48066:       mov    %eax,%eax
    0.00 :   ffffffff89b48068:       bt     %rax,0x24b9130(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89b48070:       jae    0xffffffff89b47e0f
    0.00 :   ffffffff89b48076:       incl   %gs:0x764e97cb(%rip)        # 0x31848
    0.00 :   ffffffff89b4807d:       mov    0x246df9c(%rip),%rax        # 0xffffffff8bfb6020
    0.00 :   ffffffff89b48084:       test   %rax,%rax
    0.00 :   ffffffff89b48087:       je     0xffffffff89b48092
    0.00 :   ffffffff89b48089:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89b4808d:       call   0xffffffff89b2bc80
    0.00 :   ffffffff89b48092:       decl   %gs:0x764e97af(%rip)        # 0x31848
    0.00 :   ffffffff89b48099:       jne    0xffffffff89b47e0f
    0.00 :   ffffffff89b4809f:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b480a4:       jmp    0xffffffff89b47e0f
    0.00 :   ffffffff89b480a9:       mov    %r12,%rsi
    0.00 :   ffffffff89b480ac:       mov    %rbx,%rdi
    0.00 :   ffffffff89b480af:       call   0xffffffff89b47870
    0.00 :   ffffffff89b480b4:       jmp    0xffffffff89b47e28
    0.00 :   ffffffff89b480b9:       mov    %r12,%rdx
    0.00 :   ffffffff89b480bc:       mov    %rbx,%rsi
    0.00 :   ffffffff89b480bf:       mov    %r13,%rdi
    0.00 :   ffffffff89b480c2:       call   0xffffffff89b5fc40
    0.00 :   ffffffff89b480c7:       jmp    0xffffffff89b47b17
    0.00 :   ffffffff89b480cc:       xor    %edi,%edi
    0.00 :   ffffffff89b480ce:       xor    %eax,%eax
    0.00 :   ffffffff89b480d0:       jmp    0xffffffff89b47f2e
    0.00 :   ffffffff89b480d5:       mov    (%rdx),%rax
    0.00 :   ffffffff89b480d8:       test   %rax,%rax
    0.00 :   ffffffff89b480db:       je     0xffffffff89b480fb
    0.00 :   ffffffff89b480dd:       mov    $0x2,%edi
    0.00 :   ffffffff89b480e2:       shr    $0xa,%rax
    0.00 :   ffffffff89b480e6:       cmp    %rdi,%rax
    0.00 :   ffffffff89b480e9:       cmovb  %rdi,%rax
    0.00 :   ffffffff89b480ed:       mov    %eax,%edi
    0.00 :   ffffffff89b480ef:       mov    0x88(%rdx),%rax
    0.00 :   ffffffff89b480f6:       xor    %edx,%edx
    0.00 :   ffffffff89b480f8:       div    %rdi
    0.00 :   ffffffff89b480fb:       mov    0xc8(%r12),%rdx
    0.00 :   ffffffff89b48103:       cmp    %rdx,%rax
    0.00 :   ffffffff89b48106:       cmova  %rdx,%rax
    0.00 :   ffffffff89b4810a:       jmp    0xffffffff89b47d49
    0.00 :   ffffffff89b4810f:       imul   $0xb67e,%eax,%ecx
    0.00 :   ffffffff89b48115:       jmp    0xffffffff89b47cd2
    0.00 :   ffffffff89b4811a:       imul   $0xb67e,%eax,%edi
    0.00 :   ffffffff89b48120:       jmp    0xffffffff89b47c3e
    0.00 :   ffffffff89b48125:       xor    %edx,%edx
    0.00 :   ffffffff89b48127:       xor    %eax,%eax
    0.00 :   ffffffff89b48129:       jmp    0xffffffff89b47fb5
    0.00 :   ffffffff89b4812e:       xor    %eax,%eax
    0.00 :   ffffffff89b48130:       jmp    0xffffffff89b47f93
    0.00 :   ffffffff89b48135:       xor    %edi,%edi
    0.00 :   ffffffff89b48137:       xor    %eax,%eax
    0.00 :   ffffffff89b48139:       jmp    0xffffffff89b47f76
    0.00 :   ffffffff89b4813e:       xor    %eax,%eax
    0.00 :   ffffffff89b48140:       jmp    0xffffffff89b47f50
    0.00 :   ffffffff89b48145:       xor    %eax,%eax
    0.00 :   ffffffff89b48147:       jmp    0xffffffff89b47fd5
    0.00 :   ffffffff89b4814c:       cmp    %eax,%ecx
    0.00 :   ffffffff89b4814e:       cmovb  %eax,%ecx
    0.00 :   ffffffff89b48151:       jmp    0xffffffff89b47cf8
    0.00 :   ffffffff89b48156:       xor    %eax,%eax
    0.00 :   ffffffff89b48158:       xor    %r9d,%r9d
    0.00 :   ffffffff89b4815b:       jmp    0xffffffff89b47d8a
    0.00 :   ffffffff89b48160:       cmp    %eax,%edi
    0.00 :   ffffffff89b48162:       cmovb  %eax,%edi
    0.00 :   ffffffff89b48165:       jmp    0xffffffff89b47c64
    0.00 :   ffffffff89b4816a:       mov    0x178(%rdi),%r13
    0.00 :   ffffffff89b48171:       sub    0x180(%rdi),%r13
    0.00 :   ffffffff89b48178:       jmp    0xffffffff89b47b02
    0.00 :   ffffffff89b4817d:       movzbl 0x246b159(%rip),%r13d        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b48185:       cmp    $0x1,%r13b
    0.00 :   ffffffff89b48189:       ja     0xffffffff8aa3338a
    0.00 :   ffffffff89b4818f:       and    $0x1,%r13d
    0.00 :   ffffffff89b48193:       jne    0xffffffff89b47aed
    0.00 :   ffffffff89b48199:       mov    $0xffffffff8b3305c0,%rdi
    0.00 :   ffffffff89b481a0:       movb   $0x1,0x246b137(%rip)        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b481a7:       call   0xffffffff89ae9890
    0.00 :   ffffffff89b481ac:       ud2
    0.00 :   ffffffff89b481ae:       jmp    0xffffffff89b47aed
    0.00 :   ffffffff89b481b3:       cmp    %eax,%edx
    0.00 :   ffffffff89b481b5:       cmovb  %eax,%edx
    0.00 :   ffffffff89b481b8:       jmp    0xffffffff89b47dfa
    0.00 :   ffffffff89b481bd:       imul   $0xb67e,%eax,%edx
    0.00 :   ffffffff89b481c3:       jmp    0xffffffff89b47dd4
    0.00 :   ffffffff89b481c8:       movslq 0xaf8(%r12),%r15
    0.00 :   ffffffff89b481d0:       mov    $0x204d0,%r13
    0.00 :   ffffffff89b481d7:       cmp    $0x1fff,%r15
    0.00 :   ffffffff89b481de:       ja     0xffffffff89b48246
    0.00 :   ffffffff89b481e0:       add    -0x74b9e540(,%r15,8),%r13
    0.00 :   ffffffff89b481e8:       mov    0x0(%r13),%r13
    0.00 :   ffffffff89b481ec:       test   %r13,%r13
    0.00 :   ffffffff89b481ef:       je     0xffffffff89b47b88
    0.00 :   ffffffff89b481f5:       cmpl   $0x1,0xa08(%r12)
    0.00 :   ffffffff89b481fe:       mov    0x0(%r13),%r15
    0.00 :   ffffffff89b48202:       jbe    0xffffffff89b4821c
    0.00 :   ffffffff89b48204:       mov    0xa10(%r12),%rsi
    0.00 :   ffffffff89b4820c:       xor    %edx,%edx
    0.00 :   ffffffff89b4820e:       mov    %r13,%rdi
    0.00 :   ffffffff89b48211:       call   *%r15
    0.00 :   ffffffff89b48214:       nopl   (%rax)
    0.00 :   ffffffff89b48217:       jmp    0xffffffff89b47b88
    0.00 :   ffffffff89b4821c:       movzbl 0x246b0bb(%rip),%eax        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b48223:       cmp    $0x1,%al
    0.00 :   ffffffff89b48225:       ja     0xffffffff8aa3339f
    0.00 :   ffffffff89b4822b:       test   $0x1,%al
    0.00 :   ffffffff89b4822d:       jne    0xffffffff89b48204
    0.00 :   ffffffff89b4822f:       mov    $0xffffffff8b3305c0,%rdi
    0.00 :   ffffffff89b48236:       movb   $0x1,0x246b0a1(%rip)        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b4823d:       call   0xffffffff89ae9890
    0.00 :   ffffffff89b48242:       ud2
    0.00 :   ffffffff89b48244:       jmp    0xffffffff89b48204
    0.00 :   ffffffff89b48246:       mov    %r15,%rsi
    0.00 :   ffffffff89b48249:       mov    $0xffffffff8bc93a00,%rdi
    0.00 :   ffffffff89b48250:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b48255:       jmp    0xffffffff89b481e0
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89afed00 <load0>:
    0.00 :   ffffffff89afed00:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89afed05:       push   %rbp
    0.00 :   ffffffff89afed06:       mov    %rsp,%rbp
    0.00 :   ffffffff89afed09:       push   %r15
    0.00 :   ffffffff89afed0b:       push   %r14
    0.00 :   ffffffff89afed0d:       push   %r13
    0.00 :   ffffffff89afed0f:       push   %r12
    0.00 :   ffffffff89afed11:       push   %rbx
    0.00 :   ffffffff89afed12:       mov    %edi,%ebx
    0.00 :   ffffffff89afed14:       sub    $0x28,%rsp
    0.00 :   ffffffff89afed18:       mov    %edx,-0x3c(%rbp)
    0.00 :   ffffffff89afed1b:       mov    0xbf0(%rsi),%r14
    0.00 :   ffffffff89afed22:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89afed2b:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89afed2f:       xor    %eax,%eax
    0.00 :   ffffffff89afed31:       testb  $0x4,0x74(%r14)
    0.00 :   ffffffff89afed36:       je     0xffffffff89afed73
    0.00 :   ffffffff89afed38:       cmpq   $0x0,0x78(%r14)
    0.00 :   ffffffff89afed3d:       je     0xffffffff89afed45
    0.00 :   ffffffff89afed3f:       cmp    $0x9,%edi
    0.00 :   ffffffff89afed42:       sete   %al
    0.00 :   ffffffff89afed45:       mov    -0x30(%rbp),%rdx
    0.00 :   ffffffff89afed49:       sub    %gs:0x28,%rdx
    0.00 :   ffffffff89afed52:       jne    0xffffffff89aff0a1
    0.00 :   ffffffff89afed58:       add    $0x28,%rsp
    0.00 :   ffffffff89afed5c:       pop    %rbx
    0.00 :   ffffffff89afed5d:       pop    %r12
    0.00 :   ffffffff89afed5f:       pop    %r13
    0.00 :   ffffffff89afed61:       pop    %r14
    0.00 :   ffffffff89afed63:       pop    %r15
    0.00 :   ffffffff89afed65:       pop    %rbp
    0.00 :   ffffffff89afed66:       xor    %edx,%edx
    0.00 :   ffffffff89afed68:       xor    %ecx,%ecx
    0.00 :   ffffffff89afed6a:       xor    %esi,%esi
    0.00 :   ffffffff89afed6c:       xor    %edi,%edi
    0.00 :   ffffffff89afed6e:       ret
    0.00 :   ffffffff89afed6f:       int3
    0.00 :   ffffffff89afed70:       int3
    0.00 :   ffffffff89afed71:       int3
    0.00 :   ffffffff89afed72:       int3
    0.00 :   ffffffff89afed73:       lea    -0x1(%rdi),%r13d
    0.00 :   ffffffff89afed77:       mov    %rsi,%r12
    0.00 :   ffffffff89afed7a:       movslq %r13d,%rax
    0.00 :   ffffffff89afed7d:       mov    %rax,-0x48(%rbp)
    0.00 :   ffffffff89afed81:       cmp    $0x1e,%r13d
    0.00 :   ffffffff89afed85:       jbe    0xffffffff89afee5d
    0.00 :   ffffffff89afed8b:       cmpq   $0x3f,-0x48(%rbp)
    0.00 :   ffffffff89afed90:       mov    0xc00(%rsi),%r15
    0.00 :   ffffffff89afed97:       ja     0xffffffff8aa325ab
    0.00 :   ffffffff89afed9d:       bt     %r13,%r15
    0.00 :   ffffffff89afeda1:       jb     0xffffffff89afef71
    0.00 :   ffffffff89afeda7:       mov    0xc08(%r12),%r15
    0.00 :   ffffffff89afedaf:       bt     %r13,%r15
    0.00 :   ffffffff89afedb3:       jb     0xffffffff89afef71
    0.00 :   ffffffff89afedb9:       mov    0x30(%r12),%eax
    0.00 :   ffffffff89afedbe:       test   %eax,%eax
    0.00 :   ffffffff89afedc0:       setne  %dl
    0.00 :   ffffffff89afedc3:       cmp    $0x9,%ebx
    0.00 :   ffffffff89afedc6:       setne  %al
    0.00 :   ffffffff89afedc9:       test   %al,%dl
    0.00 :   ffffffff89afedcb:       jne    0xffffffff89afef71
    0.00 :   ffffffff89afedd1:       mov    -0x48(%rbp),%r14
    0.00 :   ffffffff89afedd5:       add    $0x1,%r14
    0.00 :   ffffffff89afedd9:       shl    $0x5,%r14
    0.00 :   ffffffff89afeddd:       add    0xbf8(%r12),%r14
    0.00 :   ffffffff89afede5:       cmp    $0x1e,%r13d
    0.00 :   ffffffff89afede9:       setbe  %dil
    0.00 :   ffffffff89afeded:       mov    (%r14),%rsi
    0.00 :   ffffffff89afedf0:       cmpl   $0x1,0x99c(%r12)
    0.00 :   ffffffff89afedf9:       jne    0xffffffff89afee04
    0.00 :   ffffffff89afedfb:       test   %dil,%dil
    0.00 :   ffffffff89afedfe:       jne    0xffffffff89afefea
    0.00 :   ffffffff89afee04:       mov    0xbf0(%r12),%rax
    0.00 :   ffffffff89afee0c:       test   %rsi,%rsi
    0.00 :   ffffffff89afee0f:       sete   %dl
    0.00 :   ffffffff89afee12:       mov    0x74(%rax),%eax
    0.00 :   ffffffff89afee15:       shr    $0x6,%eax
    0.00 :   ffffffff89afee18:       and    %dl,%al
    0.00 :   ffffffff89afee1a:       jne    0xffffffff89aff074
    0.00 :   ffffffff89afee20:       testb  $0x20,0x2e(%r12)
    0.00 :   ffffffff89afee26:       jne    0xffffffff89aff057
    0.00 :   ffffffff89afee2c:       cmp    $0x1,%rsi
    0.00 :   ffffffff89afee30:       je     0xffffffff89afed45
    0.00 :   ffffffff89afee36:       test   %dil,%dil
    0.00 :   ffffffff89afee39:       je     0xffffffff89afef71
    0.00 :   ffffffff89afee3f:       test   %dl,%dl
    0.00 :   ffffffff89afee41:       je     0xffffffff89afef71
    0.00 :   ffffffff89afee47:       mov    $0x8430000,%eax
    0.00 :   ffffffff89afee4c:       mov    %r13d,%ecx
    0.00 :   ffffffff89afee4f:       shr    %cl,%rax
    0.00 :   ffffffff89afee52:       and    $0x1,%eax
    0.00 :   ffffffff89afee55:       xor    $0x1,%eax
    0.00 :   ffffffff89afee58:       jmp    0xffffffff89afed45
    0.00 :   ffffffff89afee5d:       mov    $0x3c0000,%eax
    0.00 :   ffffffff89afee62:       bt     %r13,%rax
    0.00 :   ffffffff89afee66:       jb     0xffffffff89afef7b
    0.00 :   ffffffff89afee6c:       cmp    $0x12,%edi
    0.00 :   ffffffff89afee6f:       jne    0xffffffff89afefdd
    0.00 :   ffffffff89afee75:       lea    -0x38(%rbp),%r15
    0.00 :   ffffffff89afee79:       lea    0x40(%r14),%rsi
    0.00 :   ffffffff89afee7d:       movq   $0x3c0000,-0x38(%rbp)
    0.00 :   ffffffff89afee85:       mov    %r15,%rdi
    0.00 :   ffffffff89afee88:       call   0xffffffff89afe360
    0.00 :   ffffffff89afee8d:       mov    0xbf0(%r12),%rax
    0.00 :   ffffffff89afee95:       mov    0x10(%rax),%rsi
    0.00 :   ffffffff89afee99:       add    $0x10,%rax
    0.00 :   ffffffff89afee9d:       lea    -0xa58(%rsi),%rdx
    0.00 :   ffffffff89afeea4:       cmp    %rsi,%rax
    0.00 :   ffffffff89afeea7:       jne    0xffffffff89afeefb
    0.00 :   ffffffff89afeea9:       jmp    0xffffffff89aff004
    0.00 :   ffffffff89afeeae:       testb  $0x1,0x32(%rdx)
    0.00 :   ffffffff89afeeb2:       jne    0xffffffff89aff033
    0.00 :   ffffffff89afeeb8:       mov    %rdx,%rdi
    0.00 :   ffffffff89afeebb:       mov    $0x4,%esi
    0.00 :   ffffffff89afeec0:       mov    %rdx,-0x50(%rbp)
    0.00 :   ffffffff89afeec4:       andq   $0xfffffffffbffffff,0x940(%rdx)
    0.00 :   ffffffff89afeecf:       call   0xffffffff89b3ce80
    0.00 :   ffffffff89afeed4:       mov    -0x50(%rbp),%rdx
    0.00 :   ffffffff89afeed8:       mov    0xbf0(%r12),%rax
    0.00 :   ffffffff89afeee0:       mov    0xa58(%rdx),%rsi
    0.00 :   ffffffff89afeee7:       add    $0x10,%rax
    0.00 :   ffffffff89afeeeb:       lea    -0xa58(%rsi),%rdx
    0.00 :   ffffffff89afeef2:       cmp    %rax,%rsi
    0.00 :   ffffffff89afeef5:       je     0xffffffff89aff004
    0.00 :   ffffffff89afeefb:       lea    0xc18(%rdx),%rsi
    0.00 :   ffffffff89afef02:       mov    %r15,%rdi
    0.00 :   ffffffff89afef05:       mov    %rdx,-0x50(%rbp)
    0.00 :   ffffffff89afef09:       call   0xffffffff89afe360
    0.00 :   ffffffff89afef0e:       mov    -0x50(%rbp),%rdx
    0.00 :   ffffffff89afef12:       mov    0x940(%rdx),%rax
    0.00 :   ffffffff89afef19:       mov    %rax,%rsi
    0.00 :   ffffffff89afef1c:       and    $0xfffffffffff8ffff,%rsi
    0.00 :   ffffffff89afef23:       mov    %rsi,0x940(%rdx)
    0.00 :   ffffffff89afef2a:       test   $0x180000,%eax
    0.00 :   ffffffff89afef2f:       jne    0xffffffff89afeeae
    0.00 :   ffffffff89afef35:       test   $0x200000,%eax
    0.00 :   ffffffff89afef3a:       je     0xffffffff89afeeae
    0.00 :   ffffffff89afef40:       and    $0xffffffffffd8ffff,%rax
    0.00 :   ffffffff89afef46:       mov    %rax,0x940(%rdx)
    0.00 :   ffffffff89afef4d:       lock addl $0x0,-0x4(%rsp)
    0.00 :   ffffffff89afef53:       mov    $0x15,%esi
    0.00 :   ffffffff89afef58:       lea    0x940(%rdx),%rdi
    0.00 :   ffffffff89afef5f:       mov    %rdx,-0x50(%rbp)
    0.00 :   ffffffff89afef63:       call   0xffffffff89b6ba90
    0.00 :   ffffffff89afef68:       mov    -0x50(%rbp),%rdx
    0.00 :   ffffffff89afef6c:       jmp    0xffffffff89afeeae
    0.00 :   ffffffff89afef71:       mov    $0x1,%eax
    0.00 :   ffffffff89afef76:       jmp    0xffffffff89afed45
    0.00 :   ffffffff89afef7b:       lea    -0x38(%rbp),%r15
    0.00 :   ffffffff89afef7f:       lea    0x40(%r14),%rsi
    0.00 :   ffffffff89afef83:       movq   $0x20000,-0x38(%rbp)
    0.00 :   ffffffff89afef8b:       mov    %r15,%rdi
    0.00 :   ffffffff89afef8e:       call   0xffffffff89afe360
    0.00 :   ffffffff89afef93:       mov    0xbf0(%r12),%rax
    0.00 :   ffffffff89afef9b:       mov    0x10(%rax),%rcx
    0.00 :   ffffffff89afef9f:       add    $0x10,%rax
    0.00 :   ffffffff89afefa3:       lea    -0xa58(%rcx),%r14
    0.00 :   ffffffff89afefaa:       cmp    %rax,%rcx
    0.00 :   ffffffff89afefad:       je     0xffffffff89afefdd
    0.00 :   ffffffff89afefaf:       lea    0xc18(%r14),%rsi
    0.00 :   ffffffff89afefb6:       mov    %r15,%rdi
    0.00 :   ffffffff89afefb9:       call   0xffffffff89afe360
    0.00 :   ffffffff89afefbe:       mov    0xbf0(%r12),%rax
    0.00 :   ffffffff89afefc6:       mov    0xa58(%r14),%rcx
    0.00 :   ffffffff89afefcd:       add    $0x10,%rax
    0.00 :   ffffffff89afefd1:       lea    -0xa58(%rcx),%r14
    0.00 :   ffffffff89afefd8:       cmp    %rax,%rcx
    0.00 :   ffffffff89afefdb:       jne    0xffffffff89afefaf
  100.00 :   ffffffff89afefdd:       mov    0xc00(%r12),%r15
    0.00 :   ffffffff89afefe5:       jmp    0xffffffff89afed9d
    0.00 :   ffffffff89afefea:       mov    $0x40100,%eax
    0.00 :   ffffffff89afefef:       mov    %r13d,%ecx
    0.00 :   ffffffff89afeff2:       shr    %cl,%rax
    0.00 :   ffffffff89afeff5:       test   $0x1,%al
    0.00 :   ffffffff89afeff7:       je     0xffffffff89afee04
    0.00 :   ffffffff89afeffd:       xor    %eax,%eax
    0.00 :   ffffffff89afefff:       jmp    0xffffffff89afed45
    0.00 :   ffffffff89aff004:       mov    0x74(%r14),%eax
    0.00 :   ffffffff89aff008:       test   $0x1,%al
    0.00 :   ffffffff89aff00a:       je     0xffffffff89aff048
    0.00 :   ffffffff89aff00c:       mov    $0x20,%edx
    0.00 :   ffffffff89aff011:       test   $0x4,%al
    0.00 :   ffffffff89aff013:       jne    0xffffffff89aff070
    0.00 :   ffffffff89aff015:       and    $0xffffffcc,%eax
    0.00 :   ffffffff89aff018:       movl   $0x0,0x70(%r14)
    0.00 :   ffffffff89aff020:       or     %edx,%eax
    0.00 :   ffffffff89aff022:       movl   $0x0,0x60(%r14)
    0.00 :   ffffffff89aff02a:       or     $0x2,%eax
    0.00 :   ffffffff89aff02d:       mov    %eax,0x74(%r14)
    0.00 :   ffffffff89aff031:       jmp    0xffffffff89afefdd
    0.00 :   ffffffff89aff033:       mov    %rdx,%rdi
    0.00 :   ffffffff89aff036:       mov    %rdx,-0x50(%rbp)
    0.00 :   ffffffff89aff03a:       call   0xffffffff89afec30
    0.00 :   ffffffff89aff03f:       mov    -0x50(%rbp),%rdx
    0.00 :   ffffffff89aff043:       jmp    0xffffffff89afeed8
    0.00 :   ffffffff89aff048:       mov    0x70(%r14),%edx
    0.00 :   ffffffff89aff04c:       test   %edx,%edx
    0.00 :   ffffffff89aff04e:       je     0xffffffff89afefdd
    0.00 :   ffffffff89aff050:       mov    $0x10,%edx
    0.00 :   ffffffff89aff055:       jmp    0xffffffff89aff011
    0.00 :   ffffffff89aff057:       cmp    $0x3,%rsi
    0.00 :   ffffffff89aff05b:       jne    0xffffffff89afee2c
    0.00 :   ffffffff89aff061:       cmpb   $0x1,-0x3c(%rbp)
    0.00 :   ffffffff89aff065:       je     0xffffffff89afee2c
    0.00 :   ffffffff89aff06b:       jmp    0xffffffff89afed45
    0.00 :   ffffffff89aff070:       ud2
    0.00 :   ffffffff89aff072:       jmp    0xffffffff89aff015
    0.00 :   ffffffff89aff074:       movzbl -0x3c(%rbp),%r12d
    0.00 :   ffffffff89aff079:       cmp    $0x1e,%r13d
    0.00 :   ffffffff89aff07d:       seta   %al
    0.00 :   ffffffff89aff080:       xor    $0x1,%r12d
    0.00 :   ffffffff89aff084:       or     %r12b,%al
    0.00 :   ffffffff89aff087:       jne    0xffffffff89afeffd
    0.00 :   ffffffff89aff08d:       mov    $0x40100,%ecx
    0.00 :   ffffffff89aff092:       bt     %r13,%rcx
    0.00 :   ffffffff89aff096:       jb     0xffffffff89afee36
    0.00 :   ffffffff89aff09c:       jmp    0xffffffff89afed45
    0.00 :   ffffffff89aff0a1:       call   0xffffffff8aa98a20
    0.00 :   ffffffff89aff0a6:       cs nopw 0x0(%rax,%rax,1)
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000005a4d0 <hack_digit>:
         : 6     hack_digit():
         : 7     ./stdio-common/printf_fp.c:170
    0.00 :   5a4d0:  push   %r12
    0.00 :   5a4d2:  push   %rbx
    0.00 :   5a4d3:  mov    %rdi,%rbx
    0.00 :   5a4d6:  sub    $0x8,%rsp
         : 12    ./stdio-common/printf_fp.c:173
    0.00 :   5a4da:  mov    (%rdi),%eax
    0.00 :   5a4dc:  test   %eax,%eax
    0.00 :   5a4de:  je     5a4ea <hack_digit+0x1a>
         : 16    ./stdio-common/printf_fp.c:173 (discriminator 1)
    0.00 :   5a4e0:  cmpl   $0x66,0x4(%rdi)
    0.00 :   5a4e4:  je     5a5d8 <hack_digit+0x108>
         : 19    ./stdio-common/printf_fp.c:175
    0.00 :   5a4ea:  mov    0x28(%rbx),%r9
         : 21    ./stdio-common/printf_fp.c:177
    0.00 :   5a4ee:  mov    0x18(%rbx),%rdx
    0.00 :   5a4f2:  mov    0x10(%rbx),%rdi
         : 24    ./stdio-common/printf_fp.c:175
    0.00 :   5a4f6:  test   %r9,%r9
    0.00 :   5a4f9:  je     5a5a8 <hack_digit+0xd8>
         : 27    ./stdio-common/printf_fp.c:183
    0.00 :   5a4ff:  cmp    %rdx,%r9
    0.00 :   5a502:  jle    5a540 <hack_digit+0x70>
    0.00 :   5a504:  mov    $0x30,%r12d
         : 31    ./stdio-common/printf_fp.c:204
    0.00 :   5a50a:  mov    $0xa,%ecx
    0.00 :   5a50f:  mov    %rdi,%rsi
    0.00 :   5a512:  call   55420 <__mpn_mul_1>
         : 35    ./stdio-common/printf_fp.c:205
    0.00 :   5a517:  test   %rax,%rax
    0.00 :   5a51a:  je     5a530 <hack_digit+0x60>
         : 38    ./stdio-common/printf_fp.c:206
    0.00 :   5a51c:  mov    0x18(%rbx),%rdx
    0.00 :   5a520:  mov    0x10(%rbx),%rcx
    0.00 :   5a524:  lea    0x1(%rdx),%rsi
    0.00 :   5a528:  mov    %rsi,0x18(%rbx)
    0.00 :   5a52c:  mov    %rax,(%rcx,%rdx,8)
         : 44    ./stdio-common/printf_fp.c:210
    0.00 :   5a530:  add    $0x8,%rsp
    0.00 :   5a534:  mov    %r12d,%eax
  100.00 :   5a537:  pop    %rbx
    0.00 :   5a538:  pop    %r12
    0.00 :   5a53a:  ret
    0.00 :   5a53b:  nopl   0x0(%rax,%rax,1)
         : 51    ./stdio-common/printf_fp.c:187
    0.00 :   5a540:  mov    0x30(%rbx),%r10
    0.00 :   5a544:  mov    0x20(%rbx),%r8
    0.00 :   5a548:  mov    %rdx,%rcx
    0.00 :   5a54b:  xor    %esi,%esi
    0.00 :   5a54d:  mov    %rdi,%rdx
    0.00 :   5a550:  mov    %r10,%rdi
    0.00 :   5a553:  call   546c0 <__mpn_divrem>
         : 59    ./stdio-common/printf_fp.c:189
    0.00 :   5a558:  mov    0x30(%rbx),%rdx
         : 61    ./stdio-common/printf_fp.c:187
    0.00 :   5a55c:  mov    %rax,%r8
         : 63    ./stdio-common/printf_fp.c:189
    0.00 :   5a55f:  mov    0x18(%rbx),%rax
    0.00 :   5a563:  sub    0x28(%rbx),%rax
    0.00 :   5a567:  mov    %r8,(%rdx,%rax,8)
         : 67    ./stdio-common/printf_fp.c:190
    0.00 :   5a56b:  mov    (%rdx),%r12
         : 69    ./stdio-common/printf_fp.c:192
    0.00 :   5a56e:  mov    0x28(%rbx),%rdx
    0.00 :   5a572:  mov    %rdx,0x18(%rbx)
         : 72    ./stdio-common/printf_fp.c:193
    0.00 :   5a576:  test   %rdx,%rdx
    0.00 :   5a579:  je     5a600 <hack_digit+0x130>
    0.00 :   5a57f:  mov    0x10(%rbx),%rdi
    0.00 :   5a583:  jmp    5a592 <hack_digit+0xc2>
    0.00 :   5a585:  nopl   (%rax)
         : 78    ./stdio-common/printf_fp.c:194
    0.00 :   5a588:  sub    $0x1,%rdx
    0.00 :   5a58c:  mov    %rdx,0x18(%rbx)
         : 81    ./stdio-common/printf_fp.c:193
    0.00 :   5a590:  je     5a600 <hack_digit+0x130>
         : 83    ./stdio-common/printf_fp.c:193 (discriminator 1)
    0.00 :   5a592:  cmpq   $0x0,-0x8(%rdi,%rdx,8)
    0.00 :   5a598:  je     5a588 <hack_digit+0xb8>
         : 86    ./stdio-common/printf_fp.c:200
    0.00 :   5a59a:  add    $0x30,%r12d
    0.00 :   5a59e:  jmp    5a50a <hack_digit+0x3a>
    0.00 :   5a5a3:  nopl   0x0(%rax,%rax,1)
         : 90    ./stdio-common/printf_fp.c:177
    0.00 :   5a5a8:  lea    -0x8(%rdi,%rdx,8),%rbx
         : 92    ./stdio-common/printf_fp.c:178
    0.00 :   5a5ad:  mov    $0xa,%ecx
    0.00 :   5a5b2:  sub    $0x1,%rdx
    0.00 :   5a5b6:  mov    %rdi,%rsi
         : 96    ./stdio-common/printf_fp.c:177
    0.00 :   5a5b9:  mov    (%rbx),%r12
         : 98    ./stdio-common/printf_fp.c:178
    0.00 :   5a5bc:  call   55420 <__mpn_mul_1>
    0.00 :   5a5c1:  mov    %rax,(%rbx)
         : 101   ./stdio-common/printf_fp.c:209
    0.00 :   5a5c4:  add    $0x30,%r12d
         : 103   ./stdio-common/printf_fp.c:210
    0.00 :   5a5c8:  add    $0x8,%rsp
    0.00 :   5a5cc:  mov    %r12d,%eax
    0.00 :   5a5cf:  pop    %rbx
    0.00 :   5a5d0:  pop    %r12
    0.00 :   5a5d2:  ret
    0.00 :   5a5d3:  nopl   0x0(%rax,%rax,1)
         : 110   ./stdio-common/printf_fp.c:173 (discriminator 2)
    0.00 :   5a5d8:  mov    0x8(%rdi),%eax
    0.00 :   5a5db:  mov    $0x30,%r12d
    0.00 :   5a5e1:  lea    -0x1(%rax),%edx
    0.00 :   5a5e4:  mov    %edx,0x8(%rdi)
    0.00 :   5a5e7:  test   %eax,%eax
    0.00 :   5a5e9:  jle    5a4ea <hack_digit+0x1a>
         : 117   ./stdio-common/printf_fp.c:210
    0.00 :   5a5ef:  add    $0x8,%rsp
    0.00 :   5a5f3:  mov    %r12d,%eax
    0.00 :   5a5f6:  pop    %rbx
    0.00 :   5a5f7:  pop    %r12
    0.00 :   5a5f9:  ret
    0.00 :   5a5fa:  nopw   0x0(%rax,%rax,1)
         : 124   ./stdio-common/printf_fp.c:199
    0.00 :   5a600:  movq   $0x1,0x18(%rbx)
         : 126   ./stdio-common/printf_fp.c:200
    0.00 :   5a608:  add    $0x30,%r12d
         : 128   ./stdio-common/printf_fp.c:210
    0.00 :   5a60c:  add    $0x8,%rsp
    0.00 :   5a610:  mov    %r12d,%eax
    0.00 :   5a613:  pop    %rbx
    0.00 :   5a614:  pop    %r12
    0.00 :   5a616:  ret
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89a05d80 <load0>:
  100.00 :   ffffffff89a05d80:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a05d85:       mov    $0x19c60,%rax
    0.00 :   ffffffff89a05d8c:       add    %gs:0x76613c4c(%rip),%rax        # 0x199e0
    0.00 :   ffffffff89a05d94:       cmpq   $0x0,0x25f6394(%rip)        # 0xffffffff8bffc130
    0.00 :   ffffffff89a05d9c:       je     0xffffffff89a05da8
    0.00 :   ffffffff89a05d9e:       mov    0x210(%rax),%edx
    0.00 :   ffffffff89a05da4:       test   %edx,%edx
    0.00 :   ffffffff89a05da6:       jne    0xffffffff89a05db1
    0.00 :   ffffffff89a05da8:       xor    %eax,%eax
    0.00 :   ffffffff89a05daa:       xor    %edx,%edx
    0.00 :   ffffffff89a05dac:       ret
    0.00 :   ffffffff89a05dad:       int3
    0.00 :   ffffffff89a05dae:       int3
    0.00 :   ffffffff89a05daf:       int3
    0.00 :   ffffffff89a05db0:       int3
    0.00 :   ffffffff89a05db1:       push   %rbp
    0.00 :   ffffffff89a05db2:       movl   $0x0,0x218(%rax)
    0.00 :   ffffffff89a05dbc:       movl   $0x0,0x210(%rax)
    0.00 :   ffffffff89a05dc6:       mov    %rsp,%rbp
    0.00 :   ffffffff89a05dc9:       call   0xffffffff89a10a70
    0.00 :   ffffffff89a05dce:       pop    %rbp
    0.00 :   ffffffff89a05dcf:       xor    %eax,%eax
    0.00 :   ffffffff89a05dd1:       xor    %edx,%edx
    0.00 :   ffffffff89a05dd3:       ret
    0.00 :   ffffffff89a05dd4:       int3
    0.00 :   ffffffff89a05dd5:       int3
    0.00 :   ffffffff89a05dd6:       int3
    0.00 :   ffffffff89a05dd7:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b79d30 <load0>:
    0.00 :   ffffffff89b79d30:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b79d35:       push   %rbp
    0.00 :   ffffffff89b79d36:       mov    %rsp,%rbp
    0.00 :   ffffffff89b79d39:       push   %r15
    0.00 :   ffffffff89b79d3b:       push   %r14
    0.00 :   ffffffff89b79d3d:       push   %r13
    0.00 :   ffffffff89b79d3f:       push   %r12
    0.00 :   ffffffff89b79d41:       push   %rbx
    0.00 :   ffffffff89b79d42:       mov    0x998(%rdi),%eax
    0.00 :   ffffffff89b79d48:       mov    0x14(%rdi),%r14d
    0.00 :   ffffffff89b79d4c:       test   %eax,%eax
    0.00 :   ffffffff89b79d4e:       jne    0xffffffff89b79d6f
    0.00 :   ffffffff89b79d50:       pop    %rbx
    0.00 :   ffffffff89b79d51:       pop    %r12
    0.00 :   ffffffff89b79d53:       pop    %r13
    0.00 :   ffffffff89b79d55:       pop    %r14
    0.00 :   ffffffff89b79d57:       pop    %r15
    0.00 :   ffffffff89b79d59:       pop    %rbp
    0.00 :   ffffffff89b79d5a:       xor    %eax,%eax
    0.00 :   ffffffff89b79d5c:       xor    %edx,%edx
    0.00 :   ffffffff89b79d5e:       xor    %ecx,%ecx
    0.00 :   ffffffff89b79d60:       xor    %esi,%esi
    0.00 :   ffffffff89b79d62:       xor    %edi,%edi
    0.00 :   ffffffff89b79d64:       xor    %r8d,%r8d
    0.00 :   ffffffff89b79d67:       xor    %r9d,%r9d
    0.00 :   ffffffff89b79d6a:       ret
    0.00 :   ffffffff89b79d6b:       int3
    0.00 :   ffffffff89b79d6c:       int3
    0.00 :   ffffffff89b79d6d:       int3
    0.00 :   ffffffff89b79d6e:       int3
    0.00 :   ffffffff89b79d6f:       mov    %rdi,%rbx
    0.00 :   ffffffff89b79d72:       mov    %esi,%r12d
    0.00 :   ffffffff89b79d75:       mov    %edx,%r13d
    0.00 :   ffffffff89b79d78:       call   0xffffffff89b670b0
    0.00 :   ffffffff89b79d7d:       mov    %r14d,%edi
    0.00 :   ffffffff89b79d80:       call   0xffffffff89b6e310
    0.00 :   ffffffff89b79d85:       mov    %rax,%r15
    0.00 :   ffffffff89b79d88:       xchg   %ax,%ax
  100.00 :   ffffffff89b79d8a:       mov    0xe08(%rbx),%rax
    0.00 :   ffffffff89b79d91:       mov    $0xffffffff8bc98500,%rbx
    0.00 :   ffffffff89b79d98:       mov    0x80(%rax),%rax
    0.00 :   ffffffff89b79d9f:       mov    0xf8(%rax),%rdx
    0.00 :   ffffffff89b79da6:       cmpq   $0x1,0x68(%rdx)
    0.00 :   ffffffff89b79dab:       je     0xffffffff89b79db4
    0.00 :   ffffffff89b79dad:       mov    0x470(%rax),%rbx
    0.00 :   ffffffff89b79db4:       mov    %rbx,%rdi
    0.00 :   ffffffff89b79db7:       mov    $0x1,%r9d
    0.00 :   ffffffff89b79dbd:       mov    %r15,%r8
    0.00 :   ffffffff89b79dc0:       mov    %r13d,%ecx
    0.00 :   ffffffff89b79dc3:       mov    %r12d,%edx
    0.00 :   ffffffff89b79dc6:       mov    %r14d,%esi
    0.00 :   ffffffff89b79dc9:       call   0xffffffff89b691c0
    0.00 :   ffffffff89b79dce:       mov    (%rbx),%rbx
    0.00 :   ffffffff89b79dd1:       test   %rbx,%rbx
    0.00 :   ffffffff89b79dd4:       jne    0xffffffff89b79db4
    0.00 :   ffffffff89b79dd6:       pop    %rbx
    0.00 :   ffffffff89b79dd7:       pop    %r12
    0.00 :   ffffffff89b79dd9:       pop    %r13
    0.00 :   ffffffff89b79ddb:       pop    %r14
    0.00 :   ffffffff89b79ddd:       pop    %r15
    0.00 :   ffffffff89b79ddf:       pop    %rbp
    0.00 :   ffffffff89b79de0:       xor    %eax,%eax
    0.00 :   ffffffff89b79de2:       xor    %edx,%edx
    0.00 :   ffffffff89b79de4:       xor    %ecx,%ecx
    0.00 :   ffffffff89b79de6:       xor    %esi,%esi
    0.00 :   ffffffff89b79de8:       xor    %edi,%edi
    0.00 :   ffffffff89b79dea:       xor    %r8d,%r8d
    0.00 :   ffffffff89b79ded:       xor    %r9d,%r9d
    0.00 :   ffffffff89b79df0:       ret
    0.00 :   ffffffff89b79df1:       int3
    0.00 :   ffffffff89b79df2:       int3
    0.00 :   ffffffff89b79df3:       int3
    0.00 :   ffffffff89b79df4:       int3
    0.00 :   ffffffff89b79df5:       mov    $0xffffffff8bc98500,%rbx
    0.00 :   ffffffff89b79dfc:       jmp    0xffffffff89b79db4
    0.00 :   ffffffff89b79dfe:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89a4b000 <load0>:
  100.00 :   ffffffff89a4b000:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a4b005:       push   %rbp
    0.00 :   ffffffff89a4b006:       mov    %rsp,%rbp
    0.00 :   ffffffff89a4b009:       push   %r12
    0.00 :   ffffffff89a4b00b:       mov    %rdi,%r12
    0.00 :   ffffffff89a4b00e:       lea    -0x68(%rbp),%rdi
    0.00 :   ffffffff89a4b012:       sub    $0x60,%rsp
    0.00 :   ffffffff89a4b016:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89a4b01f:       mov    %rax,-0x10(%rbp)
    0.00 :   ffffffff89a4b023:       xor    %eax,%eax
    0.00 :   ffffffff89a4b025:       call   0xffffffff89b04c30
    0.00 :   ffffffff89a4b02a:       test   %al,%al
    0.00 :   ffffffff89a4b02c:       jne    0xffffffff89a4b0fc
    0.00 :   ffffffff89a4b032:       mov    0x78(%r12),%rdx
    0.00 :   ffffffff89a4b037:       cmp    $0xffffffff,%edx
    0.00 :   ffffffff89a4b03a:       je     0xffffffff89a4b05d
    0.00 :   ffffffff89a4b03c:       mov    0x50(%r12),%rax
    0.00 :   ffffffff89a4b041:       mov    %gs:0x31840,%rcx
    0.00 :   ffffffff89a4b04a:       movslq %eax,%rsi
    0.00 :   ffffffff89a4b04d:       testb  $0x6,0x10(%rcx)
    0.00 :   ffffffff89a4b051:       cmovne %rsi,%rax
    0.00 :   ffffffff89a4b055:       cmp    $0xfffffffffffff000,%rax
    0.00 :   ffffffff89a4b05b:       ja     0xffffffff89a4b0a9
    0.00 :   ffffffff89a4b05d:       mov    %gs:0x31840,%rdi
    0.00 :   ffffffff89a4b066:       movzbl 0x950(%rdi),%eax
    0.00 :   ffffffff89a4b06d:       test   $0x8,%al
    0.00 :   ffffffff89a4b06f:       je     0xffffffff89a4b086
    0.00 :   ffffffff89a4b071:       and    $0xfffffff7,%eax
    0.00 :   ffffffff89a4b074:       add    $0xc10,%rdi
    0.00 :   ffffffff89a4b07b:       mov    %al,-0x2c0(%rdi)
    0.00 :   ffffffff89a4b081:       call   0xffffffff89b018b0
    0.00 :   ffffffff89a4b086:       mov    -0x10(%rbp),%rax
    0.00 :   ffffffff89a4b08a:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89a4b093:       jne    0xffffffff89a4b10d
    0.00 :   ffffffff89a4b095:       mov    -0x8(%rbp),%r12
    0.00 :   ffffffff89a4b099:       leave
    0.00 :   ffffffff89a4b09a:       xor    %eax,%eax
    0.00 :   ffffffff89a4b09c:       xor    %edx,%edx
    0.00 :   ffffffff89a4b09e:       xor    %ecx,%ecx
    0.00 :   ffffffff89a4b0a0:       xor    %esi,%esi
    0.00 :   ffffffff89a4b0a2:       xor    %edi,%edi
    0.00 :   ffffffff89a4b0a4:       ret
    0.00 :   ffffffff89a4b0a5:       int3
    0.00 :   ffffffff89a4b0a6:       int3
    0.00 :   ffffffff89a4b0a7:       int3
    0.00 :   ffffffff89a4b0a8:       int3
    0.00 :   ffffffff89a4b0a9:       cmp    $0xfffffffffffffdfc,%rax
    0.00 :   ffffffff89a4b0af:       jne    0xffffffff89a4b0d7
    0.00 :   ffffffff89a4b0b1:       mov    0x960(%rcx),%rax
    0.00 :   ffffffff89a4b0b8:       and    $0x2,%eax
    0.00 :   ffffffff89a4b0bb:       cmp    $0x1,%rax
    0.00 :   ffffffff89a4b0bf:       sbb    %rax,%rax
    0.00 :   ffffffff89a4b0c2:       subq   $0x2,0x80(%r12)
    0.00 :   ffffffff89a4b0cb:       and    $0xdb,%eax
    0.00 :   ffffffff89a4b0d0:       mov    %rax,0x50(%r12)
    0.00 :   ffffffff89a4b0d5:       jmp    0xffffffff89a4b05d
    0.00 :   ffffffff89a4b0d7:       jl     0xffffffff89a4b05d
    0.00 :   ffffffff89a4b0d9:       add    $0x202,%rax
    0.00 :   ffffffff89a4b0df:       cmp    $0x2,%rax
    0.00 :   ffffffff89a4b0e3:       ja     0xffffffff89a4b05d
    0.00 :   ffffffff89a4b0e9:       subq   $0x2,0x80(%r12)
    0.00 :   ffffffff89a4b0f2:       mov    %rdx,0x50(%r12)
    0.00 :   ffffffff89a4b0f7:       jmp    0xffffffff89a4b05d
    0.00 :   ffffffff89a4b0fc:       mov    %r12,%rsi
    0.00 :   ffffffff89a4b0ff:       lea    -0x68(%rbp),%rdi
    0.00 :   ffffffff89a4b103:       call   0xffffffff89a4ab50
    0.00 :   ffffffff89a4b108:       jmp    0xffffffff89a4b086
    0.00 :   ffffffff89a4b10d:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89d5aae0 <load0>:
    0.00 :   ffffffff89d5aae0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d5aae5:       push   %rbp
    0.00 :   ffffffff89d5aae6:       mov    %rsp,%rbp
    0.00 :   ffffffff89d5aae9:       push   %r12
    0.00 :   ffffffff89d5aaeb:       push   %rbx
    0.00 :   ffffffff89d5aaec:       mov    %gs:0x31840,%r12
    0.00 :   ffffffff89d5aaf5:       testb  $0x4,0x2c(%r12)
    0.00 :   ffffffff89d5aafb:       jne    0xffffffff89d5ab48
    0.00 :   ffffffff89d5aafd:       mov    %rdi,%rbx
    0.00 :   ffffffff89d5ab00:       mov    %rsi,%rdi
    0.00 :   ffffffff89d5ab03:       test   %rsi,%rsi
    0.00 :   ffffffff89d5ab06:       je     0xffffffff89d5ab11
    0.00 :   ffffffff89d5ab08:       call   0xffffffff89d5a710
    0.00 :   ffffffff89d5ab0d:       test   %eax,%eax
    0.00 :   ffffffff89d5ab0f:       js     0xffffffff89d5ab39
    0.00 :   ffffffff89d5ab11:       mov    %gs:0x762d6d34(%rip),%ecx        # 0x3184c
    0.00 :   ffffffff89d5ab18:       mov    0xf38(%r12),%rdx
    0.00 :   ffffffff89d5ab20:       movabs $0x7ffffffff000,%rax
    0.00 :   ffffffff89d5ab2a:       cmp    $0x1f,%rax
    0.00 :   ffffffff89d5ab2e:       jbe    0xffffffff89d5ab39
    0.00 :   ffffffff89d5ab30:       sub    $0x20,%rax
    0.00 :   ffffffff89d5ab34:       cmp    %rax,%rdx
    0.00 :   ffffffff89d5ab37:       jbe    0xffffffff89d5ab5b
    0.00 :   ffffffff89d5ab39:       xor    %edi,%edi
    0.00 :   ffffffff89d5ab3b:       test   %rbx,%rbx
    0.00 :   ffffffff89d5ab3e:       je     0xffffffff89d5ab43
    0.00 :   ffffffff89d5ab40:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89d5ab43:       call   0xffffffff89b03da0
    0.00 :   ffffffff89d5ab48:       pop    %rbx
    0.00 :   ffffffff89d5ab49:       pop    %r12
    0.00 :   ffffffff89d5ab4b:       pop    %rbp
    0.00 :   ffffffff89d5ab4c:       xor    %eax,%eax
    0.00 :   ffffffff89d5ab4e:       xor    %edx,%edx
    0.00 :   ffffffff89d5ab50:       xor    %ecx,%ecx
    0.00 :   ffffffff89d5ab52:       xor    %esi,%esi
    0.00 :   ffffffff89d5ab54:       xor    %edi,%edi
    0.00 :   ffffffff89d5ab56:       ret
    0.00 :   ffffffff89d5ab57:       int3
    0.00 :   ffffffff89d5ab58:       int3
    0.00 :   ffffffff89d5ab59:       int3
    0.00 :   ffffffff89d5ab5a:       int3
    0.00 :   ffffffff89d5ab5b:       stac
    0.00 :   ffffffff89d5ab5e:       lfence
    0.00 :   ffffffff89d5ab61:       mov    %ecx,(%rdx)
    0.00 :   ffffffff89d5ab63:       mov    %ecx,0x4(%rdx)
    0.00 :   ffffffff89d5ab66:       clac
    0.00 :   ffffffff89d5ab69:       xchg   %ax,%ax
    0.00 :   ffffffff89d5ab6b:       pop    %rbx
  100.00 :   ffffffff89d5ab6c:       pop    %r12
    0.00 :   ffffffff89d5ab6e:       pop    %rbp
    0.00 :   ffffffff89d5ab6f:       xor    %eax,%eax
    0.00 :   ffffffff89d5ab71:       xor    %edx,%edx
    0.00 :   ffffffff89d5ab73:       xor    %ecx,%ecx
    0.00 :   ffffffff89d5ab75:       xor    %esi,%esi
    0.00 :   ffffffff89d5ab77:       xor    %edi,%edi
    0.00 :   ffffffff89d5ab79:       ret
    0.00 :   ffffffff89d5ab7a:       int3
    0.00 :   ffffffff89d5ab7b:       int3
    0.00 :   ffffffff89d5ab7c:       int3
    0.00 :   ffffffff89d5ab7d:       int3
    0.00 :   ffffffff89d5ab7e:       mov    %gs:0x762d6cc7(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89d5ab85:       mov    %eax,%eax
    0.00 :   ffffffff89d5ab87:       bt     %rax,0x22a6611(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89d5ab8f:       jae    0xffffffff89d5ab48
    0.00 :   ffffffff89d5ab91:       incl   %gs:0x762d6cb0(%rip)        # 0x31848
    0.00 :   ffffffff89d5ab98:       mov    0x225e6c1(%rip),%rax        # 0xffffffff8bfb9260
    0.00 :   ffffffff89d5ab9f:       test   %rax,%rax
    0.00 :   ffffffff89d5aba2:       je     0xffffffff89d5abb0
    0.00 :   ffffffff89d5aba4:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89d5aba8:       mov    %r12,%rsi
    0.00 :   ffffffff89d5abab:       call   0xffffffff89d59c30
    0.00 :   ffffffff89d5abb0:       decl   %gs:0x762d6c91(%rip)        # 0x31848
    0.00 :   ffffffff89d5abb7:       jne    0xffffffff89d5ab48
    0.00 :   ffffffff89d5abb9:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d5abbe:       jmp    0xffffffff89d5ab48
    0.00 :   ffffffff89d5abc0:       clac
    0.00 :   ffffffff89d5abc3:       jmp    0xffffffff89d5ab39
    0.00 :   ffffffff89d5abc8:       int3
    0.00 :   ffffffff89d5abc9:       int3
    0.00 :   ffffffff89d5abca:       int3
    0.00 :   ffffffff89d5abcb:       int3
    0.00 :   ffffffff89d5abcc:       int3
    0.00 :   ffffffff89d5abcd:       int3
    0.00 :   ffffffff89d5abce:       int3
    0.00 :   ffffffff89d5abcf:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89bc5810 <load0>:
    0.00 :   ffffffff89bc5810:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89bc5815:       push   %rbp
    0.00 :   ffffffff89bc5816:       mov    %rsp,%rbp
    0.00 :   ffffffff89bc5819:       push   %r13
    0.00 :   ffffffff89bc581b:       push   %r12
    0.00 :   ffffffff89bc581d:       mov    %rsi,%r12
    0.00 :   ffffffff89bc5820:       push   %rbx
    0.00 :   ffffffff89bc5821:       test   $0x2300e,%esi
    0.00 :   ffffffff89bc5827:       je     0xffffffff89bc5906
    0.00 :   ffffffff89bc582d:       mov    %rdi,%r13
    0.00 :   ffffffff89bc5830:       mov    %gs:0x31840,%rbx
    0.00 :   ffffffff89bc5839:       jmp    0xffffffff89bc587b
    0.00 :   ffffffff89bc583b:       test   $0x1000,%r12d
    0.00 :   ffffffff89bc5842:       jne    0xffffffff89bc5895
    0.00 :   ffffffff89bc5844:       test   $0x2000,%r12d
    0.00 :   ffffffff89bc584b:       jne    0xffffffff89bc58a6
    0.00 :   ffffffff89bc584d:       test   $0x20004,%r12d
    0.00 :   ffffffff89bc5854:       jne    0xffffffff89bc58b7
    0.00 :   ffffffff89bc5856:       and    $0x2,%r12d
    0.00 :   ffffffff89bc585a:       jne    0xffffffff89bc58c5
    0.00 :   ffffffff89bc585c:       cli
    0.00 :   ffffffff89bc585d:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89bc5862:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89bc586b:       mov    (%rax),%r12
    0.00 :   ffffffff89bc586e:       test   $0x2300e,%r12d
    0.00 :   ffffffff89bc5875:       je     0xffffffff89bc5906
    0.00 :   ffffffff89bc587b:       sti
    0.00 :   ffffffff89bc587c:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89bc5881:       test   $0x8,%r12b
    0.00 :   ffffffff89bc5885:       je     0xffffffff89bc583b
    0.00 :   ffffffff89bc5887:       call   0xffffffff8aaa5b00
    0.00 :   ffffffff89bc588c:       test   $0x1000,%r12d
    0.00 :   ffffffff89bc5893:       je     0xffffffff89bc5844
    0.00 :   ffffffff89bc5895:       mov    %r13,%rdi
    0.00 :   ffffffff89bc5898:       call   0xffffffff89d56730
    0.00 :   ffffffff89bc589d:       test   $0x2000,%r12d
    0.00 :   ffffffff89bc58a4:       je     0xffffffff89bc584d
    0.00 :   ffffffff89bc58a6:       mov    %rbx,%rdi
    0.00 :   ffffffff89bc58a9:       call   0xffffffff89bbe510
    0.00 :   ffffffff89bc58ae:       test   $0x20004,%r12d
    0.00 :   ffffffff89bc58b5:       je     0xffffffff89bc5856
    0.00 :   ffffffff89bc58b7:       mov    %r13,%rdi
    0.00 :   ffffffff89bc58ba:       call   0xffffffff89a4b000
    0.00 :   ffffffff89bc58bf:       and    $0x2,%r12d
    0.00 :   ffffffff89bc58c3:       je     0xffffffff89bc585c
    0.00 :   ffffffff89bc58c5:       lock andb $0xfd,(%rbx)
    0.00 :   ffffffff89bc58c9:       mov    0xc48(%rbx),%rax
    0.00 :   ffffffff89bc58d0:       test   %rax,%rax
    0.00 :   ffffffff89bc58d3:       jne    0xffffffff89bc591c
    0.00 :   ffffffff89bc58d5:       cmpq   $0x0,0xb88(%rbx)
    0.00 :   ffffffff89bc58dd:       jne    0xffffffff89bc592b
    0.00 :   ffffffff89bc58df:       call   0xffffffff89e5b230
    0.00 :   ffffffff89bc58e4:       call   0xffffffff8a160550
  100.00 :   ffffffff89bc58e9:       cmpq   $0x0,0xf38(%rbx)
    0.00 :   ffffffff89bc58f1:       je     0xffffffff89bc585c
    0.00 :   ffffffff89bc58f7:       mov    %r13,%rsi
    0.00 :   ffffffff89bc58fa:       xor    %edi,%edi
    0.00 :   ffffffff89bc58fc:       call   0xffffffff89d5aae0
    0.00 :   ffffffff89bc5901:       jmp    0xffffffff89bc585c
    0.00 :   ffffffff89bc5906:       pop    %rbx
    0.00 :   ffffffff89bc5907:       mov    %r12,%rax
    0.00 :   ffffffff89bc590a:       pop    %r12
    0.00 :   ffffffff89bc590c:       pop    %r13
    0.00 :   ffffffff89bc590e:       pop    %rbp
    0.00 :   ffffffff89bc590f:       xor    %edx,%edx
    0.00 :   ffffffff89bc5911:       xor    %ecx,%ecx
    0.00 :   ffffffff89bc5913:       xor    %esi,%esi
    0.00 :   ffffffff89bc5915:       xor    %edi,%edi
    0.00 :   ffffffff89bc5917:       ret
    0.00 :   ffffffff89bc5918:       int3
    0.00 :   ffffffff89bc5919:       int3
    0.00 :   ffffffff89bc591a:       int3
    0.00 :   ffffffff89bc591b:       int3
    0.00 :   ffffffff89bc591c:       call   0xffffffff89b18f60
    0.00 :   ffffffff89bc5921:       cmpq   $0x0,0xb88(%rbx)
    0.00 :   ffffffff89bc5929:       je     0xffffffff89bc58df
    0.00 :   ffffffff89bc592b:       mov    0xb88(%rbx),%rdi
    0.00 :   ffffffff89bc5932:       call   0xffffffff8a04dda0
    0.00 :   ffffffff89bc5937:       movq   $0x0,0xb88(%rbx)
    0.00 :   ffffffff89bc5942:       jmp    0xffffffff89bc58df
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b544e0 <load0>:
    0.00 :   ffffffff89b544e0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b544e5:       push   %rbp
    0.00 :   ffffffff89b544e6:       mov    %rsp,%rbp
    0.00 :   ffffffff89b544e9:       push   %r15
    0.00 :   ffffffff89b544eb:       push   %r14
    0.00 :   ffffffff89b544ed:       push   %r13
    0.00 :   ffffffff89b544ef:       push   %r12
    0.00 :   ffffffff89b544f1:       mov    %rdi,%r12
    0.00 :   ffffffff89b544f4:       push   %rbx
    0.00 :   ffffffff89b544f5:       sub    $0x40,%rsp
    0.00 :   ffffffff89b544f9:       mov    %esi,-0x4c(%rbp)
    0.00 :   ffffffff89b544fc:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89b54505:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff89b54509:       xor    %eax,%eax
    0.00 :   ffffffff89b5450b:       mov    0xaf8(%rdi),%eax
    0.00 :   ffffffff89b54511:       movl   $0x1,-0x34(%rbp)
    0.00 :   ffffffff89b54518:       mov    %eax,-0x40(%rbp)
    0.00 :   ffffffff89b5451b:       test   %esi,%esi
    0.00 :   ffffffff89b5451d:       jne    0xffffffff89b546ec
    0.00 :   ffffffff89b54523:       movl   $0x0,-0x44(%rbp)
    0.00 :   ffffffff89b5452a:       movslq -0x40(%rbp),%r13
    0.00 :   ffffffff89b5452e:       mov    $0x32000,%r15
    0.00 :   ffffffff89b54535:       mov    0x20b3484(%rip),%rbx        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b5453c:       mov    %r15,%r14
    0.00 :   ffffffff89b5453f:       call   0xffffffff89baecb0
    0.00 :   ffffffff89b54544:       add    $0x3a98,%rbx
    0.00 :   ffffffff89b5454b:       cmp    $0x1fff,%r13
    0.00 :   ffffffff89b54552:       ja     0xffffffff89b54887
    0.00 :   ffffffff89b54558:       add    -0x74b9e540(,%r13,8),%r14
    0.00 :   ffffffff89b54560:       mov    0xa88(%r14),%rdx
    0.00 :   ffffffff89b54567:       test   %rdx,%rdx
    0.00 :   ffffffff89b5456a:       je     0xffffffff89b5481c
    0.00 :   ffffffff89b54570:       movl   $0x0,-0x3c(%rbp)
    0.00 :   ffffffff89b54577:       mov    $0x1,%edi
    0.00 :   ffffffff89b5457c:       xor    %r14d,%r14d
    0.00 :   ffffffff89b5457f:       mov    %r15,-0x58(%rbp)
    0.00 :   ffffffff89b54583:       mov    %r13,%r15
    0.00 :   ffffffff89b54586:       mov    %rbx,%r13
    0.00 :   ffffffff89b54589:       mov    %rdx,%rbx
    0.00 :   ffffffff89b5458c:       mov    0x20b342d(%rip),%rsi        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b54593:       mov    $0xfa,%eax
    0.00 :   ffffffff89b54598:       mov    0x58(%rbx),%rcx
    0.00 :   ffffffff89b5459c:       sub    %rsi,%rax
    0.00 :   ffffffff89b5459f:       add    0x60(%rbx),%rax
    0.00 :   ffffffff89b545a3:       js     0xffffffff89b545fa
    0.00 :   ffffffff89b545a5:       test   %edi,%edi
    0.00 :   ffffffff89b545a7:       jne    0xffffffff89b5463d
    0.00 :   ffffffff89b545ad:       mov    %r13,%rbx
    0.00 :   ffffffff89b545b0:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89b545b5:       mov    -0x3c(%rbp),%eax
    0.00 :   ffffffff89b545b8:       test   %eax,%eax
    0.00 :   ffffffff89b545ba:       je     0xffffffff89b545c4
    0.00 :   ffffffff89b545bc:       mov    %rbx,0x9f8(%r12)
    0.00 :   ffffffff89b545c4:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89b545c8:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89b545d1:       jne    0xffffffff89b54882
    0.00 :   ffffffff89b545d7:       add    $0x40,%rsp
    0.00 :   ffffffff89b545db:       pop    %rbx
    0.00 :   ffffffff89b545dc:       pop    %r12
    0.00 :   ffffffff89b545de:       pop    %r13
    0.00 :   ffffffff89b545e0:       pop    %r14
    0.00 :   ffffffff89b545e2:       pop    %r15
    0.00 :   ffffffff89b545e4:       pop    %rbp
    0.00 :   ffffffff89b545e5:       xor    %eax,%eax
    0.00 :   ffffffff89b545e7:       xor    %edx,%edx
    0.00 :   ffffffff89b545e9:       xor    %ecx,%ecx
    0.00 :   ffffffff89b545eb:       xor    %esi,%esi
    0.00 :   ffffffff89b545ed:       xor    %edi,%edi
    0.00 :   ffffffff89b545ef:       xor    %r8d,%r8d
    0.00 :   ffffffff89b545f2:       xor    %r9d,%r9d
    0.00 :   ffffffff89b545f5:       ret
    0.00 :   ffffffff89b545f6:       int3
    0.00 :   ffffffff89b545f7:       int3
    0.00 :   ffffffff89b545f8:       int3
    0.00 :   ffffffff89b545f9:       int3
    0.00 :   ffffffff89b545fa:       mov    %rcx,%rax
    0.00 :   ffffffff89b545fd:       movl   $0x1,-0x48(%rbp)
    0.00 :   ffffffff89b54604:       shl    $0x6,%rax
    0.00 :   ffffffff89b54608:       sub    %rcx,%rax
    0.00 :   ffffffff89b5460b:       lea    (%rcx,%rax,4),%rax
    0.00 :   ffffffff89b5460f:       mov    0x20b33aa(%rip),%rcx        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b54616:       shr    $0x8,%rax
    0.00 :   ffffffff89b5461a:       mov    %rax,0x58(%rbx)
    0.00 :   ffffffff89b5461e:       add    %rax,%r14
    0.00 :   ffffffff89b54621:       mov    %rcx,0x60(%rbx)
    0.00 :   ffffffff89b54625:       test   %edi,%edi
    0.00 :   ffffffff89b54627:       jne    0xffffffff89b54647
    0.00 :   ffffffff89b54629:       mov    (%rbx),%rbx
    0.00 :   ffffffff89b5462c:       test   %rbx,%rbx
    0.00 :   ffffffff89b5462f:       je     0xffffffff89b546c4
    0.00 :   ffffffff89b54635:       mov    -0x34(%rbp),%edi
    0.00 :   ffffffff89b54638:       jmp    0xffffffff89b5458c
    0.00 :   ffffffff89b5463d:       movl   $0x0,-0x48(%rbp)
    0.00 :   ffffffff89b54644:       add    %rcx,%r14
    0.00 :   ffffffff89b54647:       mov    -0x44(%rbp),%r9d
    0.00 :   ffffffff89b5464b:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89b5464e:       test   %r9d,%r9d
    0.00 :   ffffffff89b54651:       jne    0xffffffff89b546b5
    0.00 :   ffffffff89b54653:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b54658:       mov    0x24ad3a1(%rip),%rcx        # 0xffffffff8c001a00
    0.00 :   ffffffff89b5465f:       test   %rax,%rax
    0.00 :   ffffffff89b54662:       mov    $0x1,%esi
    0.00 :   ffffffff89b54667:       cmovne %rax,%rsi
    0.00 :   ffffffff89b5466b:       cmp    %rax,%rcx
    0.00 :   ffffffff89b5466e:       mov    0x3c(%rbx),%eax
    0.00 :   ffffffff89b54671:       cmova  %rsi,%rcx
    0.00 :   ffffffff89b54675:       and    $0x200,%eax
    0.00 :   ffffffff89b5467a:       mov    %eax,-0x60(%rbp)
    0.00 :   ffffffff89b5467d:       jne    0xffffffff89b5472f
    0.00 :   ffffffff89b54683:       mov    0x20b3336(%rip),%rsi        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b5468a:       mov    0x48(%rbx),%rax
    0.00 :   ffffffff89b5468e:       sub    %rax,%rsi
    0.00 :   ffffffff89b54691:       cmp    %rcx,%rsi
    0.00 :   ffffffff89b54694:       jns    0xffffffff89b5475b
    0.00 :   ffffffff89b5469a:       add    %rcx,%rax
    0.00 :   ffffffff89b5469d:       cmp    %r13,%rax
    0.00 :   ffffffff89b546a0:       cmovs  %rax,%r13
    0.00 :   ffffffff89b546a4:       mov    $0x1,%eax
    0.00 :   ffffffff89b546a9:       cmovns -0x3c(%rbp),%eax
    0.00 :   ffffffff89b546ad:       mov    %eax,-0x3c(%rbp)
    0.00 :   ffffffff89b546b0:       jmp    0xffffffff89b54629
    0.00 :   ffffffff89b546b5:       imul   0x28(%rbx),%edi
    0.00 :   ffffffff89b546b9:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b546be:       sub    $0x1,%rax
    0.00 :   ffffffff89b546c2:       jmp    0xffffffff89b54658
    0.00 :   ffffffff89b546c4:       mov    -0x48(%rbp),%edx
    0.00 :   ffffffff89b546c7:       mov    %r13,%rbx
    0.00 :   ffffffff89b546ca:       test   %edx,%edx
    0.00 :   ffffffff89b546cc:       je     0xffffffff89b545b0
    0.00 :   ffffffff89b546d2:       mov    0x24ad334(%rip),%eax        # 0xffffffff8c001a0c
    0.00 :   ffffffff89b546d8:       cmp    %r14,%rax
    0.00 :   ffffffff89b546db:       cmovb  %r14,%rax
    0.00 :   ffffffff89b546df:       mov    %rax,0xbe0(%r12)
    0.00 :   ffffffff89b546e7:       jmp    0xffffffff89b545b0
    0.00 :   ffffffff89b546ec:       mov    $0x32000,%r15
    0.00 :   ffffffff89b546f3:       movslq %eax,%r13
    0.00 :   ffffffff89b546f6:       mov    %r15,%rbx
    0.00 :   ffffffff89b546f9:       cmp    $0x1fff,%r13
    0.00 :   ffffffff89b54700:       ja     0xffffffff89b5489b
    0.00 :   ffffffff89b54706:       add    -0x74b9e540(,%r13,8),%rbx
    0.00 :   ffffffff89b5470e:       mov    0x4(%rbx),%edx
    0.00 :   ffffffff89b54711:       cmp    %edx,0x11c(%rbx)
    0.00 :   ffffffff89b54717:       sete   %al
    0.00 :   ffffffff89b5471a:       test   %edx,%edx
  100.00 :   ffffffff89b5471c:       setne  %dl
    0.00 :   ffffffff89b5471f:       and    %edx,%eax
    0.00 :   ffffffff89b54721:       xor    $0x1,%eax
    0.00 :   ffffffff89b54724:       movzbl %al,%eax
    0.00 :   ffffffff89b54727:       mov    %eax,-0x44(%rbp)
    0.00 :   ffffffff89b5472a:       jmp    0xffffffff89b54535
    0.00 :   ffffffff89b5472f:       mov    $0xffffffff8d158614,%rdi
    0.00 :   ffffffff89b54736:       mov    %rcx,-0x68(%rbp)
    0.00 :   ffffffff89b5473a:       call   0xffffffff8aaadbe0
    0.00 :   ffffffff89b5473f:       mov    -0x68(%rbp),%rcx
    0.00 :   ffffffff89b54743:       test   %eax,%eax
    0.00 :   ffffffff89b54745:       je     0xffffffff89b547e1
    0.00 :   ffffffff89b5474b:       mov    0x20b326e(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b54752:       sub    0x48(%rbx),%rax
    0.00 :   ffffffff89b54756:       cmp    %rcx,%rax
    0.00 :   ffffffff89b54759:       js     0xffffffff89b547c4
    0.00 :   ffffffff89b5475b:       mov    -0x4c(%rbp),%ecx
    0.00 :   ffffffff89b5475e:       mov    -0x40(%rbp),%edi
    0.00 :   ffffffff89b54761:       lea    -0x34(%rbp),%r8
    0.00 :   ffffffff89b54765:       mov    %rbx,%rdx
    0.00 :   ffffffff89b54768:       mov    %r12,%rsi
    0.00 :   ffffffff89b5476b:       call   0xffffffff89b530e0
    0.00 :   ffffffff89b54770:       test   %eax,%eax
    0.00 :   ffffffff89b54772:       jne    0xffffffff89b547ea
    0.00 :   ffffffff89b54774:       mov    0x20b3245(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b5477b:       mov    -0x44(%rbp),%r8d
    0.00 :   ffffffff89b5477f:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89b54782:       mov    %rax,0x48(%rbx)
    0.00 :   ffffffff89b54786:       test   %r8d,%r8d
    0.00 :   ffffffff89b54789:       je     0xffffffff89b54826
    0.00 :   ffffffff89b5478f:       imul   0x28(%rbx),%edi
    0.00 :   ffffffff89b54793:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b54798:       movl   $0x1,-0x44(%rbp)
    0.00 :   ffffffff89b5479f:       sub    $0x1,%rax
    0.00 :   ffffffff89b547a3:       mov    0x24ad256(%rip),%rcx        # 0xffffffff8c001a00
    0.00 :   ffffffff89b547aa:       test   %rax,%rax
    0.00 :   ffffffff89b547ad:       mov    $0x1,%esi
    0.00 :   ffffffff89b547b2:       cmovne %rax,%rsi
    0.00 :   ffffffff89b547b6:       cmp    %rax,%rcx
    0.00 :   ffffffff89b547b9:       cmova  %rsi,%rcx
    0.00 :   ffffffff89b547bd:       mov    -0x60(%rbp),%esi
    0.00 :   ffffffff89b547c0:       test   %esi,%esi
    0.00 :   ffffffff89b547c2:       je     0xffffffff89b547e1
    0.00 :   ffffffff89b547c4:       mov    $0xffffffff8d158614,%rdi
    0.00 :   ffffffff89b547cb:       mov    %rcx,-0x60(%rbp)
    0.00 :   ffffffff89b547cf:       call   0xffffffff8aaae520
    0.00 :   ffffffff89b547d4:       mov    0x48(%rbx),%rax
    0.00 :   ffffffff89b547d8:       mov    -0x60(%rbp),%rcx
    0.00 :   ffffffff89b547dc:       jmp    0xffffffff89b5469a
    0.00 :   ffffffff89b547e1:       mov    0x48(%rbx),%rax
    0.00 :   ffffffff89b547e5:       jmp    0xffffffff89b5469a
    0.00 :   ffffffff89b547ea:       mov    -0x40(%rbp),%edi
    0.00 :   ffffffff89b547ed:       call   0xffffffff89b3e4c0
    0.00 :   ffffffff89b547f2:       mov    %eax,-0x44(%rbp)
    0.00 :   ffffffff89b547f5:       test   %eax,%eax
    0.00 :   ffffffff89b547f7:       je     0xffffffff89b54830
    0.00 :   ffffffff89b547f9:       mov    0x20b31c0(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b54800:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89b54803:       mov    %rax,0x48(%rbx)
    0.00 :   ffffffff89b54807:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b5480c:       movl   $0x0,-0x44(%rbp)
    0.00 :   ffffffff89b54813:       movl   $0x0,-0x4c(%rbp)
    0.00 :   ffffffff89b5481a:       jmp    0xffffffff89b547a3
    0.00 :   ffffffff89b5481c:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89b54821:       jmp    0xffffffff89b545c4
    0.00 :   ffffffff89b54826:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b5482b:       jmp    0xffffffff89b547a3
    0.00 :   ffffffff89b54830:       cmp    $0x1fff,%r15
    0.00 :   ffffffff89b54837:       ja     0xffffffff89b548af
    0.00 :   ffffffff89b54839:       mov    -0x58(%rbp),%rax
    0.00 :   ffffffff89b5483d:       add    -0x74b9e540(,%r15,8),%rax
    0.00 :   ffffffff89b54845:       mov    0x4(%rax),%ecx
    0.00 :   ffffffff89b54848:       cmp    %ecx,0x11c(%rax)
    0.00 :   ffffffff89b5484e:       mov    0x20b316b(%rip),%rax        # 0xffffffff8bc079c0
    0.00 :   ffffffff89b54855:       mov    %rax,0x48(%rbx)
    0.00 :   ffffffff89b54859:       jne    0xffffffff89b5485f
    0.00 :   ffffffff89b5485b:       test   %ecx,%ecx
    0.00 :   ffffffff89b5485d:       jne    0xffffffff89b5486e
    0.00 :   ffffffff89b5485f:       movl   $0x1,-0x4c(%rbp)
    0.00 :   ffffffff89b54866:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89b54869:       jmp    0xffffffff89b5478f
    0.00 :   ffffffff89b5486e:       mov    0x50(%rbx),%edi
    0.00 :   ffffffff89b54871:       call   0xffffffff89bd1ae0
    0.00 :   ffffffff89b54876:       movl   $0x1,-0x4c(%rbp)
    0.00 :   ffffffff89b5487d:       jmp    0xffffffff89b547a3
    0.00 :   ffffffff89b54882:       call   0xffffffff8aa98a20
    0.00 :   ffffffff89b54887:       mov    %r13,%rsi
    0.00 :   ffffffff89b5488a:       mov    $0xffffffff8bc92b00,%rdi
    0.00 :   ffffffff89b54891:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b54896:       jmp    0xffffffff89b54558
    0.00 :   ffffffff89b5489b:       mov    %r13,%rsi
    0.00 :   ffffffff89b5489e:       mov    $0xffffffff8bc92b20,%rdi
    0.00 :   ffffffff89b548a5:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b548aa:       jmp    0xffffffff89b54706
    0.00 :   ffffffff89b548af:       mov    %r15,%rsi
    0.00 :   ffffffff89b548b2:       mov    $0xffffffff8bc92ae0,%rdi
    0.00 :   ffffffff89b548b9:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b548be:       jmp    0xffffffff89b54839
    0.00 :   ffffffff89b548c3:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff89b548ce:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aa1bb90 <load0>:
    0.00 :   ffffffff8aa1bb90:       push   %rbp
    0.00 :   ffffffff8aa1bb91:       mov    %rsp,%rbp
    0.00 :   ffffffff8aa1bb94:       push   %r13
    0.00 :   ffffffff8aa1bb96:       push   %r12
    0.00 :   ffffffff8aa1bb98:       mov    %rsi,%r12
    0.00 :   ffffffff8aa1bb9b:       cmp    (%rsi),%rsi
    0.00 :   ffffffff8aa1bb9e:       jne    0xffffffff8aa1bc5b
    0.00 :   ffffffff8aa1bba4:       mov    (%rdi),%rax
    0.00 :   ffffffff8aa1bba7:       test   %rax,%rax
    0.00 :   ffffffff8aa1bbaa:       je     0xffffffff8aa1bc13
    0.00 :   ffffffff8aa1bbac:       mov    0x18(%r12),%rsi
    0.00 :   ffffffff8aa1bbb1:       mov    $0x1,%r13d
    0.00 :   ffffffff8aa1bbb7:       jmp    0xffffffff8aa1bbbc
    0.00 :   ffffffff8aa1bbb9:       mov    %rdx,%rax
    0.00 :   ffffffff8aa1bbbc:       lea    0x10(%rax),%rcx
  100.00 :   ffffffff8aa1bbc0:       cmp    0x18(%rax),%rsi
    0.00 :   ffffffff8aa1bbc4:       jl     0xffffffff8aa1bbcd
    0.00 :   ffffffff8aa1bbc6:       lea    0x8(%rax),%rcx
    0.00 :   ffffffff8aa1bbca:       xor    %r13d,%r13d
    0.00 :   ffffffff8aa1bbcd:       mov    (%rcx),%rdx
    0.00 :   ffffffff8aa1bbd0:       test   %rdx,%rdx
    0.00 :   ffffffff8aa1bbd3:       jne    0xffffffff8aa1bbb9
    0.00 :   ffffffff8aa1bbd5:       mov    %rax,(%r12)
    0.00 :   ffffffff8aa1bbd9:       movq   $0x0,0x8(%r12)
    0.00 :   ffffffff8aa1bbe2:       movq   $0x0,0x10(%r12)
    0.00 :   ffffffff8aa1bbeb:       mov    %r12,(%rcx)
    0.00 :   ffffffff8aa1bbee:       test   %r13b,%r13b
    0.00 :   ffffffff8aa1bbf1:       jne    0xffffffff8aa1bc30
    0.00 :   ffffffff8aa1bbf3:       mov    %rdi,%rsi
    0.00 :   ffffffff8aa1bbf6:       mov    %r12,%rdi
    0.00 :   ffffffff8aa1bbf9:       call   0xffffffff8aa184f0
    0.00 :   ffffffff8aa1bbfe:       mov    %r13d,%eax
    0.00 :   ffffffff8aa1bc01:       pop    %r12
    0.00 :   ffffffff8aa1bc03:       pop    %r13
    0.00 :   ffffffff8aa1bc05:       pop    %rbp
    0.00 :   ffffffff8aa1bc06:       xor    %edx,%edx
    0.00 :   ffffffff8aa1bc08:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa1bc0a:       xor    %esi,%esi
    0.00 :   ffffffff8aa1bc0c:       xor    %edi,%edi
    0.00 :   ffffffff8aa1bc0e:       ret
    0.00 :   ffffffff8aa1bc0f:       int3
    0.00 :   ffffffff8aa1bc10:       int3
    0.00 :   ffffffff8aa1bc11:       int3
    0.00 :   ffffffff8aa1bc12:       int3
    0.00 :   ffffffff8aa1bc13:       movq   $0x0,(%r12)
    0.00 :   ffffffff8aa1bc1b:       movq   $0x0,0x8(%r12)
    0.00 :   ffffffff8aa1bc24:       movq   $0x0,0x10(%r12)
    0.00 :   ffffffff8aa1bc2d:       mov    %r12,(%rdi)
    0.00 :   ffffffff8aa1bc30:       mov    %r12,0x8(%rdi)
    0.00 :   ffffffff8aa1bc34:       mov    %rdi,%rsi
    0.00 :   ffffffff8aa1bc37:       mov    %r12,%rdi
    0.00 :   ffffffff8aa1bc3a:       call   0xffffffff8aa184f0
    0.00 :   ffffffff8aa1bc3f:       test   %r12,%r12
    0.00 :   ffffffff8aa1bc42:       pop    %r12
    0.00 :   ffffffff8aa1bc44:       setne  %r13b
    0.00 :   ffffffff8aa1bc48:       mov    %r13d,%eax
    0.00 :   ffffffff8aa1bc4b:       pop    %r13
    0.00 :   ffffffff8aa1bc4d:       pop    %rbp
    0.00 :   ffffffff8aa1bc4e:       xor    %edx,%edx
    0.00 :   ffffffff8aa1bc50:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa1bc52:       xor    %esi,%esi
    0.00 :   ffffffff8aa1bc54:       xor    %edi,%edi
    0.00 :   ffffffff8aa1bc56:       ret
    0.00 :   ffffffff8aa1bc57:       int3
    0.00 :   ffffffff8aa1bc58:       int3
    0.00 :   ffffffff8aa1bc59:       int3
    0.00 :   ffffffff8aa1bc5a:       int3
    0.00 :   ffffffff8aa1bc5b:       ud2
    0.00 :   ffffffff8aa1bc5d:       jmp    0xffffffff8aa1bba4
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89affdd0 <load0>:
    0.00 :   ffffffff89affdd0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89affdd5:       push   %rbp
    0.00 :   ffffffff89affdd6:       mov    %rsp,%rbp
    0.00 :   ffffffff89affdd9:       push   %r15
    0.00 :   ffffffff89affddb:       mov    %rcx,%r15
    0.00 :   ffffffff89affdde:       push   %r14
    0.00 :   ffffffff89affde0:       mov    %rdx,%r14
    0.00 :   ffffffff89affde3:       push   %r13
    0.00 :   ffffffff89affde5:       mov    %edi,%r13d
    0.00 :   ffffffff89affde8:       push   %r12
    0.00 :   ffffffff89affdea:       push   %rbx
    0.00 :   ffffffff89affdeb:       mov    %rsi,%rbx
    0.00 :   ffffffff89affdee:       sub    $0x8,%rsp
    0.00 :   ffffffff89affdf2:       mov    (%rsi),%rax
    0.00 :   ffffffff89affdf5:       cmp    %rax,%rsi
    0.00 :   ffffffff89affdf8:       je     0xffffffff89affee5
    0.00 :   ffffffff89affdfe:       xor    %r12d,%r12d
    0.00 :   ffffffff89affe01:       jmp    0xffffffff89affe0b
    0.00 :   ffffffff89affe03:       mov    (%rax),%rax
    0.00 :   ffffffff89affe06:       cmp    %rax,%rbx
    0.00 :   ffffffff89affe09:       je     0xffffffff89affe21
  100.00 :   ffffffff89affe0b:       cmp    %r13d,0x18(%rax)
    0.00 :   ffffffff89affe0f:       jne    0xffffffff89affe03
    0.00 :   ffffffff89affe11:       test   %r12,%r12
    0.00 :   ffffffff89affe14:       jne    0xffffffff89affe4c
    0.00 :   ffffffff89affe16:       mov    %rax,%r12
    0.00 :   ffffffff89affe19:       mov    (%rax),%rax
    0.00 :   ffffffff89affe1c:       cmp    %rax,%rbx
    0.00 :   ffffffff89affe1f:       jne    0xffffffff89affe0b
    0.00 :   ffffffff89affe21:       lea    -0x1(%r13),%r8d
    0.00 :   ffffffff89affe25:       movslq %r8d,%r8
    0.00 :   ffffffff89affe28:       cmp    $0x3f,%r8
    0.00 :   ffffffff89affe2c:       ja     0xffffffff89afff4f
    0.00 :   ffffffff89affe32:       mov    $0xfffffffffffffffe,%rax
    0.00 :   ffffffff89affe39:       mov    %r8d,%ecx
    0.00 :   ffffffff89affe3c:       rol    %cl,%rax
    0.00 :   ffffffff89affe3f:       and    %rax,0x10(%rbx)
    0.00 :   ffffffff89affe43:       test   %r12,%r12
    0.00 :   ffffffff89affe46:       je     0xffffffff89affeff
    0.00 :   ffffffff89affe4c:       mov    0x8(%r12),%rax
    0.00 :   ffffffff89affe51:       mov    (%r12),%rdx
    0.00 :   ffffffff89affe55:       lea    0x18(%r12),%rsi
    0.00 :   ffffffff89affe5a:       mov    %r14,%rdi
    0.00 :   ffffffff89affe5d:       mov    %rax,0x8(%rdx)
    0.00 :   ffffffff89affe61:       mov    %rdx,(%rax)
    0.00 :   ffffffff89affe64:       mov    %r12,(%r12)
    0.00 :   ffffffff89affe68:       mov    %r12,0x8(%r12)
    0.00 :   ffffffff89affe6d:       call   0xffffffff89afda80
    0.00 :   ffffffff89affe72:       xor    %eax,%eax
    0.00 :   ffffffff89affe74:       testb  $0x1,0x10(%r12)
    0.00 :   ffffffff89affe7a:       jne    0xffffffff89affed3
    0.00 :   ffffffff89affe7c:       mov    %al,(%r15)
    0.00 :   ffffffff89affe7f:       testb  $0x1,0x10(%r12)
    0.00 :   ffffffff89affe85:       jne    0xffffffff89affeb3
    0.00 :   ffffffff89affe87:       mov    0x48(%r12),%rdi
    0.00 :   ffffffff89affe8c:       test   %rdi,%rdi
    0.00 :   ffffffff89affe8f:       je     0xffffffff89affea4
    0.00 :   ffffffff89affe91:       mov    $0x2,%esi
    0.00 :   ffffffff89affe96:       call   0xffffffff89b29a80
    0.00 :   ffffffff89affe9b:       movq   $0x0,0x48(%r12)
    0.00 :   ffffffff89affea4:       mov    0x36557c5(%rip),%rdi        # 0xffffffff8d155670
    0.00 :   ffffffff89affeab:       mov    %r12,%rsi
    0.00 :   ffffffff89affeae:       call   0xffffffff89e2ff50
    0.00 :   ffffffff89affeb3:       add    $0x8,%rsp
    0.00 :   ffffffff89affeb7:       pop    %rbx
    0.00 :   ffffffff89affeb8:       pop    %r12
    0.00 :   ffffffff89affeba:       pop    %r13
    0.00 :   ffffffff89affebc:       pop    %r14
    0.00 :   ffffffff89affebe:       pop    %r15
    0.00 :   ffffffff89affec0:       pop    %rbp
    0.00 :   ffffffff89affec1:       xor    %eax,%eax
    0.00 :   ffffffff89affec3:       xor    %edx,%edx
    0.00 :   ffffffff89affec5:       xor    %ecx,%ecx
    0.00 :   ffffffff89affec7:       xor    %esi,%esi
    0.00 :   ffffffff89affec9:       xor    %edi,%edi
    0.00 :   ffffffff89affecb:       xor    %r8d,%r8d
    0.00 :   ffffffff89affece:       ret
    0.00 :   ffffffff89affecf:       int3
    0.00 :   ffffffff89affed0:       int3
    0.00 :   ffffffff89affed1:       int3
    0.00 :   ffffffff89affed2:       int3
    0.00 :   ffffffff89affed3:       cmpl   $0xfffffffe,0x8(%r14)
    0.00 :   ffffffff89affed8:       jne    0xffffffff89affe7c
    0.00 :   ffffffff89affeda:       mov    0x20(%r14),%eax
    0.00 :   ffffffff89affede:       test   %eax,%eax
    0.00 :   ffffffff89affee0:       setne  %al
    0.00 :   ffffffff89affee3:       jmp    0xffffffff89affe7c
    0.00 :   ffffffff89affee5:       lea    -0x1(%rdi),%ecx
    0.00 :   ffffffff89affee8:       mov    $0xfffffffffffffffe,%rax
    0.00 :   ffffffff89affeef:       movslq %ecx,%r8
    0.00 :   ffffffff89affef2:       rol    %cl,%rax
    0.00 :   ffffffff89affef5:       cmp    $0x3f,%r8
    0.00 :   ffffffff89affef9:       ja     0xffffffff89afff4a
    0.00 :   ffffffff89affefb:       and    %rax,0x10(%rbx)
    0.00 :   ffffffff89affeff:       lea    0x8(%r14),%rdi
    0.00 :   ffffffff89afff03:       mov    %r14,%rcx
    0.00 :   ffffffff89afff06:       xor    %eax,%eax
    0.00 :   ffffffff89afff08:       movq   $0x0,(%r14)
    0.00 :   ffffffff89afff0f:       and    $0xfffffffffffffff8,%rdi
    0.00 :   ffffffff89afff13:       movq   $0x0,0x28(%r14)
    0.00 :   ffffffff89afff1b:       sub    %rdi,%rcx
    0.00 :   ffffffff89afff1e:       add    $0x30,%ecx
    0.00 :   ffffffff89afff21:       shr    $0x3,%ecx
    0.00 :   ffffffff89afff24:       rep stos %rax,%es:(%rdi)
    0.00 :   ffffffff89afff27:       mov    %r13d,(%r14)
    0.00 :   ffffffff89afff2a:       add    $0x8,%rsp
    0.00 :   ffffffff89afff2e:       pop    %rbx
    0.00 :   ffffffff89afff2f:       pop    %r12
    0.00 :   ffffffff89afff31:       pop    %r13
    0.00 :   ffffffff89afff33:       pop    %r14
    0.00 :   ffffffff89afff35:       pop    %r15
    0.00 :   ffffffff89afff37:       pop    %rbp
    0.00 :   ffffffff89afff38:       xor    %eax,%eax
    0.00 :   ffffffff89afff3a:       xor    %edx,%edx
    0.00 :   ffffffff89afff3c:       xor    %ecx,%ecx
    0.00 :   ffffffff89afff3e:       xor    %esi,%esi
    0.00 :   ffffffff89afff40:       xor    %edi,%edi
    0.00 :   ffffffff89afff42:       xor    %r8d,%r8d
    0.00 :   ffffffff89afff45:       ret
    0.00 :   ffffffff89afff46:       int3
    0.00 :   ffffffff89afff47:       int3
    0.00 :   ffffffff89afff48:       int3
    0.00 :   ffffffff89afff49:       int3
    0.00 :   ffffffff89afff4a:       jmp    0xffffffff8aa32672
    0.00 :   ffffffff89afff4f:       jmp    0xffffffff8aa32675
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aa184f0 <load0>:
  100.00 :   ffffffff8aa184f0:       mov    (%rdi),%rax
    0.00 :   ffffffff8aa184f3:       test   %rax,%rax
    0.00 :   ffffffff8aa184f6:       je     0xffffffff8aa185d5
    0.00 :   ffffffff8aa184fc:       mov    (%rax),%rdx
    0.00 :   ffffffff8aa184ff:       test   $0x1,%dl
    0.00 :   ffffffff8aa18502:       jne    0xffffffff8aa18574
    0.00 :   ffffffff8aa18504:       mov    0x8(%rdx),%rcx
    0.00 :   ffffffff8aa18508:       cmp    %rax,%rcx
    0.00 :   ffffffff8aa1850b:       je     0xffffffff8aa18586
    0.00 :   ffffffff8aa1850d:       test   %rcx,%rcx
    0.00 :   ffffffff8aa18510:       je     0xffffffff8aa1851b
    0.00 :   ffffffff8aa18512:       testb  $0x1,(%rcx)
    0.00 :   ffffffff8aa18515:       je     0xffffffff8aa185af
    0.00 :   ffffffff8aa1851b:       mov    0x8(%rax),%rcx
    0.00 :   ffffffff8aa1851f:       cmp    %rdi,%rcx
    0.00 :   ffffffff8aa18522:       je     0xffffffff8aa185ee
    0.00 :   ffffffff8aa18528:       mov    %rax,%rdi
    0.00 :   ffffffff8aa1852b:       mov    %rcx,0x10(%rdx)
    0.00 :   ffffffff8aa1852f:       mov    %rdx,0x8(%rax)
    0.00 :   ffffffff8aa18533:       test   %rcx,%rcx
    0.00 :   ffffffff8aa18536:       je     0xffffffff8aa18542
    0.00 :   ffffffff8aa18538:       mov    %rdx,%r8
    0.00 :   ffffffff8aa1853b:       or     $0x1,%r8
    0.00 :   ffffffff8aa1853f:       mov    %r8,(%rcx)
    0.00 :   ffffffff8aa18542:       mov    (%rdx),%rcx
    0.00 :   ffffffff8aa18545:       mov    %rcx,(%rax)
    0.00 :   ffffffff8aa18548:       mov    %rdi,(%rdx)
    0.00 :   ffffffff8aa1854b:       and    $0xfffffffffffffffc,%rcx
    0.00 :   ffffffff8aa1854f:       je     0xffffffff8aa18571
    0.00 :   ffffffff8aa18551:       cmp    0x10(%rcx),%rdx
    0.00 :   ffffffff8aa18555:       je     0xffffffff8aa18642
    0.00 :   ffffffff8aa1855b:       mov    %rax,0x8(%rcx)
    0.00 :   ffffffff8aa1855f:       xor    %eax,%eax
    0.00 :   ffffffff8aa18561:       xor    %edx,%edx
    0.00 :   ffffffff8aa18563:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa18565:       xor    %esi,%esi
    0.00 :   ffffffff8aa18567:       xor    %edi,%edi
    0.00 :   ffffffff8aa18569:       xor    %r8d,%r8d
    0.00 :   ffffffff8aa1856c:       ret
    0.00 :   ffffffff8aa1856d:       int3
    0.00 :   ffffffff8aa1856e:       int3
    0.00 :   ffffffff8aa1856f:       int3
    0.00 :   ffffffff8aa18570:       int3
    0.00 :   ffffffff8aa18571:       mov    %rax,(%rsi)
    0.00 :   ffffffff8aa18574:       xor    %eax,%eax
    0.00 :   ffffffff8aa18576:       xor    %edx,%edx
    0.00 :   ffffffff8aa18578:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa1857a:       xor    %esi,%esi
    0.00 :   ffffffff8aa1857c:       xor    %edi,%edi
    0.00 :   ffffffff8aa1857e:       xor    %r8d,%r8d
    0.00 :   ffffffff8aa18581:       ret
    0.00 :   ffffffff8aa18582:       int3
    0.00 :   ffffffff8aa18583:       int3
    0.00 :   ffffffff8aa18584:       int3
    0.00 :   ffffffff8aa18585:       int3
    0.00 :   ffffffff8aa18586:       mov    0x10(%rdx),%rcx
    0.00 :   ffffffff8aa1858a:       test   %rcx,%rcx
    0.00 :   ffffffff8aa1858d:       je     0xffffffff8aa18594
    0.00 :   ffffffff8aa1858f:       testb  $0x1,(%rcx)
    0.00 :   ffffffff8aa18592:       je     0xffffffff8aa185af
    0.00 :   ffffffff8aa18594:       mov    0x10(%rax),%rcx
    0.00 :   ffffffff8aa18598:       cmp    %rdi,%rcx
    0.00 :   ffffffff8aa1859b:       je     0xffffffff8aa18618
    0.00 :   ffffffff8aa1859d:       mov    %rax,%rdi
    0.00 :   ffffffff8aa185a0:       mov    %rcx,0x8(%rdx)
    0.00 :   ffffffff8aa185a4:       mov    %rdx,0x10(%rax)
    0.00 :   ffffffff8aa185a8:       test   %rcx,%rcx
    0.00 :   ffffffff8aa185ab:       jne    0xffffffff8aa18538
    0.00 :   ffffffff8aa185ad:       jmp    0xffffffff8aa18542
    0.00 :   ffffffff8aa185af:       mov    %rdx,%rdi
    0.00 :   ffffffff8aa185b2:       or     $0x1,%rdi
    0.00 :   ffffffff8aa185b6:       mov    %rdi,(%rcx)
    0.00 :   ffffffff8aa185b9:       mov    %rdi,(%rax)
    0.00 :   ffffffff8aa185bc:       mov    (%rdx),%rcx
    0.00 :   ffffffff8aa185bf:       mov    %rdx,%rdi
    0.00 :   ffffffff8aa185c2:       and    $0xfffffffffffffffc,%rcx
    0.00 :   ffffffff8aa185c6:       mov    %rcx,(%rdx)
    0.00 :   ffffffff8aa185c9:       mov    %rcx,%rax
    0.00 :   ffffffff8aa185cc:       test   %rcx,%rcx
    0.00 :   ffffffff8aa185cf:       jne    0xffffffff8aa184fc
    0.00 :   ffffffff8aa185d5:       movq   $0x1,(%rdi)
    0.00 :   ffffffff8aa185dc:       xor    %eax,%eax
    0.00 :   ffffffff8aa185de:       xor    %edx,%edx
    0.00 :   ffffffff8aa185e0:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa185e2:       xor    %esi,%esi
    0.00 :   ffffffff8aa185e4:       xor    %edi,%edi
    0.00 :   ffffffff8aa185e6:       xor    %r8d,%r8d
    0.00 :   ffffffff8aa185e9:       ret
    0.00 :   ffffffff8aa185ea:       int3
    0.00 :   ffffffff8aa185eb:       int3
    0.00 :   ffffffff8aa185ec:       int3
    0.00 :   ffffffff8aa185ed:       int3
    0.00 :   ffffffff8aa185ee:       mov    0x10(%rdi),%rcx
    0.00 :   ffffffff8aa185f2:       mov    %rcx,0x8(%rax)
    0.00 :   ffffffff8aa185f6:       mov    %rax,0x10(%rdi)
    0.00 :   ffffffff8aa185fa:       test   %rcx,%rcx
    0.00 :   ffffffff8aa185fd:       je     0xffffffff8aa18609
    0.00 :   ffffffff8aa185ff:       mov    %rax,%r8
    0.00 :   ffffffff8aa18602:       or     $0x1,%r8
    0.00 :   ffffffff8aa18606:       mov    %r8,(%rcx)
    0.00 :   ffffffff8aa18609:       mov    %rdi,(%rax)
    0.00 :   ffffffff8aa1860c:       mov    %rdi,%rax
    0.00 :   ffffffff8aa1860f:       mov    0x8(%rdi),%rcx
    0.00 :   ffffffff8aa18613:       jmp    0xffffffff8aa1852b
    0.00 :   ffffffff8aa18618:       mov    0x8(%rdi),%rcx
    0.00 :   ffffffff8aa1861c:       mov    %rcx,0x10(%rax)
    0.00 :   ffffffff8aa18620:       mov    %rax,0x8(%rdi)
    0.00 :   ffffffff8aa18624:       test   %rcx,%rcx
    0.00 :   ffffffff8aa18627:       je     0xffffffff8aa18633
    0.00 :   ffffffff8aa18629:       mov    %rax,%r8
    0.00 :   ffffffff8aa1862c:       or     $0x1,%r8
    0.00 :   ffffffff8aa18630:       mov    %r8,(%rcx)
    0.00 :   ffffffff8aa18633:       mov    %rdi,(%rax)
    0.00 :   ffffffff8aa18636:       mov    %rdi,%rax
    0.00 :   ffffffff8aa18639:       mov    0x10(%rdi),%rcx
    0.00 :   ffffffff8aa1863d:       jmp    0xffffffff8aa185a0
    0.00 :   ffffffff8aa18642:       mov    %rax,0x10(%rcx)
    0.00 :   ffffffff8aa18646:       xor    %eax,%eax
    0.00 :   ffffffff8aa18648:       xor    %edx,%edx
    0.00 :   ffffffff8aa1864a:       xor    %ecx,%ecx
    0.00 :   ffffffff8aa1864c:       xor    %esi,%esi
    0.00 :   ffffffff8aa1864e:       xor    %edi,%edi
    0.00 :   ffffffff8aa18650:       xor    %r8d,%r8d
    0.00 :   ffffffff8aa18653:       ret
    0.00 :   ffffffff8aa18654:       int3
    0.00 :   ffffffff8aa18655:       int3
    0.00 :   ffffffff8aa18656:       int3
    0.00 :   ffffffff8aa18657:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b60320 <load0>:
    0.00 :   ffffffff89b60320:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b60325:       push   %rbp
    0.00 :   ffffffff89b60326:       mov    %rsp,%rbp
    0.00 :   ffffffff89b60329:       push   %r15
    0.00 :   ffffffff89b6032b:       push   %r14
    0.00 :   ffffffff89b6032d:       push   %r13
    0.00 :   ffffffff89b6032f:       push   %r12
    0.00 :   ffffffff89b60331:       mov    %rsi,%r12
    0.00 :   ffffffff89b60334:       push   %rbx
    0.00 :   ffffffff89b60335:       and    $0xfffffffffffffff0,%rsp
    0.00 :   ffffffff89b60339:       sub    $0x40,%rsp
    0.00 :   ffffffff89b6033d:       mov    (%rsi),%rbx
    0.00 :   ffffffff89b60340:       mov    0x50(%rsi),%rcx
    0.00 :   ffffffff89b60344:       mov    0x14(%rsi),%r14d
    0.00 :   ffffffff89b60348:       test   %rbx,%rbx
    0.00 :   ffffffff89b6034b:       je     0xffffffff89b6035d
    0.00 :   ffffffff89b6034d:       shr    $0xa,%rbx
    0.00 :   ffffffff89b60351:       mov    $0x2,%eax
    0.00 :   ffffffff89b60356:       cmp    %rax,%rbx
    0.00 :   ffffffff89b60359:       cmovb  %rax,%rbx
    0.00 :   ffffffff89b6035d:       mov    0x80(%r12),%rdx
    0.00 :   ffffffff89b60365:       mov    %rdi,%rax
    0.00 :   ffffffff89b60368:       sub    %rdx,%rax
    0.00 :   ffffffff89b6036b:       js     0xffffffff89b603f2
    0.00 :   ffffffff89b60371:       mov    %rax,%rsi
    0.00 :   ffffffff89b60374:       shr    $0xa,%rsi
    0.00 :   ffffffff89b60378:       je     0xffffffff89b603c9
    0.00 :   ffffffff89b6037a:       and    $0xfffffffffffffc00,%rax
    0.00 :   ffffffff89b60380:       mov    %esi,%r15d
    0.00 :   ffffffff89b60383:       add    %rdx,%rax
    0.00 :   ffffffff89b60386:       mov    0x9c(%r12),%edx
    0.00 :   ffffffff89b6038e:       mov    %rax,0x80(%r12)
    0.00 :   ffffffff89b60396:       mov    %rdx,%r9
    0.00 :   ffffffff89b60399:       add    %rsi,%rdx
    0.00 :   ffffffff89b6039c:       mov    %rdx,%r8
    0.00 :   ffffffff89b6039f:       shr    $0xa,%r8
    0.00 :   ffffffff89b603a3:       test   %rbx,%rbx
    0.00 :   ffffffff89b603a6:       jne    0xffffffff89b60423
    0.00 :   ffffffff89b603a8:       cmp    $0x3ff,%rdx
    0.00 :   ffffffff89b603af:       ja     0xffffffff89b60507
    0.00 :   ffffffff89b603b5:       mov    %edx,0x9c(%r12)
    0.00 :   ffffffff89b603bd:       mov    %edx,%r13d
    0.00 :   ffffffff89b603c0:       test   %r8d,%r8d
    0.00 :   ffffffff89b603c3:       jne    0xffffffff89b60491
    0.00 :   ffffffff89b603c9:       lea    -0x28(%rbp),%rsp
    0.00 :   ffffffff89b603cd:       xor    %eax,%eax
    0.00 :   ffffffff89b603cf:       pop    %rbx
    0.00 :   ffffffff89b603d0:       pop    %r12
    0.00 :   ffffffff89b603d2:       pop    %r13
    0.00 :   ffffffff89b603d4:       pop    %r14
    0.00 :   ffffffff89b603d6:       pop    %r15
    0.00 :   ffffffff89b603d8:       pop    %rbp
    0.00 :   ffffffff89b603d9:       xor    %edx,%edx
    0.00 :   ffffffff89b603db:       xor    %ecx,%ecx
    0.00 :   ffffffff89b603dd:       xor    %esi,%esi
    0.00 :   ffffffff89b603df:       xor    %edi,%edi
    0.00 :   ffffffff89b603e1:       xor    %r8d,%r8d
    0.00 :   ffffffff89b603e4:       xor    %r9d,%r9d
    0.00 :   ffffffff89b603e7:       xor    %r10d,%r10d
    0.00 :   ffffffff89b603ea:       xor    %r11d,%r11d
    0.00 :   ffffffff89b603ed:       ret
    0.00 :   ffffffff89b603ee:       int3
    0.00 :   ffffffff89b603ef:       int3
    0.00 :   ffffffff89b603f0:       int3
    0.00 :   ffffffff89b603f1:       int3
    0.00 :   ffffffff89b603f2:       mov    %rdi,0x80(%r12)
    0.00 :   ffffffff89b603fa:       lea    -0x28(%rbp),%rsp
    0.00 :   ffffffff89b603fe:       xor    %eax,%eax
    0.00 :   ffffffff89b60400:       pop    %rbx
    0.00 :   ffffffff89b60401:       pop    %r12
    0.00 :   ffffffff89b60403:       pop    %r13
    0.00 :   ffffffff89b60405:       pop    %r14
    0.00 :   ffffffff89b60407:       pop    %r15
    0.00 :   ffffffff89b60409:       pop    %rbp
    0.00 :   ffffffff89b6040a:       xor    %edx,%edx
    0.00 :   ffffffff89b6040c:       xor    %ecx,%ecx
    0.00 :   ffffffff89b6040e:       xor    %esi,%esi
    0.00 :   ffffffff89b60410:       xor    %edi,%edi
    0.00 :   ffffffff89b60412:       xor    %r8d,%r8d
    0.00 :   ffffffff89b60415:       xor    %r9d,%r9d
    0.00 :   ffffffff89b60418:       xor    %r10d,%r10d
    0.00 :   ffffffff89b6041b:       xor    %r11d,%r11d
    0.00 :   ffffffff89b6041e:       ret
    0.00 :   ffffffff89b6041f:       int3
    0.00 :   ffffffff89b60420:       int3
    0.00 :   ffffffff89b60421:       int3
    0.00 :   ffffffff89b60422:       int3
    0.00 :   ffffffff89b60423:       xor    %r10d,%r10d
    0.00 :   ffffffff89b60426:       test   %rcx,%rcx
    0.00 :   ffffffff89b60429:       setne  %r10b
    0.00 :   ffffffff89b6042d:       cmp    $0x3ff,%rdx
    0.00 :   ffffffff89b60434:       ja     0xffffffff89b605bc
    0.00 :   ffffffff89b6043a:       mov    0x88(%r12),%rsi
    0.00 :   ffffffff89b60442:       mov    %edx,%r13d
    0.00 :   ffffffff89b60445:       mov    %r15d,%eax
    0.00 :   ffffffff89b60448:       mov    %r13d,0x9c(%r12)
    0.00 :   ffffffff89b60450:       imul   %rbx,%rax
    0.00 :   ffffffff89b60454:       add    %rsi,%rax
    0.00 :   ffffffff89b60457:       mov    %rax,0x88(%r12)
    0.00 :   ffffffff89b6045f:       test   %r14,%r14
    0.00 :   ffffffff89b60462:       je     0xffffffff89b60477
    0.00 :   ffffffff89b60464:       mov    %r15d,%eax
    0.00 :   ffffffff89b60467:       imul   %r14,%rax
    0.00 :   ffffffff89b6046b:       shl    $0xa,%rax
    0.00 :   ffffffff89b6046f:       add    %rax,0x90(%r12)
    0.00 :   ffffffff89b60477:       test   %r10d,%r10d
    0.00 :   ffffffff89b6047a:       je     0xffffffff89b60488
    0.00 :   ffffffff89b6047c:       shl    $0xa,%r15d
    0.00 :   ffffffff89b60480:       add    %r15d,0x98(%r12)
    0.00 :   ffffffff89b60488:       test   %r8d,%r8d
    0.00 :   ffffffff89b6048b:       je     0xffffffff89b603c9
    0.00 :   ffffffff89b60491:       mov    0x88(%r12),%rax
    0.00 :   ffffffff89b60499:       lea    0xb67e(%r13),%ecx
    0.00 :   ffffffff89b604a0:       xor    %edx,%edx
  100.00 :   ffffffff89b604a2:       div    %rcx
    0.00 :   ffffffff89b604a5:       xor    %edx,%edx
    0.00 :   ffffffff89b604a7:       mov    %rax,0xa0(%r12)
    0.00 :   ffffffff89b604af:       mov    0x90(%r12),%rax
    0.00 :   ffffffff89b604b7:       div    %rcx
    0.00 :   ffffffff89b604ba:       xor    %edx,%edx
    0.00 :   ffffffff89b604bc:       mov    %rax,0xa8(%r12)
    0.00 :   ffffffff89b604c4:       mov    0x98(%r12),%eax
    0.00 :   ffffffff89b604cc:       div    %ecx
    0.00 :   ffffffff89b604ce:       mov    %rax,0xb0(%r12)
    0.00 :   ffffffff89b604d6:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b604db:       lea    -0x28(%rbp),%rsp
    0.00 :   ffffffff89b604df:       mov    $0x1,%eax
    0.00 :   ffffffff89b604e4:       pop    %rbx
    0.00 :   ffffffff89b604e5:       pop    %r12
    0.00 :   ffffffff89b604e7:       pop    %r13
    0.00 :   ffffffff89b604e9:       pop    %r14
    0.00 :   ffffffff89b604eb:       pop    %r15
    0.00 :   ffffffff89b604ed:       pop    %rbp
    0.00 :   ffffffff89b604ee:       xor    %edx,%edx
    0.00 :   ffffffff89b604f0:       xor    %ecx,%ecx
    0.00 :   ffffffff89b604f2:       xor    %esi,%esi
    0.00 :   ffffffff89b604f4:       xor    %edi,%edi
    0.00 :   ffffffff89b604f6:       xor    %r8d,%r8d
    0.00 :   ffffffff89b604f9:       xor    %r9d,%r9d
    0.00 :   ffffffff89b604fc:       xor    %r10d,%r10d
    0.00 :   ffffffff89b604ff:       xor    %r11d,%r11d
    0.00 :   ffffffff89b60502:       ret
    0.00 :   ffffffff89b60503:       int3
    0.00 :   ffffffff89b60504:       int3
    0.00 :   ffffffff89b60505:       int3
    0.00 :   ffffffff89b60506:       int3
    0.00 :   ffffffff89b60507:       mov    %edx,%r13d
    0.00 :   ffffffff89b6050a:       mov    0x88(%r12),%rax
    0.00 :   ffffffff89b60512:       and    $0x3ff,%r13d
    0.00 :   ffffffff89b60519:       cmp    $0x7e0,%r8
    0.00 :   ffffffff89b60520:       ja     0xffffffff89b6075b
    0.00 :   ffffffff89b60526:       xor    %r14d,%r14d
    0.00 :   ffffffff89b60529:       xor    %r10d,%r10d
    0.00 :   ffffffff89b6052c:       cmp    $0x1f,%r8
    0.00 :   ffffffff89b60530:       ja     0xffffffff89b606a4
    0.00 :   ffffffff89b60536:       mov    %r8d,%esi
    0.00 :   ffffffff89b60539:       cmp    $0x1f,%r8d
    0.00 :   ffffffff89b6053d:       ja     0xffffffff89b60818
    0.00 :   ffffffff89b60543:       mov    -0x751d9620(,%rsi,4),%ecx
    0.00 :   ffffffff89b6054a:       mul    %rcx
    0.00 :   ffffffff89b6054d:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b60552:       mov    %rax,0x88(%r12)
    0.00 :   ffffffff89b6055a:       mov    0x90(%r12),%rax
    0.00 :   ffffffff89b60562:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b60566:       ja     0xffffffff89b607cb
    0.00 :   ffffffff89b6056c:       mul    %rcx
    0.00 :   ffffffff89b6056f:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b60574:       mov    %rax,0x90(%r12)
    0.00 :   ffffffff89b6057c:       mov    0x98(%r12),%eax
    0.00 :   ffffffff89b60584:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b60588:       ja     0xffffffff89b6078a
    0.00 :   ffffffff89b6058e:       mov    -0x751d9620(,%rsi,4),%r11d
    0.00 :   ffffffff89b60596:       mul    %r11
    0.00 :   ffffffff89b60599:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b6059e:       mov    %eax,0x98(%r12)
    0.00 :   ffffffff89b605a6:       test   %rbx,%rbx
    0.00 :   ffffffff89b605a9:       jne    0xffffffff89b60655
    0.00 :   ffffffff89b605af:       mov    %r13d,0x9c(%r12)
    0.00 :   ffffffff89b605b7:       jmp    0xffffffff89b6045f
    0.00 :   ffffffff89b605bc:       and    $0x3ff,%edx
    0.00 :   ffffffff89b605c2:       mov    0x88(%r12),%rax
    0.00 :   ffffffff89b605ca:       mov    %edx,%r13d
    0.00 :   ffffffff89b605cd:       cmp    $0x7e0,%r8
    0.00 :   ffffffff89b605d4:       jbe    0xffffffff89b6052c
    0.00 :   ffffffff89b605da:       movq   $0x0,0x90(%r12)
    0.00 :   ffffffff89b605e6:       mov    %edx,%ecx
    0.00 :   ffffffff89b605e8:       xor    %esi,%esi
    0.00 :   ffffffff89b605ea:       xor    %eax,%eax
    0.00 :   ffffffff89b605ec:       movl   $0x0,0x98(%r12)
    0.00 :   ffffffff89b605f8:       lea    0xb67e(%rcx),%edx
    0.00 :   ffffffff89b605fe:       sub    %eax,%edx
    0.00 :   ffffffff89b60600:       mov    %edx,%r15d
    0.00 :   ffffffff89b60603:       jmp    0xffffffff89b60445
    0.00 :   ffffffff89b60608:       mov    %gs:0x764d123d(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89b6060f:       mov    %eax,%eax
    0.00 :   ffffffff89b60611:       bt     %rax,0x24a0b87(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89b60619:       jae    0xffffffff89b604db
    0.00 :   ffffffff89b6061f:       incl   %gs:0x764d1222(%rip)        # 0x31848
    0.00 :   ffffffff89b60626:       mov    0x24559f3(%rip),%rax        # 0xffffffff8bfb6020
    0.00 :   ffffffff89b6062d:       test   %rax,%rax
    0.00 :   ffffffff89b60630:       je     0xffffffff89b6063e
    0.00 :   ffffffff89b60632:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89b60636:       mov    %r12,%rsi
    0.00 :   ffffffff89b60639:       call   0xffffffff89b2bc80
    0.00 :   ffffffff89b6063e:       decl   %gs:0x764d1203(%rip)        # 0x31848
    0.00 :   ffffffff89b60645:       jne    0xffffffff89b604db
    0.00 :   ffffffff89b6064b:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b60650:       jmp    0xffffffff89b604db
    0.00 :   ffffffff89b60655:       mov    $0x400,%r15d
    0.00 :   ffffffff89b6065b:       sub    %r9d,%r15d
    0.00 :   ffffffff89b6065e:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b60662:       ja     0xffffffff89b6092c
    0.00 :   ffffffff89b60668:       mov    -0x751d9620(,%rsi,4),%eax
    0.00 :   ffffffff89b6066f:       mov    %r8d,%esi
    0.00 :   ffffffff89b60672:       mul    %r15
    0.00 :   ffffffff89b60675:       shr    $0x20,%rax
    0.00 :   ffffffff89b60679:       mov    %rax,%r15
    0.00 :   ffffffff89b6067c:       mov    $0xba7e,%eax
    0.00 :   ffffffff89b60681:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b60685:       ja     0xffffffff89b608f3
    0.00 :   ffffffff89b6068b:       mul    %r11
    0.00 :   ffffffff89b6068e:       mov    0x88(%r12),%rsi
    0.00 :   ffffffff89b60696:       lea    0x0(%r13,%r15,1),%ecx
    0.00 :   ffffffff89b6069b:       shr    $0x20,%rax
    0.00 :   ffffffff89b6069f:       jmp    0xffffffff89b605f8
    0.00 :   ffffffff89b606a4:       mov    %r8,%rsi
    0.00 :   ffffffff89b606a7:       mov    %r8d,%ecx
    0.00 :   ffffffff89b606aa:       and    $0x1f,%esi
    0.00 :   ffffffff89b606ad:       shr    $0x5,%ecx
    0.00 :   ffffffff89b606b0:       mov    -0x751d9620(,%rsi,4),%r11d
    0.00 :   ffffffff89b606b8:       shr    %cl,%rax
    0.00 :   ffffffff89b606bb:       mul    %r11
    0.00 :   ffffffff89b606be:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b606c3:       mov    %rax,0x88(%r12)
    0.00 :   ffffffff89b606cb:       mov    0x90(%r12),%rax
    0.00 :   ffffffff89b606d3:       shr    %cl,%rax
    0.00 :   ffffffff89b606d6:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b606da:       ja     0xffffffff89b6089e
    0.00 :   ffffffff89b606e0:       mul    %r11
    0.00 :   ffffffff89b606e3:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b606e8:       mov    %rax,0x90(%r12)
    0.00 :   ffffffff89b606f0:       mov    0x98(%r12),%eax
    0.00 :   ffffffff89b606f8:       shr    %cl,%rax
    0.00 :   ffffffff89b606fb:       cmp    $0x1f,%rsi
    0.00 :   ffffffff89b606ff:       ja     0xffffffff89b6085b
    0.00 :   ffffffff89b60705:       mov    -0x751d9620(,%rsi,4),%r11d
    0.00 :   ffffffff89b6070d:       mul    %r11
    0.00 :   ffffffff89b60710:       shrd   $0x20,%rdx,%rax
    0.00 :   ffffffff89b60715:       mov    %eax,0x98(%r12)
    0.00 :   ffffffff89b6071d:       test   %rbx,%rbx
    0.00 :   ffffffff89b60720:       je     0xffffffff89b605af
    0.00 :   ffffffff89b60726:       mov    %r8,%rdx
    0.00 :   ffffffff89b60729:       mov    %r8d,%ecx
    0.00 :   ffffffff89b6072c:       mov    $0x400,%eax
    0.00 :   ffffffff89b60731:       and    $0x1f,%edx
    0.00 :   ffffffff89b60734:       shr    $0x5,%ecx
    0.00 :   ffffffff89b60737:       sub    %r9d,%eax
    0.00 :   ffffffff89b6073a:       mov    -0x751d9620(,%rdx,4),%edx
    0.00 :   ffffffff89b60741:       shr    %cl,%rax
    0.00 :   ffffffff89b60744:       mul    %rdx
    0.00 :   ffffffff89b60747:       shr    $0x20,%rax
    0.00 :   ffffffff89b6074b:       mov    %rax,%r15
    0.00 :   ffffffff89b6074e:       mov    $0xba7e,%eax
    0.00 :   ffffffff89b60753:       shr    %cl,%rax
    0.00 :   ffffffff89b60756:       jmp    0xffffffff89b60681
    0.00 :   ffffffff89b6075b:       movq   $0x0,0x88(%r12)
    0.00 :   ffffffff89b60767:       xor    %r14d,%r14d
    0.00 :   ffffffff89b6076a:       xor    %r10d,%r10d
    0.00 :   ffffffff89b6076d:       movq   $0x0,0x90(%r12)
    0.00 :   ffffffff89b60779:       movl   $0x0,0x98(%r12)
    0.00 :   ffffffff89b60785:       jmp    0xffffffff89b605af
    0.00 :   ffffffff89b6078a:       mov    $0xffffffff8bc94f20,%rdi
    0.00 :   ffffffff89b60791:       mov    %eax,0x18(%rsp)
    0.00 :   ffffffff89b60795:       mov    %r9d,0x20(%rsp)
    0.00 :   ffffffff89b6079a:       mov    %r10d,0x28(%rsp)
    0.00 :   ffffffff89b6079f:       mov    %r8,0x30(%rsp)
    0.00 :   ffffffff89b607a4:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b607a9:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b607ae:       mov    0x18(%rsp),%eax
    0.00 :   ffffffff89b607b2:       mov    0x20(%rsp),%r9d
    0.00 :   ffffffff89b607b7:       mov    0x28(%rsp),%r10d
    0.00 :   ffffffff89b607bc:       mov    0x30(%rsp),%r8
    0.00 :   ffffffff89b607c1:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b607c6:       jmp    0xffffffff89b6058e
    0.00 :   ffffffff89b607cb:       mov    $0xffffffff8bc94f40,%rdi
    0.00 :   ffffffff89b607d2:       mov    %rcx,0x10(%rsp)
    0.00 :   ffffffff89b607d7:       mov    %r9d,0x18(%rsp)
    0.00 :   ffffffff89b607dc:       mov    %r10d,0x20(%rsp)
    0.00 :   ffffffff89b607e1:       mov    %r8,0x28(%rsp)
    0.00 :   ffffffff89b607e6:       mov    %rax,0x30(%rsp)
    0.00 :   ffffffff89b607eb:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b607f0:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b607f5:       mov    0x10(%rsp),%rcx
    0.00 :   ffffffff89b607fa:       mov    0x18(%rsp),%r9d
    0.00 :   ffffffff89b607ff:       mov    0x20(%rsp),%r10d
    0.00 :   ffffffff89b60804:       mov    0x28(%rsp),%r8
    0.00 :   ffffffff89b60809:       mov    0x30(%rsp),%rax
    0.00 :   ffffffff89b6080e:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b60813:       jmp    0xffffffff89b6056c
    0.00 :   ffffffff89b60818:       mov    $0xffffffff8bc94f60,%rdi
    0.00 :   ffffffff89b6081f:       mov    %rax,0x18(%rsp)
    0.00 :   ffffffff89b60824:       mov    %r9d,0x20(%rsp)
    0.00 :   ffffffff89b60829:       mov    %r10d,0x28(%rsp)
    0.00 :   ffffffff89b6082e:       mov    %r8,0x30(%rsp)
    0.00 :   ffffffff89b60833:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b60838:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b6083d:       mov    0x18(%rsp),%rax
    0.00 :   ffffffff89b60842:       mov    0x20(%rsp),%r9d
    0.00 :   ffffffff89b60847:       mov    0x28(%rsp),%r10d
    0.00 :   ffffffff89b6084c:       mov    0x30(%rsp),%r8
    0.00 :   ffffffff89b60851:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b60856:       jmp    0xffffffff89b60543
    0.00 :   ffffffff89b6085b:       mov    $0xffffffff8bc94fa0,%rdi
    0.00 :   ffffffff89b60862:       mov    %r9d,0x18(%rsp)
    0.00 :   ffffffff89b60867:       mov    %r10d,0x20(%rsp)
    0.00 :   ffffffff89b6086c:       mov    %r8,0x28(%rsp)
    0.00 :   ffffffff89b60871:       mov    %rax,0x30(%rsp)
    0.00 :   ffffffff89b60876:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b6087b:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b60880:       mov    0x18(%rsp),%r9d
    0.00 :   ffffffff89b60885:       mov    0x20(%rsp),%r10d
    0.00 :   ffffffff89b6088a:       mov    0x28(%rsp),%r8
    0.00 :   ffffffff89b6088f:       mov    0x30(%rsp),%rax
    0.00 :   ffffffff89b60894:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b60899:       jmp    0xffffffff89b60705
    0.00 :   ffffffff89b6089e:       mov    $0xffffffff8bc94fc0,%rdi
    0.00 :   ffffffff89b608a5:       mov    %r11,0x8(%rsp)
    0.00 :   ffffffff89b608aa:       mov    %r9d,0x10(%rsp)
    0.00 :   ffffffff89b608af:       mov    %ecx,0x18(%rsp)
    0.00 :   ffffffff89b608b3:       mov    %r10d,0x20(%rsp)
    0.00 :   ffffffff89b608b8:       mov    %r8,0x28(%rsp)
    0.00 :   ffffffff89b608bd:       mov    %rax,0x30(%rsp)
    0.00 :   ffffffff89b608c2:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b608c7:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b608cc:       mov    0x8(%rsp),%r11
    0.00 :   ffffffff89b608d1:       mov    0x10(%rsp),%r9d
    0.00 :   ffffffff89b608d6:       mov    0x18(%rsp),%ecx
    0.00 :   ffffffff89b608da:       mov    0x20(%rsp),%r10d
    0.00 :   ffffffff89b608df:       mov    0x28(%rsp),%r8
    0.00 :   ffffffff89b608e4:       mov    0x30(%rsp),%rax
    0.00 :   ffffffff89b608e9:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b608ee:       jmp    0xffffffff89b606e0
    0.00 :   ffffffff89b608f3:       mov    $0xffffffff8bc94f80,%rdi
    0.00 :   ffffffff89b608fa:       mov    %rax,0x20(%rsp)
    0.00 :   ffffffff89b608ff:       mov    %r11,0x28(%rsp)
    0.00 :   ffffffff89b60904:       mov    %r10d,0x30(%rsp)
    0.00 :   ffffffff89b60909:       mov    %r8,0x38(%rsp)
    0.00 :   ffffffff89b6090e:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b60913:       mov    0x20(%rsp),%rax
    0.00 :   ffffffff89b60918:       mov    0x28(%rsp),%r11
    0.00 :   ffffffff89b6091d:       mov    0x30(%rsp),%r10d
    0.00 :   ffffffff89b60922:       mov    0x38(%rsp),%r8
    0.00 :   ffffffff89b60927:       jmp    0xffffffff89b6068b
    0.00 :   ffffffff89b6092c:       mov    $0xffffffff8bc94ee0,%rdi
    0.00 :   ffffffff89b60933:       mov    %r11,0x20(%rsp)
    0.00 :   ffffffff89b60938:       mov    %r10d,0x28(%rsp)
    0.00 :   ffffffff89b6093d:       mov    %r8,0x30(%rsp)
    0.00 :   ffffffff89b60942:       mov    %rsi,0x38(%rsp)
    0.00 :   ffffffff89b60947:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b6094c:       mov    0x20(%rsp),%r11
    0.00 :   ffffffff89b60951:       mov    0x28(%rsp),%r10d
    0.00 :   ffffffff89b60956:       mov    0x30(%rsp),%r8
    0.00 :   ffffffff89b6095b:       mov    0x38(%rsp),%rsi
    0.00 :   ffffffff89b60960:       jmp    0xffffffff89b60668
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8aa28df0 <load0>:
  100.00 :   ffffffff8aa28df0:       movabs $0x7fffffffeff9,%rdx
    0.00 :   ffffffff8aa28dfa:       cmp    %rdx,%rax
    0.00 :   ffffffff8aa28dfd:       jae    0xffffffff8aa28ee3
    0.00 :   ffffffff8aa28e03:       sbb    %rdx,%rdx
    0.00 :   ffffffff8aa28e06:       and    %rdx,%rax
    0.00 :   ffffffff8aa28e09:       stac
    0.00 :   ffffffff8aa28e0c:       mov    (%rax),%rdx
    0.00 :   ffffffff8aa28e0f:       xor    %eax,%eax
    0.00 :   ffffffff8aa28e11:       clac
    0.00 :   ffffffff8aa28e14:       ret
    0.00 :   ffffffff8aa28e15:       int3
    0.00 :   ffffffff8aa28e16:       int3
    0.00 :   ffffffff8aa28e17:       int3
    0.00 :   ffffffff8aa28e18:       int3
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000075030 <__vfprintf_internal>:
         : 6     __vfprintf_internal():
         : 7     ./stdio-common/vfprintf-internal.c:1180
    0.00 :   75030:  endbr64
    0.00 :   75034:  push   %r15
    0.00 :   75036:  push   %r14
    0.00 :   75038:  push   %r13
    0.00 :   7503a:  push   %r12
    0.00 :   7503c:  push   %rbp
    0.00 :   7503d:  mov    %rdi,%rbp
    0.00 :   75040:  push   %rbx
    0.00 :   75041:  sub    $0x538,%rsp
    0.00 :   75048:  mov    %rsi,0x8(%rsp)
    0.00 :   7504d:  mov    %rdx,0x20(%rsp)
    0.00 :   75052:  mov    %ecx,0x7c(%rsp)
         : 20    ./stdio-common/vfprintf-internal.c:1210
    0.00 :   75056:  mov    %fs:0x28,%rax
    0.00 :   7505f:  mov    %rax,0x528(%rsp)
    0.00 :   75067:  mov    0x1a3da2(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
    0.00 :   7506e:  mov    %fs:(%rax),%eax
    0.00 :   75071:  mov    %eax,0x90(%rsp)
         : 26    ./stdio-common/vfprintf-internal.c:1218
    0.00 :   75078:  mov    0xc0(%rdi),%eax
    0.00 :   7507e:  test   %eax,%eax
    0.00 :   75080:  jne    75500 <__vfprintf_internal+0x4d0>
         : 30    ./stdio-common/vfprintf-internal.c:1218 (discriminator 3)
    0.00 :   75086:  movl   $0xffffffff,0xc0(%rdi)
         : 32    ./stdio-common/vfprintf-internal.c:1222
    0.00 :   75090:  mov    0x0(%rbp),%ebx
    0.00 :   75093:  test   $0x8,%bl
    0.00 :   75096:  jne    77380 <__vfprintf_internal+0x2350>
         : 36    ./stdio-common/vfprintf-internal.c:1222 (discriminator 2)
    0.00 :   7509c:  cmpq   $0x0,0x8(%rsp)
    0.00 :   750a2:  je     77440 <__vfprintf_internal+0x2410>
         : 39    ./stdio-common/vfprintf-internal.c:1233
    0.00 :   750a8:  test   $0x2,%bl
    0.00 :   750ab:  jne    76620 <__vfprintf_internal+0x15f0>
         : 42    ./stdio-common/vfprintf-internal.c:1244
    0.00 :   750b1:  mov    0x20(%rsp),%rax
         : 44    __find_specmb():
         : 45    ./stdio-common/printf-parse.h:111
    0.00 :   750b6:  mov    0x8(%rsp),%rdi
    0.00 :   750bb:  mov    $0x25,%esi
         : 48    __vfprintf_internal():
         : 49    ./stdio-common/vfprintf-internal.c:1244
    0.00 :   750c0:  movdqu (%rax),%xmm1
    0.00 :   750c4:  movups %xmm1,0x118(%rsp)
    0.00 :   750cc:  mov    0x10(%rax),%rax
    0.00 :   750d0:  movaps %xmm1,0x10(%rsp)
    0.00 :   750d5:  mov    %rax,0x128(%rsp)
         : 55    __find_specmb():
         : 56    ./stdio-common/printf-parse.h:111
    0.00 :   750dd:  call   284d0 <*ABS*+0xab010@plt>
         : 58    __vfprintf_internal():
         : 59    ./stdio-common/vfprintf-internal.c:1259
    0.00 :   750e2:  mov    %rbp,0xf8(%rsp)
         : 61    __find_specmb():
         : 62    ./stdio-common/printf-parse.h:111
    0.00 :   750ea:  mov    %rax,0x68(%rsp)
         : 64    __vfprintf_internal():
         : 65    ./stdio-common/vfprintf-internal.c:1259
    0.00 :   750ef:  movb   $0x0,0xa6(%rsp)
    0.00 :   750f7:  and    $0x80,%bh
    0.00 :   750fa:  je     75518 <__vfprintf_internal+0x4e8>
         : 69    outstring_func():
         : 70    ./stdio-common/vfprintf-internal.c:239 (discriminator 12)
    0.00 :   75100:  mov    0xd8(%rbp),%r12
         : 72    IO_validate_vtable():
         : 73    ./stdio-common/../libio/libioP.h:940 (discriminator 12)
    0.00 :   75107:  lea    0x1a165a(%rip),%rax        # 216768 <__stop___libc_IO_vtables>
         : 75    __vfprintf_internal():
         : 76    ./stdio-common/vfprintf-internal.c:1263 (discriminator 12)
    0.00 :   7510e:  mov    0x68(%rsp),%rbx
         : 78    IO_validate_vtable():
         : 79    ./stdio-common/../libio/libioP.h:942 (discriminator 12)
    0.00 :   75113:  lea    0x1a08e6(%rip),%rcx        # 215a00 <_IO_helper_jumps>
         : 81    ./stdio-common/../libio/libioP.h:940 (discriminator 12)
    0.00 :   7511a:  sub    0x1a26f7(%rip),%rax        # 217818 <tryfunc.0+0x18>
         : 83    __vfprintf_internal():
         : 84    ./stdio-common/vfprintf-internal.c:1263 (discriminator 12)
    0.00 :   75121:  sub    0x8(%rsp),%rbx
         : 86    IO_validate_vtable():
         : 87    ./stdio-common/../libio/libioP.h:940 (discriminator 12)
    0.00 :   75126:  mov    %rax,0x30(%rsp)
    0.00 :   7512b:  mov    %rax,%rdi
         : 90    ./stdio-common/../libio/libioP.h:942 (discriminator 12)
    0.00 :   7512e:  mov    %r12,%rax
    0.00 :   75131:  sub    %rcx,%rax
         : 93    ./stdio-common/../libio/libioP.h:943 (discriminator 12)
    0.00 :   75134:  cmp    %rax,%rdi
    0.00 :   75137:  jbe    769d0 <__vfprintf_internal+0x19a0>
         : 96    outstring_func():
         : 97    ./stdio-common/vfprintf-internal.c:239
    0.00 :   7513d:  mov    0x8(%rsp),%rsi
    0.00 :   75142:  mov    %rbx,%rdx
    0.00 :   75145:  mov    %rbp,%rdi
    0.00 :   75148:  call   *0x38(%r12)
    0.00 :   7514d:  cmp    %rax,%rbx
    0.00 :   75150:  jne    76728 <__vfprintf_internal+0x16f8>
         : 104   done_add_func():
         : 105   ./stdio-common/vfprintf-internal.c:127
    0.00 :   75156:  movslq %ebx,%rdx
    0.00 :   75159:  mov    %rbx,%rax
    0.00 :   7515c:  mov    %ebx,%r12d
    0.00 :   7515f:  shr    $0x3f,%rax
    0.00 :   75163:  cmp    %rdx,%rbx
    0.00 :   75166:  mov    $0x1,%edx
    0.00 :   7516b:  cmovne %edx,%eax
    0.00 :   7516e:  test   %eax,%eax
    0.00 :   75170:  jne    75860 <__vfprintf_internal+0x830>
         : 115   __vfprintf_internal():
         : 116   ./stdio-common/vfprintf-internal.c:1263
    0.00 :   75176:  test   %ebx,%ebx
    0.00 :   75178:  js     7533d <__vfprintf_internal+0x30d>
         : 119   ./stdio-common/vfprintf-internal.c:1267 (discriminator 2)
    0.00 :   7517e:  mov    0x68(%rsp),%r13
    0.00 :   75183:  cmpb   $0x0,0x0(%r13)
    0.00 :   75188:  je     7533d <__vfprintf_internal+0x30d>
         : 123   ./stdio-common/vfprintf-internal.c:1271
    0.00 :   7518e:  mov    0x1a6833(%rip),%rbx        # 21b9c8 <__printf_function_table>
    0.00 :   75195:  mov    %rbx,0x98(%rsp)
    0.00 :   7519d:  test   %rbx,%rbx
    0.00 :   751a0:  jne    77128 <__vfprintf_internal+0x20f8>
         : 128   ./stdio-common/vfprintf-internal.c:1271 (discriminator 2)
    0.00 :   751a6:  cmpq   $0x0,0x1a682a(%rip)        # 21b9d8 <__printf_modifier_table>
    0.00 :   751ae:  jne    752c8 <__vfprintf_internal+0x298>
         : 131   ./stdio-common/vfprintf-internal.c:1271
    0.00 :   751b4:  cmpq   $0x0,0x1a56fc(%rip)        # 21a8b8 <__printf_va_arg_table>
    0.00 :   751bc:  jne    752c8 <__vfprintf_internal+0x298>
         : 134   ./stdio-common/vfprintf-internal.c:1532
    0.00 :   751c2:  mov    0x7c(%rsp),%eax
         : 136   ./stdio-common/vfprintf-internal.c:1214
    0.00 :   751c6:  movl   $0x0,0xa0(%rsp)
         : 138   ./stdio-common/vfprintf-internal.c:1248
    0.00 :   751d1:  movl   $0x0,0x78(%rsp)
         : 140   ./stdio-common/vfprintf-internal.c:1240
    0.00 :   751d9:  movq   $0xffffffffffffffff,0x80(%rsp)
         : 142   ./stdio-common/vfprintf-internal.c:1532
    0.00 :   751e5:  mov    %eax,%ebx
    0.00 :   751e7:  and    $0x1,%ebx
    0.00 :   751ea:  mov    %bl,0xa7(%rsp)
         : 146   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   751f1:  mov    %eax,%ebx
         : 148   ./stdio-common/vfprintf-internal.c:1516
    0.00 :   751f3:  and    $0x2,%eax
         : 150   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   751f6:  and    $0x8,%ebx
         : 152   ./stdio-common/vfprintf-internal.c:1516
    0.00 :   751f9:  mov    %eax,0xa8(%rsp)
         : 154   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   75200:  mov    %ebx,0xac(%rsp)
    0.00 :   75207:  nopw   0x0(%rax,%rax,1)
         : 157   ./stdio-common/vfprintf-internal.c:1313
    0.00 :   75210:  lea    0x1(%r13),%rbx
    0.00 :   75214:  movzbl 0x1(%r13),%r13d
    0.00 :   75219:  lea    0x550(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75220:  lea    -0x20(%r13),%eax
    0.00 :   75224:  cmp    $0x5a,%al
    0.00 :   75226:  ja     75251 <__vfprintf_internal+0x221>
         : 164   ./stdio-common/vfprintf-internal.c:1313 (discriminator 1)
    0.00 :   75228:  movsbl %r13b,%eax
    0.00 :   7522c:  lea    0x15c4ad(%rip),%rdx        # 1d16e0 <jump_table>
    0.00 :   75233:  lea    0x15c426(%rip),%rdi        # 1d1660 <step0_jumps.9>
    0.00 :   7523a:  sub    $0x20,%eax
    0.00 :   7523d:  cltq
    0.00 :   7523f:  movzbl (%rdx,%rax,1),%eax
    0.00 :   75243:  movslq (%rdi,%rax,4),%rsi
    0.00 :   75247:  lea    0x522(%rip),%rax        # 75770 <__vfprintf_internal+0x740>
    0.00 :   7524e:  add    %rax,%rsi
         : 174   ./stdio-common/vfprintf-internal.c:1352 (discriminator 4)
    0.00 :   75251:  mov    0x1a3d18(%rip),%rax        # 218f70 <_DYNAMIC+0x3b0>
         : 176   ./stdio-common/vfprintf-internal.c:1301 (discriminator 4)
    0.00 :   75258:  xor    %r11d,%r11d
         : 178   ./stdio-common/vfprintf-internal.c:1300 (discriminator 4)
    0.00 :   7525b:  xor    %r10d,%r10d
         : 180   ./stdio-common/vfprintf-internal.c:1299 (discriminator 4)
    0.00 :   7525e:  xor    %r15d,%r15d
         : 182   ./stdio-common/vfprintf-internal.c:1298 (discriminator 4)
    0.00 :   75261:  xor    %edx,%edx
         : 184   ./stdio-common/vfprintf-internal.c:1303 (discriminator 4)
    0.00 :   75263:  mov    $0xffffffff,%r14d
         : 186   ./stdio-common/vfprintf-internal.c:1501 (discriminator 4)
    0.00 :   75269:  lea    0x15c1f0(%rip),%r8        # 1d1460 <step4_jumps.5>
         : 188   read_int():
         : 189   ./stdio-common/printf-parse.h:88 (discriminator 4)
    0.00 :   75270:  mov    $0x7fffffff,%r9d
         : 191   __vfprintf_internal():
         : 192   ./stdio-common/vfprintf-internal.c:1352 (discriminator 4)
    0.00 :   75276:  mov    %fs:(%rax),%rax
         : 194   ./stdio-common/vfprintf-internal.c:1306 (discriminator 4)
    0.00 :   7527a:  movl   $0x0,0x5c(%rsp)
         : 196   ./stdio-common/vfprintf-internal.c:1302 (discriminator 4)
    0.00 :   75282:  movl   $0x0,0x10(%rsp)
         : 198   ./stdio-common/vfprintf-internal.c:1352 (discriminator 4)
    0.00 :   7528a:  mov    %rax,0x60(%rsp)
         : 200   ./stdio-common/vfprintf-internal.c:1501 (discriminator 4)
    0.00 :   7528f:  lea    0x15c44a(%rip),%rax        # 1d16e0 <jump_table>
         : 202   ./stdio-common/vfprintf-internal.c:1295 (discriminator 4)
    0.00 :   75296:  movl   $0x0,0x50(%rsp)
         : 204   ./stdio-common/vfprintf-internal.c:1294 (discriminator 4)
    0.00 :   7529e:  movl   $0x0,0x40(%rsp)
         : 206   ./stdio-common/vfprintf-internal.c:1293 (discriminator 4)
    0.00 :   752a6:  movl   $0x0,0x28(%rsp)
         : 208   ./stdio-common/vfprintf-internal.c:1292 (discriminator 4)
    0.00 :   752ae:  movl   $0x0,0x58(%rsp)
         : 210   ./stdio-common/vfprintf-internal.c:1291 (discriminator 4)
    0.00 :   752b6:  movl   $0x0,0x4c(%rsp)
         : 212   ./stdio-common/vfprintf-internal.c:1307 (discriminator 4)
    0.00 :   752be:  movb   $0x20,0x38(%rsp)
    0.00 :   752c3:  jmp    *%rsi
    0.00 :   752c5:  nopl   (%rax)
         : 216   ./stdio-common/vfprintf-internal.c:1214
    0.00 :   752c8:  movl   $0x0,0xa0(%rsp)
         : 218   ./stdio-common/vfprintf-internal.c:1240
    0.00 :   752d3:  movq   $0xffffffffffffffff,0x80(%rsp)
         : 220   ./stdio-common/vfprintf-internal.c:1602
    0.00 :   752df:  sub    $0x8,%rsp
    0.00 :   752e3:  mov    %r12d,%r9d
    0.00 :   752e6:  mov    %rbp,%rdi
    0.00 :   752e9:  mov    0x84(%rsp),%ebx
    0.00 :   752f0:  push   %rbx
    0.00 :   752f1:  push   0xa8(%rsp)
    0.00 :   752f8:  push   0x98(%rsp)
    0.00 :   752ff:  mov    0xb0(%rsp),%ebx
    0.00 :   75306:  push   %rbx
    0.00 :   75307:  lea    0x168(%rsp),%rdx
    0.00 :   7530f:  push   %rdx
    0.00 :   75310:  push   0x98(%rsp)
    0.00 :   75317:  push   %rax
    0.00 :   75318:  mov    0x60(%rsp),%rcx
    0.00 :   7531d:  mov    0xe0(%rsp),%edx
    0.00 :   75324:  mov    0x48(%rsp),%rsi
    0.00 :   75329:  lea    0x158(%rsp),%r8
    0.00 :   75331:  call   72b40 <printf_positional>
    0.00 :   75336:  add    $0x40,%rsp
    0.00 :   7533a:  mov    %eax,%r12d
         : 241   ./stdio-common/vfprintf-internal.c:1608
    0.00 :   7533d:  testl  $0x8000,0x0(%rbp)
    0.00 :   75344:  je     75380 <__vfprintf_internal+0x350>
         : 244   ./stdio-common/vfprintf-internal.c:1609 (discriminator 23)
    0.00 :   75346:  cmpb   $0x0,0xa6(%rsp)
    0.00 :   7534e:  jne    75588 <__vfprintf_internal+0x558>
         : 247   ./stdio-common/vfprintf-internal.c:1612
    0.00 :   75354:  mov    0x528(%rsp),%rax
    0.00 :   7535c:  sub    %fs:0x28,%rax
    0.00 :   75365:  jne    7750a <__vfprintf_internal+0x24da>
    0.00 :   7536b:  add    $0x538,%rsp
    0.00 :   75372:  mov    %r12d,%eax
    0.00 :   75375:  pop    %rbx
    0.00 :   75376:  pop    %rbp
    0.00 :   75377:  pop    %r12
    0.00 :   75379:  pop    %r13
    0.00 :   7537b:  pop    %r14
    0.00 :   7537d:  pop    %r15
    0.00 :   7537f:  ret
         : 260   ./stdio-common/vfprintf-internal.c:1608 (discriminator 1)
    0.00 :   75380:  mov    0x88(%rbp),%rdi
    0.00 :   75387:  mov    0x4(%rdi),%eax
    0.00 :   7538a:  sub    $0x1,%eax
    0.00 :   7538d:  mov    %eax,0x4(%rdi)
    0.00 :   75390:  jne    75346 <__vfprintf_internal+0x316>
         : 266   ./stdio-common/vfprintf-internal.c:1608 (discriminator 3)
    0.00 :   75392:  movq   $0x0,0x8(%rdi)
    0.00 :   7539a:  xchg   %eax,(%rdi)
    0.00 :   7539c:  cmp    $0x1,%eax
    0.00 :   7539f:  jle    75346 <__vfprintf_internal+0x316>
         : 271   ./stdio-common/vfprintf-internal.c:1608 (discriminator 20)
    0.00 :   753a1:  call   91300 <__lll_lock_wake_private>
    0.00 :   753a6:  jmp    75346 <__vfprintf_internal+0x316>
    0.00 :   753a8:  nopl   0x0(%rax,%rax,1)
    0.00 :   753b0:  endbr64
         : 276   ./stdio-common/vfprintf-internal.c:1496
    0.00 :   753b4:  endbr64
         : 278   ./stdio-common/vfprintf-internal.c:1501
    0.00 :   753b8:  movzbl 0x1(%rbx),%r13d
    0.00 :   753bd:  lea    0x1(%rbx),%rdx
    0.00 :   753c1:  lea    0x3a8(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   753c8:  lea    -0x20(%r13),%ecx
    0.00 :   753cc:  cmp    $0x5a,%cl
    0.00 :   753cf:  ja     755a0 <__vfprintf_internal+0x570>
         : 285   ./stdio-common/vfprintf-internal.c:1501 (discriminator 1)
    0.00 :   753d5:  movsbl %r13b,%ecx
         : 287   ./stdio-common/vfprintf-internal.c:1474 (discriminator 1)
    0.00 :   753d9:  lea    0x390(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
         : 289   ./stdio-common/vfprintf-internal.c:1500 (discriminator 1)
    0.00 :   753e0:  mov    $0x1,%r10d
         : 291   ./stdio-common/vfprintf-internal.c:1501 (discriminator 1)
    0.00 :   753e6:  sub    $0x20,%ecx
    0.00 :   753e9:  movslq %ecx,%rcx
    0.00 :   753ec:  movzbl (%rax,%rcx,1),%ecx
         : 295   ./stdio-common/vfprintf-internal.c:1474 (discriminator 1)
    0.00 :   753f0:  movslq (%r8,%rcx,4),%rsi
    0.00 :   753f4:  add    %rbx,%rsi
         : 298   ./stdio-common/vfprintf-internal.c:1501 (discriminator 1)
    0.00 :   753f7:  mov    %rdx,%rbx
         : 300   ./stdio-common/vfprintf-internal.c:1499 (discriminator 1)
    0.00 :   753fa:  xor    %edx,%edx
    0.00 :   753fc:  jmp    *%rsi
    0.00 :   753fe:  xchg   %ax,%ax
    0.00 :   75400:  endbr64
    0.00 :   75404:  endbr64
         : 306   ./stdio-common/vfprintf-internal.c:1532
    0.00 :   75408:  cmpb   $0x0,0xa7(%rsp)
    0.00 :   75410:  jne    771e5 <__vfprintf_internal+0x21b5>
         : 309   ./stdio-common/vfprintf-internal.c:1535
    0.00 :   75416:  mov    %edx,%ecx
    0.00 :   75418:  and    $0x1,%ecx
    0.00 :   7541b:  mov    0x10(%rsp),%eax
    0.00 :   7541f:  movzbl %cl,%ecx
    0.00 :   75422:  movsbl %r13b,%r13d
    0.00 :   75426:  movl   $0x0,0xdc(%rsp)
    0.00 :   75431:  mov    %r14d,0xd0(%rsp)
    0.00 :   75439:  mov    %eax,0xd4(%rsp)
    0.00 :   75440:  lea    (%r15,%r15,1),%eax
    0.00 :   75444:  or     %ecx,%eax
    0.00 :   75446:  lea    0x0(,%r10,4),%ecx
    0.00 :   7544e:  mov    %r13d,0xd8(%rsp)
    0.00 :   75456:  or     %ecx,%eax
    0.00 :   75458:  movzwl 0x4c(%rsp),%ecx
    0.00 :   7545d:  shl    $0x3,%ecx
    0.00 :   75460:  or     %ecx,%eax
    0.00 :   75462:  movzwl 0x58(%rsp),%ecx
    0.00 :   75467:  shl    $0x4,%ecx
    0.00 :   7546a:  or     %ecx,%eax
    0.00 :   7546c:  movzwl 0x28(%rsp),%ecx
    0.00 :   75471:  shl    $0x5,%ecx
    0.00 :   75474:  or     %ecx,%eax
    0.00 :   75476:  movzwl 0x40(%rsp),%ecx
    0.00 :   7547b:  shl    $0x6,%ecx
    0.00 :   7547e:  or     %ecx,%eax
    0.00 :   75480:  movzwl 0x50(%rsp),%ecx
    0.00 :   75485:  shl    $0x7,%ecx
    0.00 :   75488:  or     %ecx,%eax
    0.00 :   7548a:  movzwl 0x5c(%rsp),%ecx
    0.00 :   7548f:  shl    $0xb,%ecx
    0.00 :   75492:  or     %ecx,%eax
    0.00 :   75494:  mov    %ax,0xdc(%rsp)
    0.00 :   7549c:  movzbl 0x38(%rsp),%eax
    0.00 :   754a1:  mov    %eax,0xe0(%rsp)
         : 344   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   754a8:  test   %edx,%edx
    0.00 :   754aa:  je     755b0 <__vfprintf_internal+0x580>
         : 347   ./stdio-common/vfprintf-internal.c:1555 (discriminator 1)
    0.00 :   754b0:  mov    0xac(%rsp),%esi
    0.00 :   754b7:  test   %esi,%esi
    0.00 :   754b9:  je     768a0 <__vfprintf_internal+0x1870>
         : 351   ./stdio-common/vfprintf-internal.c:1555 (discriminator 3)
    0.00 :   754bf:  mov    0x20(%rsp),%rcx
    0.00 :   754c4:  orb    $0x10,0xdd(%rsp)
    0.00 :   754cc:  mov    0x4(%rcx),%edx
    0.00 :   754cf:  cmp    $0xaf,%edx
    0.00 :   754d5:  ja     76d80 <__vfprintf_internal+0x1d50>
         : 357   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   754db:  mov    %edx,%eax
    0.00 :   754dd:  add    $0x10,%edx
    0.00 :   754e0:  add    0x10(%rcx),%rax
    0.00 :   754e4:  mov    %edx,0x4(%rcx)
    0.00 :   754e7:  movdqa (%rax),%xmm3
    0.00 :   754eb:  movaps %xmm3,0xc0(%rsp)
    0.00 :   754f3:  jmp    768c7 <__vfprintf_internal+0x1897>
    0.00 :   754f8:  nopl   0x0(%rax,%rax,1)
         : 366   ./stdio-common/vfprintf-internal.c:1218 (discriminator 5)
    0.00 :   75500:  cmp    $0xffffffff,%eax
    0.00 :   75503:  je     75090 <__vfprintf_internal+0x60>
         : 369   ./stdio-common/vfprintf-internal.c:1218
    0.00 :   75509:  mov    $0xffffffff,%r12d
    0.00 :   7550f:  jmp    75354 <__vfprintf_internal+0x324>
    0.00 :   75514:  nopl   0x0(%rax)
         : 373   ./stdio-common/vfprintf-internal.c:1259 (discriminator 1)
    0.00 :   75518:  mov    0x1a3a21(%rip),%rax        # 218f40 <_IO_funlockfile@@GLIBC_2.2.5+0x1b6ef0>
    0.00 :   7551f:  lea    0xf0(%rsp),%rdi
    0.00 :   75527:  mov    %rax,0xf0(%rsp)
    0.00 :   7552f:  call   911c0 <__GI___libc_cleanup_push_defer>
         : 378   ./stdio-common/vfprintf-internal.c:1260 (discriminator 1)
    0.00 :   75534:  mov    0x0(%rbp),%eax
    0.00 :   75537:  and    $0x8000,%eax
    0.00 :   7553c:  jne    77590 <__vfprintf_internal+0x2560>
    0.00 :   75542:  mov    %fs:0x10,%rbx
    0.00 :   7554b:  mov    0x88(%rbp),%rdi
    0.00 :   75552:  cmp    %rbx,0x8(%rdi)
    0.00 :   75556:  je     75572 <__vfprintf_internal+0x542>
         : 386   ./stdio-common/vfprintf-internal.c:1260 (discriminator 3)
    0.00 :   75558:  mov    $0x1,%edx
    0.00 :   7555d:  lock cmpxchg %edx,(%rdi)
    0.00 :   75561:  jne    76ee0 <__vfprintf_internal+0x1eb0>
         : 390   ./stdio-common/vfprintf-internal.c:1260 (discriminator 10)
    0.00 :   75567:  mov    0x88(%rbp),%rdi
    0.00 :   7556e:  mov    %rbx,0x8(%rdi)
         : 393   ./stdio-common/vfprintf-internal.c:1260 (discriminator 11)
    0.00 :   75572:  addl   $0x1,0x4(%rdi)
         : 395   ./stdio-common/vfprintf-internal.c:1259 (discriminator 11)
    0.00 :   75576:  movb   $0x1,0xa6(%rsp)
    0.00 :   7557e:  jmp    75100 <__vfprintf_internal+0xd0>
    0.00 :   75583:  nopl   0x0(%rax,%rax,1)
         : 399   ./stdio-common/vfprintf-internal.c:1609 (discriminator 1)
    0.00 :   75588:  lea    0xf0(%rsp),%rdi
    0.00 :   75590:  call   91200 <__GI___libc_cleanup_pop_restore>
         : 402   ./stdio-common/vfprintf-internal.c:1611 (discriminator 1)
    0.00 :   75595:  jmp    75354 <__vfprintf_internal+0x324>
    0.00 :   7559a:  nopw   0x0(%rax,%rax,1)
         : 405   ./stdio-common/vfprintf-internal.c:1501 (discriminator 4)
    0.00 :   755a0:  mov    %rdx,%rbx
         : 407   ./stdio-common/vfprintf-internal.c:1500 (discriminator 4)
    0.00 :   755a3:  mov    $0x1,%r10d
         : 409   ./stdio-common/vfprintf-internal.c:1499 (discriminator 4)
    0.00 :   755a9:  xor    %edx,%edx
    0.00 :   755ab:  jmp    *%rsi
    0.00 :   755ad:  nopl   (%rax)
         : 413   ./stdio-common/vfprintf-internal.c:1555
    0.00 :   755b0:  mov    0x20(%rsp),%rsi
    0.00 :   755b5:  mov    0x4(%rsi),%eax
    0.00 :   755b8:  cmp    $0xaf,%eax
    0.00 :   755bd:  ja     76d00 <__vfprintf_internal+0x1cd0>
    0.00 :   755c3:  mov    %eax,%edx
    0.00 :   755c5:  add    $0x10,%eax
    0.00 :   755c8:  add    0x10(%rsi),%rdx
    0.00 :   755cc:  mov    %eax,0x4(%rsi)
    0.00 :   755cf:  movsd  (%rdx),%xmm0
    0.00 :   755d3:  movsd  %xmm0,0xc0(%rsp)
    0.00 :   755dc:  jmp    768c7 <__vfprintf_internal+0x1897>
    0.00 :   755e1:  nopl   0x0(%rax)
    0.00 :   755e8:  endbr64
         : 427   ./stdio-common/vfprintf-internal.c:1517 (discriminator 3)
    0.00 :   755ec:  mov    0x20(%rsp),%rsi
    0.00 :   755f1:  lea    0x110(%rsp),%rdx
    0.00 :   755f9:  movq   $0x0,0x110(%rsp)
    0.00 :   75605:  mov    (%rsi),%eax
    0.00 :   75607:  cmp    $0x2f,%eax
    0.00 :   7560a:  ja     769e0 <__vfprintf_internal+0x19b0>
         : 434   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   75610:  mov    %eax,%ecx
    0.00 :   75612:  add    $0x8,%eax
    0.00 :   75615:  add    0x10(%rsi),%rcx
    0.00 :   75619:  mov    %eax,(%rsi)
    0.00 :   7561b:  mov    (%rcx),%esi
    0.00 :   7561d:  lea    0x130(%rsp),%r15
    0.00 :   75625:  mov    %r15,%rdi
    0.00 :   75628:  call   c61e0 <wcrtomb>
    0.00 :   7562d:  mov    %rax,%r14
    0.00 :   75630:  cmp    $0xffffffffffffffff,%rax
    0.00 :   75634:  je     76728 <__vfprintf_internal+0x16f8>
         : 446   ./stdio-common/vfprintf-internal.c:1517 (discriminator 20)
    0.00 :   7563a:  mov    0x10(%rsp),%r13d
    0.00 :   7563f:  mov    0x28(%rsp),%r10d
    0.00 :   75644:  sub    %eax,%r13d
    0.00 :   75647:  test   %r10d,%r10d
    0.00 :   7564a:  jne    75655 <__vfprintf_internal+0x625>
         : 452   pad_func():
         : 453   ./stdio-common/vfprintf-internal.c:192
    0.00 :   7564c:  test   %r13d,%r13d
    0.00 :   7564f:  jg     76d39 <__vfprintf_internal+0x1d09>
         : 456   outstring_func():
         : 457   ./stdio-common/vfprintf-internal.c:239
    0.00 :   75655:  mov    0xd8(%rbp),%rax
         : 459   IO_validate_vtable():
         : 460   ./stdio-common/../libio/libioP.h:942
    0.00 :   7565c:  lea    0x1a039d(%rip),%rcx        # 215a00 <_IO_helper_jumps>
    0.00 :   75663:  mov    %rax,%rdx
    0.00 :   75666:  sub    %rcx,%rdx
         : 464   ./stdio-common/../libio/libioP.h:943
    0.00 :   75669:  cmp    %rdx,0x30(%rsp)
    0.00 :   7566e:  jbe    77251 <__vfprintf_internal+0x2221>
         : 467   outstring_func():
         : 468   ./stdio-common/vfprintf-internal.c:239
    0.00 :   75674:  mov    %r14,%rdx
    0.00 :   75677:  mov    %r15,%rsi
    0.00 :   7567a:  mov    %rbp,%rdi
    0.00 :   7567d:  call   *0x38(%rax)
    0.00 :   75680:  cmp    %rax,%r14
    0.00 :   75683:  jne    76728 <__vfprintf_internal+0x16f8>
         : 475   done_add_func():
         : 476   ./stdio-common/vfprintf-internal.c:127
    0.00 :   75689:  movslq %r12d,%rax
    0.00 :   7568c:  xor    %edx,%edx
    0.00 :   7568e:  add    %r14,%rax
    0.00 :   75691:  js     7757c <__vfprintf_internal+0x254c>
    0.00 :   75697:  cmp    %r14,%rax
    0.00 :   7569a:  jb     7757c <__vfprintf_internal+0x254c>
    0.00 :   756a0:  movslq %eax,%rcx
    0.00 :   756a3:  mov    %eax,%r12d
    0.00 :   756a6:  cmp    %rcx,%rax
    0.00 :   756a9:  mov    $0x1,%ecx
    0.00 :   756ae:  cmovne %ecx,%edx
    0.00 :   756b1:  test   %edx,%edx
    0.00 :   756b3:  jne    75860 <__vfprintf_internal+0x830>
         : 490   __vfprintf_internal():
         : 491   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   756b9:  test   %eax,%eax
    0.00 :   756bb:  js     7533d <__vfprintf_internal+0x30d>
         : 494   ./stdio-common/vfprintf-internal.c:1517 (discriminator 28)
    0.00 :   756c1:  mov    0x28(%rsp),%r9d
    0.00 :   756c6:  test   %r9d,%r9d
    0.00 :   756c9:  je     75f80 <__vfprintf_internal+0xf50>
    0.00 :   756cf:  nop
         : 499   pad_func():
         : 500   ./stdio-common/vfprintf-internal.c:192
    0.00 :   756d0:  test   %r13d,%r13d
    0.00 :   756d3:  jle    75f80 <__vfprintf_internal+0xf50>
         : 503   ./stdio-common/vfprintf-internal.c:196
    0.00 :   756d9:  movslq %r13d,%r13
    0.00 :   756dc:  mov    $0x20,%esi
    0.00 :   756e1:  mov    %rbp,%rdi
    0.00 :   756e4:  mov    %r13,%rdx
    0.00 :   756e7:  call   806a0 <_IO_padn>
         : 509   ./stdio-common/vfprintf-internal.c:200
    0.00 :   756ec:  cmp    %rax,%r13
    0.00 :   756ef:  jne    76728 <__vfprintf_internal+0x16f8>
         : 512   done_add_func():
         : 513   ./stdio-common/vfprintf-internal.c:127
    0.00 :   756f5:  add    %r12d,%r13d
    0.00 :   756f8:  mov    %r13d,%r12d
    0.00 :   756fb:  jo     75860 <__vfprintf_internal+0x830>
         : 517   __vfprintf_internal():
         : 518   ./stdio-common/vfprintf-internal.c:1564
    0.00 :   75701:  test   %r12d,%r12d
    0.00 :   75704:  jns    75f80 <__vfprintf_internal+0xf50>
    0.00 :   7570a:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   7570f:  nop
    0.00 :   75710:  endbr64
         : 524   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   75714:  mov    0x20(%rsp),%rdi
    0.00 :   75719:  mov    (%rdi),%eax
    0.00 :   7571b:  cmp    $0x2f,%eax
    0.00 :   7571e:  ja     76c18 <__vfprintf_internal+0x1be8>
    0.00 :   75724:  mov    %eax,%edx
    0.00 :   75726:  add    $0x8,%eax
    0.00 :   75729:  add    0x10(%rdi),%rdx
    0.00 :   7572d:  mov    %eax,(%rdi)
    0.00 :   7572f:  mov    (%rdx),%r15
    0.00 :   75732:  mov    %r10d,%eax
    0.00 :   75735:  xor    $0x1,%eax
    0.00 :   75738:  test   %r15,%r15
    0.00 :   7573b:  jne    758af <__vfprintf_internal+0x87f>
         : 538   ./stdio-common/vfprintf-internal.c:1517 (discriminator 36)
    0.00 :   75741:  cmp    $0xffffffff,%r14d
    0.00 :   75745:  je     76f38 <__vfprintf_internal+0x1f08>
    0.00 :   7574b:  cmp    $0x5,%r14d
    0.00 :   7574f:  jg     76f38 <__vfprintf_internal+0x1f08>
         : 543   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   75755:  xor    %eax,%eax
    0.00 :   75757:  xor    %r14d,%r14d
    0.00 :   7575a:  lea    0x162d0e(%rip),%r15        # 1d846f <dir_suffix+0x16e>
    0.00 :   75761:  jmp    758d9 <__vfprintf_internal+0x8a9>
    0.00 :   75766:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   75770:  endbr64
         : 550   ./stdio-common/vfprintf-internal.c:1569
    0.00 :   75774:  test   %r13b,%r13b
    0.00 :   75777:  jne    76a88 <__vfprintf_internal+0x1a58>
         : 553   ./stdio-common/vfprintf-internal.c:1572
    0.00 :   7577d:  mov    0x1a368c(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
         : 555   ./stdio-common/vfprintf-internal.c:1573
    0.00 :   75784:  mov    $0xffffffff,%r12d
         : 557   ./stdio-common/vfprintf-internal.c:1572
    0.00 :   7578a:  movl   $0x16,%fs:(%rax)
         : 559   ./stdio-common/vfprintf-internal.c:1574
    0.00 :   75791:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   75796:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   757a0:  endbr64
         : 563   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   757a4:  test   %r10d,%r10d
    0.00 :   757a7:  jne    755e8 <__vfprintf_internal+0x5b8>
         : 566   ./stdio-common/vfprintf-internal.c:1517 (discriminator 2)
    0.00 :   757ad:  mov    0x10(%rsp),%r13d
    0.00 :   757b2:  mov    0x28(%rsp),%r14d
    0.00 :   757b7:  sub    $0x1,%r13d
    0.00 :   757bb:  test   %r14d,%r14d
    0.00 :   757be:  je     76e97 <__vfprintf_internal+0x1e67>
         : 572   ./stdio-common/vfprintf-internal.c:1517 (discriminator 7)
    0.00 :   757c4:  mov    0x20(%rsp),%rdi
    0.00 :   757c9:  mov    (%rdi),%eax
    0.00 :   757cb:  cmp    $0x2f,%eax
    0.00 :   757ce:  ja     76d18 <__vfprintf_internal+0x1ce8>
         : 577   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   757d4:  mov    %eax,%edx
    0.00 :   757d6:  add    $0x8,%eax
    0.00 :   757d9:  add    0x10(%rdi),%rdx
    0.00 :   757dd:  mov    %eax,(%rdi)
    0.00 :   757df:  mov    (%rdx),%edx
    0.00 :   757e1:  mov    0x28(%rbp),%rax
    0.00 :   757e5:  cmp    0x30(%rbp),%rax
    0.00 :   757e9:  jae    773d1 <__vfprintf_internal+0x23a1>
         : 586   ./stdio-common/vfprintf-internal.c:1517 (discriminator 9)
    0.00 :   757ef:  lea    0x1(%rax),%rcx
    0.00 :   757f3:  mov    %rcx,0x28(%rbp)
    0.00 :   757f7:  mov    %dl,(%rax)
         : 590   ./stdio-common/vfprintf-internal.c:1517 (discriminator 12)
    0.00 :   757f9:  cmp    $0x7fffffff,%r12d
    0.00 :   75800:  je     76728 <__vfprintf_internal+0x16f8>
         : 593   ./stdio-common/vfprintf-internal.c:1517 (discriminator 14)
    0.00 :   75806:  mov    0x28(%rsp),%r11d
    0.00 :   7580b:  add    $0x1,%r12d
    0.00 :   7580f:  test   %r11d,%r11d
    0.00 :   75812:  je     75f80 <__vfprintf_internal+0xf50>
         : 598   pad_func():
         : 599   ./stdio-common/vfprintf-internal.c:192
    0.00 :   75818:  test   %r13d,%r13d
    0.00 :   7581b:  jle    75f80 <__vfprintf_internal+0xf50>
         : 602   ./stdio-common/vfprintf-internal.c:196
    0.00 :   75821:  movslq %r13d,%r14
    0.00 :   75824:  mov    $0x20,%esi
    0.00 :   75829:  mov    %rbp,%rdi
    0.00 :   7582c:  mov    %r14,%rdx
    0.00 :   7582f:  call   806a0 <_IO_padn>
         : 608   ./stdio-common/vfprintf-internal.c:200
    0.00 :   75834:  cmp    %rax,%r14
    0.00 :   75837:  jne    76728 <__vfprintf_internal+0x16f8>
         : 611   done_add_func():
         : 612   ./stdio-common/vfprintf-internal.c:127
    0.00 :   7583d:  xor    %eax,%eax
    0.00 :   7583f:  add    %r13d,%r12d
    0.00 :   75842:  js     77572 <__vfprintf_internal+0x2542>
    0.00 :   75848:  cmp    %r13d,%r12d
    0.00 :   7584b:  jb     77572 <__vfprintf_internal+0x2542>
    0.00 :   75851:  test   %eax,%eax
    0.00 :   75853:  je     75701 <__vfprintf_internal+0x6d1>
    0.00 :   75859:  nopl   0x0(%rax)
         : 621   ./stdio-common/vfprintf-internal.c:129
    0.00 :   75860:  mov    0x1a35a9(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
         : 623   ./stdio-common/vfprintf-internal.c:130
    0.00 :   75867:  mov    $0xffffffff,%r12d
         : 625   ./stdio-common/vfprintf-internal.c:129
    0.00 :   7586d:  movl   $0x4b,%fs:(%rax)
         : 627   __vfprintf_internal():
         : 628   ./stdio-common/vfprintf-internal.c:1564
    0.00 :   75874:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   75879:  nopl   0x0(%rax)
    0.00 :   75880:  endbr64
         : 632   ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75884:  mov    0x4c(%rsp),%r15d
    0.00 :   75889:  test   %r15d,%r15d
    0.00 :   7588c:  je     76bf0 <__vfprintf_internal+0x1bc0>
         : 636   ./stdio-common/vfprintf-internal.c:1516 (discriminator 243)
    0.00 :   75892:  mov    0x90(%rsp),%edi
    0.00 :   75899:  call   7d2c0 <__get_errname>
    0.00 :   7589e:  mov    %rax,%r15
         : 640   ./stdio-common/vfprintf-internal.c:1516 (discriminator 246)
    0.00 :   758a1:  mov    $0x1,%eax
    0.00 :   758a6:  test   %r15,%r15
    0.00 :   758a9:  je     77150 <__vfprintf_internal+0x2120>
         : 644   ./stdio-common/vfprintf-internal.c:1517 (discriminator 37)
    0.00 :   758af:  cmp    $0x53,%r13b
    0.00 :   758b3:  je     76ca0 <__vfprintf_internal+0x1c70>
    0.00 :   758b9:  test   %al,%al
    0.00 :   758bb:  je     76ca0 <__vfprintf_internal+0x1c70>
         : 649   ./stdio-common/vfprintf-internal.c:1517 (discriminator 40)
    0.00 :   758c1:  cmp    $0xffffffff,%r14d
    0.00 :   758c5:  je     76d29 <__vfprintf_internal+0x1cf9>
         : 652   ./stdio-common/vfprintf-internal.c:1517 (discriminator 42)
    0.00 :   758cb:  movslq %r14d,%rsi
    0.00 :   758ce:  mov    %r15,%rdi
    0.00 :   758d1:  call   28390 <*ABS*+0xa8720@plt>
    0.00 :   758d6:  mov    %rax,%r14
         : 657   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   758d9:  mov    0x10(%rsp),%r13d
    0.00 :   758de:  sub    %eax,%r13d
    0.00 :   758e1:  js     76fe0 <__vfprintf_internal+0x1fb0>
         : 661   ./stdio-common/vfprintf-internal.c:1517 (discriminator 47)
    0.00 :   758e7:  mov    0x28(%rsp),%r8d
    0.00 :   758ec:  test   %r8d,%r8d
    0.00 :   758ef:  jne    758fa <__vfprintf_internal+0x8ca>
         : 665   pad_func():
         : 666   ./stdio-common/vfprintf-internal.c:192
    0.00 :   758f1:  test   %r13d,%r13d
    0.00 :   758f4:  jne    76dfd <__vfprintf_internal+0x1dcd>
         : 669   outstring_func():
         : 670   ./stdio-common/vfprintf-internal.c:239
    0.00 :   758fa:  mov    0xd8(%rbp),%rax
         : 672   IO_validate_vtable():
         : 673   ./stdio-common/../libio/libioP.h:942
    0.00 :   75901:  lea    0x1a00f8(%rip),%rcx        # 215a00 <_IO_helper_jumps>
    0.00 :   75908:  mov    %rax,%rdx
    0.00 :   7590b:  sub    %rcx,%rdx
         : 677   ./stdio-common/../libio/libioP.h:943
    0.00 :   7590e:  cmp    %rdx,0x30(%rsp)
    0.00 :   75913:  jbe    7729c <__vfprintf_internal+0x226c>
         : 680   outstring_func():
         : 681   ./stdio-common/vfprintf-internal.c:239
    0.00 :   75919:  mov    %r14,%rdx
    0.00 :   7591c:  mov    %r15,%rsi
    0.00 :   7591f:  mov    %rbp,%rdi
    0.00 :   75922:  call   *0x38(%rax)
    0.00 :   75925:  cmp    %r14,%rax
    0.00 :   75928:  jne    76728 <__vfprintf_internal+0x16f8>
         : 688   done_add_func():
         : 689   ./stdio-common/vfprintf-internal.c:127
    0.00 :   7592e:  movslq %r12d,%rax
    0.00 :   75931:  xor    %edx,%edx
    0.00 :   75933:  add    %r14,%rax
    0.00 :   75936:  js     77537 <__vfprintf_internal+0x2507>
    0.00 :   7593c:  cmp    %r14,%rax
    0.00 :   7593f:  jb     77537 <__vfprintf_internal+0x2507>
    0.00 :   75945:  movslq %eax,%rcx
    0.00 :   75948:  mov    %eax,%r12d
    0.00 :   7594b:  cmp    %rcx,%rax
    0.00 :   7594e:  mov    $0x1,%ecx
    0.00 :   75953:  cmovne %ecx,%edx
    0.00 :   75956:  test   %edx,%edx
    0.00 :   75958:  jne    75860 <__vfprintf_internal+0x830>
         : 703   __vfprintf_internal():
         : 704   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   7595e:  test   %eax,%eax
    0.00 :   75960:  js     7533d <__vfprintf_internal+0x30d>
         : 707   ./stdio-common/vfprintf-internal.c:1517 (discriminator 55)
    0.00 :   75966:  mov    0x28(%rsp),%edi
    0.00 :   7596a:  test   %edi,%edi
    0.00 :   7596c:  je     75f80 <__vfprintf_internal+0xf50>
         : 711   pad_func():
         : 712   ./stdio-common/vfprintf-internal.c:192
    0.00 :   75972:  test   %r13d,%r13d
    0.00 :   75975:  je     75f80 <__vfprintf_internal+0xf50>
    0.00 :   7597b:  jmp    756d9 <__vfprintf_internal+0x6a9>
    0.00 :   75980:  endbr64
         : 717   __vfprintf_internal():
         : 718   ./stdio-common/vfprintf-internal.c:1486
    0.00 :   75984:  movzbl 0x1(%rbx),%r13d
    0.00 :   75989:  lea    0x1(%rbx),%rdx
    0.00 :   7598d:  lea    -0x224(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75994:  lea    -0x20(%r13),%ecx
    0.00 :   75998:  cmp    $0x5a,%cl
    0.00 :   7599b:  ja     76b60 <__vfprintf_internal+0x1b30>
         : 725   ./stdio-common/vfprintf-internal.c:1486 (discriminator 1)
    0.00 :   759a1:  movsbl %r13b,%ecx
         : 727   ./stdio-common/vfprintf-internal.c:1474 (discriminator 1)
    0.00 :   759a5:  lea    -0x23c(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
         : 729   ./stdio-common/vfprintf-internal.c:1485 (discriminator 1)
    0.00 :   759ac:  mov    $0x1,%r10d
         : 731   ./stdio-common/vfprintf-internal.c:1486 (discriminator 1)
    0.00 :   759b2:  sub    $0x20,%ecx
    0.00 :   759b5:  movslq %ecx,%rcx
    0.00 :   759b8:  movzbl (%rax,%rcx,1),%ecx
         : 735   ./stdio-common/vfprintf-internal.c:1474 (discriminator 1)
    0.00 :   759bc:  movslq (%r8,%rcx,4),%rsi
    0.00 :   759c0:  add    %rbx,%rsi
         : 738   ./stdio-common/vfprintf-internal.c:1486 (discriminator 1)
    0.00 :   759c3:  mov    %rdx,%rbx
         : 740   ./stdio-common/vfprintf-internal.c:1484 (discriminator 1)
    0.00 :   759c6:  mov    $0x1,%edx
    0.00 :   759cb:  jmp    *%rsi
    0.00 :   759cd:  nopl   (%rax)
    0.00 :   759d0:  endbr64
         : 745   ./stdio-common/vfprintf-internal.c:1479
    0.00 :   759d4:  movzbl 0x1(%rbx),%r13d
    0.00 :   759d9:  lea    0x1(%rbx),%rcx
    0.00 :   759dd:  lea    -0x274(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   759e4:  lea    -0x20(%r13),%edi
    0.00 :   759e8:  cmp    $0x5a,%dil
    0.00 :   759ec:  ja     76ba8 <__vfprintf_internal+0x1b78>
         : 752   ./stdio-common/vfprintf-internal.c:1479 (discriminator 1)
    0.00 :   759f2:  movsbl %r13b,%esi
    0.00 :   759f6:  lea    0x15b9e3(%rip),%rbx        # 1d13e0 <step3b_jumps.4>
         : 755   ./stdio-common/vfprintf-internal.c:1478 (discriminator 1)
    0.00 :   759fd:  mov    $0x1,%r10d
         : 757   ./stdio-common/vfprintf-internal.c:1479 (discriminator 1)
    0.00 :   75a03:  sub    $0x20,%esi
    0.00 :   75a06:  movslq %esi,%rsi
    0.00 :   75a09:  movzbl (%rax,%rsi,1),%esi
    0.00 :   75a0d:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   75a11:  lea    -0x2a8(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75a18:  add    %rbx,%rsi
    0.00 :   75a1b:  mov    %rcx,%rbx
    0.00 :   75a1e:  jmp    *%rsi
    0.00 :   75a20:  endbr64
         : 767   ./stdio-common/vfprintf-internal.c:1516 (discriminator 33)
    0.00 :   75a24:  movl   $0x2,0x60(%rsp)
         : 769   ./stdio-common/vfprintf-internal.c:1392 (discriminator 30)
    0.00 :   75a2c:  mov    0x20(%rsp),%rdi
    0.00 :   75a31:  mov    (%rdi),%eax
         : 772   ./stdio-common/vfprintf-internal.c:1516 (discriminator 30)
    0.00 :   75a33:  test   %r10d,%r10d
    0.00 :   75a36:  je     7604c <__vfprintf_internal+0x101c>
         : 775   ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75a3c:  cmp    $0x2f,%eax
    0.00 :   75a3f:  ja     76850 <__vfprintf_internal+0x1820>
    0.00 :   75a45:  mov    %eax,%edx
    0.00 :   75a47:  add    $0x8,%eax
    0.00 :   75a4a:  add    0x10(%rdi),%rdx
    0.00 :   75a4e:  mov    %eax,(%rdi)
    0.00 :   75a50:  movl   $0x0,0x40(%rsp)
    0.00 :   75a58:  mov    (%rdx),%r11
    0.00 :   75a5b:  xor    %r10d,%r10d
    0.00 :   75a5e:  movl   $0x0,0x58(%rsp)
         : 786   ./stdio-common/vfprintf-internal.c:1516 (discriminator 252)
    0.00 :   75a66:  cmp    $0xffffffff,%r14d
    0.00 :   75a6a:  je     76090 <__vfprintf_internal+0x1060>
         : 789   ./stdio-common/vfprintf-internal.c:1516 (discriminator 66)
    0.00 :   75a70:  test   %r14d,%r14d
    0.00 :   75a73:  je     76560 <__vfprintf_internal+0x1530>
         : 792   ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75a79:  movslq %r14d,%rax
    0.00 :   75a7c:  movb   $0x20,0x38(%rsp)
    0.00 :   75a81:  mov    %rax,0x70(%rsp)
         : 796   ./stdio-common/vfprintf-internal.c:1516 (discriminator 70)
    0.00 :   75a86:  xor    %ecx,%ecx
    0.00 :   75a88:  mov    0x60(%rsp),%edx
    0.00 :   75a8c:  cmp    $0x58,%r13b
    0.00 :   75a90:  mov    %r11,%rdi
    0.00 :   75a93:  lea    0x528(%rsp),%r14
    0.00 :   75a9b:  sete   %cl
    0.00 :   75a9e:  mov    %r10d,0x94(%rsp)
    0.00 :   75aa6:  lea    0x140(%rsp),%r15
    0.00 :   75aae:  mov    %r14,%rsi
    0.00 :   75ab1:  mov    %r11,0x88(%rsp)
    0.00 :   75ab9:  call   5a230 <_itoa_word>
    0.00 :   75abe:  mov    0x80(%rsp),%rcx
    0.00 :   75ac6:  mov    0x88(%rsp),%r11
    0.00 :   75ace:  mov    0x94(%rsp),%r10d
    0.00 :   75ad6:  mov    %rax,%r9
    0.00 :   75ad9:  test   %rcx,%rcx
    0.00 :   75adc:  je     75b19 <__vfprintf_internal+0xae9>
    0.00 :   75ade:  mov    0x50(%rsp),%eax
    0.00 :   75ae2:  test   %eax,%eax
    0.00 :   75ae4:  je     75b19 <__vfprintf_internal+0xae9>
         : 817   ./stdio-common/vfprintf-internal.c:1516 (discriminator 72)
    0.00 :   75ae6:  mov    %r9,%rsi
    0.00 :   75ae9:  mov    %r14,%rdx
    0.00 :   75aec:  mov    %r15,%rdi
    0.00 :   75aef:  mov    %r11,0x50(%rsp)
    0.00 :   75af4:  mov    0x98(%rsp),%r8
    0.00 :   75afc:  mov    %r10d,0x88(%rsp)
    0.00 :   75b04:  call   72140 <group_number>
    0.00 :   75b09:  mov    0x88(%rsp),%r10d
    0.00 :   75b11:  mov    0x50(%rsp),%r11
    0.00 :   75b16:  mov    %rax,%r9
         : 828   ./stdio-common/vfprintf-internal.c:1516 (discriminator 74)
    0.00 :   75b19:  cmpl   $0xa,0x60(%rsp)
    0.00 :   75b1e:  jne    75b4d <__vfprintf_internal+0xb1d>
    0.00 :   75b20:  mov    0x5c(%rsp),%eax
    0.00 :   75b24:  test   %eax,%eax
    0.00 :   75b26:  je     75b4d <__vfprintf_internal+0xb1d>
         : 834   ./stdio-common/vfprintf-internal.c:1516 (discriminator 75)
    0.00 :   75b28:  mov    %r9,%rdi
    0.00 :   75b2b:  mov    %r14,%rdx
    0.00 :   75b2e:  mov    %r14,%rsi
    0.00 :   75b31:  mov    %r10d,0x5c(%rsp)
    0.00 :   75b36:  mov    %r11,0x50(%rsp)
    0.00 :   75b3b:  call   72340 <_i18n_number_rewrite>
    0.00 :   75b40:  mov    0x5c(%rsp),%r10d
    0.00 :   75b45:  mov    0x50(%rsp),%r11
    0.00 :   75b4a:  mov    %rax,%r9
         : 844   ./stdio-common/vfprintf-internal.c:1516 (discriminator 77)
    0.00 :   75b4d:  mov    %r14,%r15
    0.00 :   75b50:  sub    %r9,%r15
    0.00 :   75b53:  cmp    0x70(%rsp),%r15
    0.00 :   75b58:  jge    765c0 <__vfprintf_internal+0x1590>
         : 849   ./stdio-common/vfprintf-internal.c:1516 (discriminator 84)
    0.00 :   75b5e:  mov    0x70(%rsp),%rdx
    0.00 :   75b63:  mov    $0x0,%eax
    0.00 :   75b68:  mov    0x28(%rsp),%r8d
    0.00 :   75b6d:  sub    %r15,%rdx
    0.00 :   75b70:  cmovs  %rax,%rdx
    0.00 :   75b74:  mov    %edx,%r14d
    0.00 :   75b77:  test   %r8d,%r8d
    0.00 :   75b7a:  jne    76440 <__vfprintf_internal+0x1410>
         : 858   ./stdio-common/vfprintf-internal.c:1516 (discriminator 85)
    0.00 :   75b80:  mov    0x10(%rsp),%r8d
    0.00 :   75b85:  sub    %r15d,%r8d
    0.00 :   75b88:  sub    %edx,%r8d
    0.00 :   75b8b:  test   %r11,%r11
    0.00 :   75b8e:  je     75baf <__vfprintf_internal+0xb7f>
         : 864   ./stdio-common/vfprintf-internal.c:1516 (discriminator 87)
    0.00 :   75b90:  mov    0x4c(%rsp),%edi
    0.00 :   75b94:  test   %edi,%edi
    0.00 :   75b96:  je     75baf <__vfprintf_internal+0xb7f>
         : 868   ./stdio-common/vfprintf-internal.c:1516 (discriminator 89)
    0.00 :   75b98:  movzbl 0x60(%rsp),%ecx
    0.00 :   75b9d:  mov    $0x10004,%eax
    0.00 :   75ba2:  lea    -0x2(%r8),%edx
    0.00 :   75ba6:  shr    %cl,%rax
    0.00 :   75ba9:  test   $0x1,%al
    0.00 :   75bab:  cmovne %edx,%r8d
         : 875   ./stdio-common/vfprintf-internal.c:1516 (discriminator 93)
    0.00 :   75baf:  mov    0x58(%rsp),%eax
    0.00 :   75bb3:  or     %r10d,%eax
    0.00 :   75bb6:  or     0x40(%rsp),%eax
    0.00 :   75bba:  je     76660 <__vfprintf_internal+0x1630>
         : 880   ./stdio-common/vfprintf-internal.c:1516 (discriminator 94)
    0.00 :   75bc0:  sub    $0x1,%r8d
    0.00 :   75bc4:  cmpb   $0x20,0x38(%rsp)
    0.00 :   75bc9:  je     77561 <__vfprintf_internal+0x2531>
         : 884   ./stdio-common/vfprintf-internal.c:1516 (discriminator 101)
    0.00 :   75bcf:  test   %r10d,%r10d
    0.00 :   75bd2:  je     767d0 <__vfprintf_internal+0x17a0>
         : 887   ./stdio-common/vfprintf-internal.c:1516 (discriminator 102)
    0.00 :   75bd8:  mov    0x28(%rbp),%rax
    0.00 :   75bdc:  cmp    0x30(%rbp),%rax
    0.00 :   75be0:  jae    771fe <__vfprintf_internal+0x21ce>
         : 891   ./stdio-common/vfprintf-internal.c:1516 (discriminator 105)
    0.00 :   75be6:  lea    0x1(%rax),%rdx
    0.00 :   75bea:  mov    %rdx,0x28(%rbp)
    0.00 :   75bee:  movb   $0x2d,(%rax)
         : 895   ./stdio-common/vfprintf-internal.c:1516 (discriminator 128)
    0.00 :   75bf1:  cmp    $0x7fffffff,%r12d
    0.00 :   75bf8:  je     76728 <__vfprintf_internal+0x16f8>
         : 898   ./stdio-common/vfprintf-internal.c:1516 (discriminator 130)
    0.00 :   75bfe:  add    $0x1,%r12d
         : 900   ./stdio-common/vfprintf-internal.c:1516 (discriminator 131)
    0.00 :   75c02:  test   %r11,%r11
    0.00 :   75c05:  je     75c70 <__vfprintf_internal+0xc40>
    0.00 :   75c07:  mov    0x4c(%rsp),%edx
    0.00 :   75c0b:  test   %edx,%edx
    0.00 :   75c0d:  je     75c70 <__vfprintf_internal+0xc40>
         : 906   ./stdio-common/vfprintf-internal.c:1516 (discriminator 134)
    0.00 :   75c0f:  mov    0x60(%rsp),%edx
    0.00 :   75c13:  mov    $0x10004,%eax
    0.00 :   75c18:  bt     %rdx,%rax
    0.00 :   75c1c:  jae    75c70 <__vfprintf_internal+0xc40>
         : 911   ./stdio-common/vfprintf-internal.c:1516 (discriminator 136)
    0.00 :   75c1e:  mov    0x28(%rbp),%rax
    0.00 :   75c22:  cmp    0x30(%rbp),%rax
    0.00 :   75c26:  jae    76f4f <__vfprintf_internal+0x1f1f>
         : 915   ./stdio-common/vfprintf-internal.c:1516 (discriminator 139)
    0.00 :   75c2c:  lea    0x1(%rax),%rdx
    0.00 :   75c30:  mov    %rdx,0x28(%rbp)
    0.00 :   75c34:  movb   $0x30,(%rax)
         : 919   ./stdio-common/vfprintf-internal.c:1516 (discriminator 142)
    0.00 :   75c37:  cmp    $0x7fffffff,%r12d
    0.00 :   75c3e:  je     76728 <__vfprintf_internal+0x16f8>
         : 922   ./stdio-common/vfprintf-internal.c:1516 (discriminator 144)
    0.00 :   75c44:  mov    0x28(%rbp),%rax
    0.00 :   75c48:  cmp    0x30(%rbp),%rax
    0.00 :   75c4c:  jae    77412 <__vfprintf_internal+0x23e2>
         : 926   ./stdio-common/vfprintf-internal.c:1516 (discriminator 146)
    0.00 :   75c52:  lea    0x1(%rax),%rdx
    0.00 :   75c56:  mov    %rdx,0x28(%rbp)
    0.00 :   75c5a:  mov    %r13b,(%rax)
         : 930   ./stdio-common/vfprintf-internal.c:1516 (discriminator 149)
    0.00 :   75c5d:  cmp    $0x7ffffffe,%r12d
    0.00 :   75c64:  je     76728 <__vfprintf_internal+0x16f8>
         : 933   ./stdio-common/vfprintf-internal.c:1516 (discriminator 151)
    0.00 :   75c6a:  add    $0x2,%r12d
    0.00 :   75c6e:  xchg   %ax,%ax
         : 936   ./stdio-common/vfprintf-internal.c:1516 (discriminator 152)
    0.00 :   75c70:  lea    (%r8,%r14,1),%r13d
         : 938   pad_func():
         : 939   ./stdio-common/vfprintf-internal.c:192 (discriminator 152)
    0.00 :   75c74:  test   %r13d,%r13d
    0.00 :   75c77:  jg     76780 <__vfprintf_internal+0x1750>
         : 942   outstring_func():
         : 943   ./stdio-common/vfprintf-internal.c:239 (discriminator 154)
    0.00 :   75c7d:  mov    0xd8(%rbp),%r13
         : 945   IO_validate_vtable():
         : 946   ./stdio-common/../libio/libioP.h:942 (discriminator 154)
    0.00 :   75c84:  lea    0x19fd75(%rip),%rsi        # 215a00 <_IO_helper_jumps>
    0.00 :   75c8b:  mov    %r13,%rax
    0.00 :   75c8e:  sub    %rsi,%rax
         : 950   ./stdio-common/../libio/libioP.h:943 (discriminator 154)
    0.00 :   75c91:  cmp    %rax,0x30(%rsp)
    0.00 :   75c96:  jbe    771d1 <__vfprintf_internal+0x21a1>
         : 953   outstring_func():
         : 954   ./stdio-common/vfprintf-internal.c:239
    0.00 :   75c9c:  mov    %r15,%rdx
    0.00 :   75c9f:  mov    %r9,%rsi
    0.00 :   75ca2:  mov    %rbp,%rdi
    0.00 :   75ca5:  call   *0x38(%r13)
    0.00 :   75ca9:  cmp    %rax,%r15
    0.00 :   75cac:  jne    76728 <__vfprintf_internal+0x16f8>
         : 961   done_add_func():
         : 962   ./stdio-common/vfprintf-internal.c:127
    0.00 :   75cb2:  movslq %r12d,%rax
    0.00 :   75cb5:  xor    %edx,%edx
    0.00 :   75cb7:  add    %r15,%rax
    0.00 :   75cba:  js     77028 <__vfprintf_internal+0x1ff8>
    0.00 :   75cc0:  cmp    %r15,%rax
    0.00 :   75cc3:  jb     77028 <__vfprintf_internal+0x1ff8>
    0.00 :   75cc9:  movslq %eax,%rcx
    0.00 :   75ccc:  mov    %eax,%r12d
    0.00 :   75ccf:  cmp    %rcx,%rax
    0.00 :   75cd2:  mov    $0x1,%ecx
    0.00 :   75cd7:  cmovne %ecx,%edx
    0.00 :   75cda:  test   %edx,%edx
    0.00 :   75cdc:  jne    75860 <__vfprintf_internal+0x830>
         : 976   __vfprintf_internal():
         : 977   ./stdio-common/vfprintf-internal.c:1517
    0.00 :   75ce2:  test   %eax,%eax
    0.00 :   75ce4:  jns    75f80 <__vfprintf_internal+0xf50>
    0.00 :   75cea:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   75cef:  nop
    0.00 :   75cf0:  endbr64
         : 983   ./stdio-common/vfprintf-internal.c:1346
    0.00 :   75cf4:  cmpq   $0xffffffffffffffff,0x80(%rsp)
    0.00 :   75cfd:  je     7717a <__vfprintf_internal+0x214a>
         : 986   ./stdio-common/vfprintf-internal.c:1365
    0.00 :   75d03:  movzbl 0x1(%rbx),%r13d
    0.00 :   75d08:  lea    0x1(%rbx),%rcx
    0.00 :   75d0c:  lea    -0x5a3(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75d13:  lea    -0x20(%r13),%edi
    0.00 :   75d17:  cmp    $0x5a,%dil
    0.00 :   75d1b:  ja     76b88 <__vfprintf_internal+0x1b58>
         : 993   ./stdio-common/vfprintf-internal.c:1365 (discriminator 1)
    0.00 :   75d21:  movsbl %r13b,%esi
         : 995   ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   75d25:  lea    0x15b934(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 997   ./stdio-common/vfprintf-internal.c:1344 (discriminator 1)
    0.00 :   75d2c:  movl   $0x1,0x50(%rsp)
         : 999   ./stdio-common/vfprintf-internal.c:1365 (discriminator 1)
    0.00 :   75d34:  sub    $0x20,%esi
    0.00 :   75d37:  movslq %esi,%rsi
    0.00 :   75d3a:  movzbl (%rax,%rsi,1),%esi
         : 1003  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   75d3e:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   75d42:  lea    -0x5d9(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75d49:  add    %rbx,%rsi
         : 1007  ./stdio-common/vfprintf-internal.c:1365 (discriminator 1)
    0.00 :   75d4c:  mov    %rcx,%rbx
    0.00 :   75d4f:  jmp    *%rsi
    0.00 :   75d51:  nopl   0x0(%rax)
    0.00 :   75d58:  endbr64
         : 1012  ./stdio-common/vfprintf-internal.c:1334
    0.00 :   75d5c:  movzbl 0x1(%rbx),%r13d
    0.00 :   75d61:  lea    0x1(%rbx),%rcx
    0.00 :   75d65:  lea    -0x5fc(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75d6c:  lea    -0x20(%r13),%edi
    0.00 :   75d70:  cmp    $0x5a,%dil
    0.00 :   75d74:  ja     76b98 <__vfprintf_internal+0x1b68>
         : 1019  ./stdio-common/vfprintf-internal.c:1334 (discriminator 1)
    0.00 :   75d7a:  movsbl %r13b,%esi
         : 1021  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   75d7e:  lea    0x15b8db(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 1023  ./stdio-common/vfprintf-internal.c:1333 (discriminator 1)
    0.00 :   75d85:  movl   $0x1,0x4c(%rsp)
         : 1025  ./stdio-common/vfprintf-internal.c:1334 (discriminator 1)
    0.00 :   75d8d:  sub    $0x20,%esi
    0.00 :   75d90:  movslq %esi,%rsi
    0.00 :   75d93:  movzbl (%rax,%rsi,1),%esi
         : 1029  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   75d97:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   75d9b:  lea    -0x632(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75da2:  add    %rbx,%rsi
         : 1033  ./stdio-common/vfprintf-internal.c:1334 (discriminator 1)
    0.00 :   75da5:  mov    %rcx,%rbx
    0.00 :   75da8:  jmp    *%rsi
    0.00 :   75daa:  nopw   0x0(%rax,%rax,1)
    0.00 :   75db0:  endbr64
         : 1038  ./stdio-common/vfprintf-internal.c:1329
    0.00 :   75db4:  movzbl 0x1(%rbx),%r13d
    0.00 :   75db9:  lea    0x1(%rbx),%rcx
    0.00 :   75dbd:  lea    -0x654(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75dc4:  lea    -0x20(%r13),%edi
    0.00 :   75dc8:  cmp    $0x5a,%dil
    0.00 :   75dcc:  ja     75df1 <__vfprintf_internal+0xdc1>
         : 1045  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   75dce:  movsbl %r13b,%esi
    0.00 :   75dd2:  lea    0x15b887(%rip),%rbx        # 1d1660 <step0_jumps.9>
    0.00 :   75dd9:  sub    $0x20,%esi
    0.00 :   75ddc:  movslq %esi,%rsi
    0.00 :   75ddf:  movzbl (%rax,%rsi,1),%esi
    0.00 :   75de3:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   75de7:  lea    -0x67e(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75dee:  add    %rbx,%rsi
         : 1054  ./stdio-common/vfprintf-internal.c:1328 (discriminator 4)
    0.00 :   75df1:  movb   $0x20,0x38(%rsp)
         : 1056  ./stdio-common/vfprintf-internal.c:1329 (discriminator 4)
    0.00 :   75df6:  mov    %rcx,%rbx
         : 1058  ./stdio-common/vfprintf-internal.c:1327 (discriminator 4)
    0.00 :   75df9:  movl   $0x1,0x28(%rsp)
    0.00 :   75e01:  jmp    *%rsi
    0.00 :   75e03:  nopl   0x0(%rax,%rax,1)
    0.00 :   75e08:  endbr64
         : 1063  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75e0c:  mov    0xa8(%rsp),%eax
    0.00 :   75e13:  test   %eax,%eax
    0.00 :   75e15:  je     75e26 <__vfprintf_internal+0xdf6>
         : 1067  ./stdio-common/vfprintf-internal.c:1516 (discriminator 223)
    0.00 :   75e17:  mov    0xa0(%rsp),%eax
    0.00 :   75e1e:  test   %eax,%eax
    0.00 :   75e20:  je     76eea <__vfprintf_internal+0x1eba>
         : 1071  ./stdio-common/vfprintf-internal.c:1516 (discriminator 229)
    0.00 :   75e26:  mov    0x20(%rsp),%rsi
    0.00 :   75e2b:  mov    (%rsi),%eax
    0.00 :   75e2d:  cmp    $0x2f,%eax
    0.00 :   75e30:  ja     76c50 <__vfprintf_internal+0x1c20>
         : 1076  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75e36:  mov    %eax,%edx
    0.00 :   75e38:  add    $0x8,%eax
    0.00 :   75e3b:  add    0x10(%rsi),%rdx
    0.00 :   75e3f:  mov    %eax,(%rsi)
    0.00 :   75e41:  mov    (%rdx),%rax
    0.00 :   75e44:  test   %r10d,%r10d
    0.00 :   75e47:  je     76c30 <__vfprintf_internal+0x1c00>
         : 1084  ./stdio-common/vfprintf-internal.c:1516 (discriminator 233)
    0.00 :   75e4d:  movslq %r12d,%rdx
    0.00 :   75e50:  mov    %rdx,(%rax)
    0.00 :   75e53:  jmp    75f80 <__vfprintf_internal+0xf50>
    0.00 :   75e58:  nopl   0x0(%rax,%rax,1)
    0.00 :   75e60:  endbr64
         : 1090  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75e64:  mov    0x20(%rsp),%rdi
    0.00 :   75e69:  mov    (%rdi),%eax
    0.00 :   75e6b:  cmp    $0x2f,%eax
    0.00 :   75e6e:  ja     76bc8 <__vfprintf_internal+0x1b98>
    0.00 :   75e74:  mov    %eax,%edx
    0.00 :   75e76:  add    $0x8,%eax
    0.00 :   75e79:  add    0x10(%rdi),%rdx
    0.00 :   75e7d:  mov    %eax,(%rdi)
    0.00 :   75e7f:  mov    (%rdx),%r10
    0.00 :   75e82:  test   %r10,%r10
    0.00 :   75e85:  je     76c83 <__vfprintf_internal+0x1c53>
         : 1102  ./stdio-common/vfprintf-internal.c:1516 (discriminator 217)
    0.00 :   75e8b:  mov    %r10,%r11
    0.00 :   75e8e:  movl   $0x0,0x50(%rsp)
    0.00 :   75e96:  xor    %r10d,%r10d
    0.00 :   75e99:  mov    $0x78,%r13d
    0.00 :   75e9f:  movl   $0x1,0x4c(%rsp)
    0.00 :   75ea7:  movl   $0x10,0x60(%rsp)
    0.00 :   75eaf:  jmp    75a66 <__vfprintf_internal+0xa36>
    0.00 :   75eb4:  nopl   0x0(%rax)
    0.00 :   75eb8:  endbr64
         : 1112  ./stdio-common/vfprintf-internal.c:1422
    0.00 :   75ebc:  movzbl 0x1(%rbx),%esi
         : 1114  ./stdio-common/vfprintf-internal.c:1421
    0.00 :   75ec0:  lea    0x1(%rbx),%rcx
         : 1116  ./stdio-common/vfprintf-internal.c:1422
    0.00 :   75ec4:  cmp    $0x2a,%sil
    0.00 :   75ec8:  je     77088 <__vfprintf_internal+0x2058>
         : 1119  ./stdio-common/vfprintf-internal.c:1448
    0.00 :   75ece:  lea    -0x30(%rsi),%r14d
    0.00 :   75ed2:  cmp    $0x9,%r14d
    0.00 :   75ed6:  jbe    76e40 <__vfprintf_internal+0x1e10>
         : 1123  ./stdio-common/vfprintf-internal.c:1463
    0.00 :   75edc:  movzbl (%rcx),%r13d
    0.00 :   75ee0:  mov    %rcx,%rbx
         : 1126  ./stdio-common/vfprintf-internal.c:1462
    0.00 :   75ee3:  xor    %r14d,%r14d
         : 1128  ./stdio-common/vfprintf-internal.c:1463
    0.00 :   75ee6:  lea    -0x20(%r13),%ecx
    0.00 :   75eea:  cmp    $0x5a,%cl
    0.00 :   75eed:  ja     75770 <__vfprintf_internal+0x740>
         : 1132  ./stdio-common/vfprintf-internal.c:1463 (discriminator 1)
    0.00 :   75ef3:  movsbl %r13b,%ecx
    0.00 :   75ef7:  lea    0x15b662(%rip),%rsi        # 1d1560 <step2_jumps.7>
    0.00 :   75efe:  sub    $0x20,%ecx
    0.00 :   75f01:  movslq %ecx,%rcx
    0.00 :   75f04:  movzbl (%rax,%rcx,1),%ecx
    0.00 :   75f08:  movslq (%rsi,%rcx,4),%rsi
    0.00 :   75f0c:  lea    -0x7a3(%rip),%rcx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   75f13:  add    %rcx,%rsi
    0.00 :   75f16:  jmp    *%rsi
    0.00 :   75f18:  nopl   0x0(%rax,%rax,1)
    0.00 :   75f20:  endbr64
         : 1144  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   75f24:  test   %r10d,%r10d
    0.00 :   75f27:  je     76aa8 <__vfprintf_internal+0x1a78>
    0.00 :   75f2d:  mov    0x20(%rsp),%rdi
    0.00 :   75f32:  mov    (%rdi),%eax
    0.00 :   75f34:  cmp    $0x2f,%eax
    0.00 :   75f37:  ja     76da6 <__vfprintf_internal+0x1d76>
    0.00 :   75f3d:  mov    %eax,%edx
    0.00 :   75f3f:  add    $0x8,%eax
    0.00 :   75f42:  add    0x10(%rdi),%rdx
    0.00 :   75f46:  mov    %eax,(%rdi)
    0.00 :   75f48:  mov    (%rdx),%r10
    0.00 :   75f4b:  jmp    76ad0 <__vfprintf_internal+0x1aa0>
    0.00 :   75f50:  endbr64
    0.00 :   75f54:  mov    0x28(%rbp),%rax
    0.00 :   75f58:  cmp    0x30(%rbp),%rax
    0.00 :   75f5c:  jae    77360 <__vfprintf_internal+0x2330>
         : 1161  ./stdio-common/vfprintf-internal.c:1516 (discriminator 2)
    0.00 :   75f62:  lea    0x1(%rax),%rdx
    0.00 :   75f66:  mov    %rdx,0x28(%rbp)
    0.00 :   75f6a:  movb   $0x25,(%rax)
         : 1165  ./stdio-common/vfprintf-internal.c:1516 (discriminator 5)
    0.00 :   75f6d:  cmp    $0x7fffffff,%r12d
    0.00 :   75f74:  je     76728 <__vfprintf_internal+0x16f8>
         : 1168  ./stdio-common/vfprintf-internal.c:1516 (discriminator 7)
    0.00 :   75f7a:  add    $0x1,%r12d
    0.00 :   75f7e:  xchg   %ax,%ax
         : 1171  ./stdio-common/vfprintf-internal.c:1589
    0.00 :   75f80:  lea    0x1(%rbx),%r15
         : 1173  __find_specmb():
         : 1174  ./stdio-common/printf-parse.h:111
    0.00 :   75f84:  mov    $0x25,%esi
         : 1176  __vfprintf_internal():
         : 1177  ./stdio-common/vfprintf-internal.c:1583
    0.00 :   75f89:  addl   $0x1,0x78(%rsp)
         : 1179  __find_specmb():
         : 1180  ./stdio-common/printf-parse.h:111
    0.00 :   75f8e:  mov    %r15,%rdi
    0.00 :   75f91:  call   284d0 <*ABS*+0xab010@plt>
         : 1183  outstring_func():
         : 1184  ./stdio-common/vfprintf-internal.c:239
    0.00 :   75f96:  mov    0xd8(%rbp),%rbx
         : 1186  IO_validate_vtable():
         : 1187  ./stdio-common/../libio/libioP.h:942
    0.00 :   75f9d:  lea    0x19fa5c(%rip),%rdi        # 215a00 <_IO_helper_jumps>
         : 1189  __vfprintf_internal():
         : 1190  ./stdio-common/vfprintf-internal.c:1593
    0.00 :   75fa4:  mov    %rax,%r14
         : 1192  __find_specmb():
         : 1193  ./stdio-common/printf-parse.h:111
    0.00 :   75fa7:  mov    %rax,%r13
         : 1195  IO_validate_vtable():
         : 1196  ./stdio-common/../libio/libioP.h:942
    0.00 :   75faa:  mov    %rbx,%rax
         : 1198  __vfprintf_internal():
         : 1199  ./stdio-common/vfprintf-internal.c:1593
    0.00 :   75fad:  sub    %r15,%r14
         : 1201  IO_validate_vtable():
         : 1202  ./stdio-common/../libio/libioP.h:942
    0.00 :   75fb0:  sub    %rdi,%rax
         : 1204  ./stdio-common/../libio/libioP.h:943
    0.00 :   75fb3:  cmp    %rax,0x30(%rsp)
    0.00 :   75fb8:  jbe    76770 <__vfprintf_internal+0x1740>
         : 1207  outstring_func():
         : 1208  ./stdio-common/vfprintf-internal.c:239
    0.00 :   75fbe:  mov    %r14,%rdx
    0.00 :   75fc1:  mov    %r15,%rsi
    0.00 :   75fc4:  mov    %rbp,%rdi
    0.00 :   75fc7:  call   *0x38(%rbx)
    0.00 :   75fca:  cmp    %r14,%rax
    0.00 :   75fcd:  jne    76728 <__vfprintf_internal+0x16f8>
         : 1215  done_add_func():
         : 1216  ./stdio-common/vfprintf-internal.c:127
    0.00 :   75fd3:  movslq %r12d,%rax
    0.00 :   75fd6:  xor    %edx,%edx
    0.00 :   75fd8:  add    %r14,%rax
    0.00 :   75fdb:  js     77500 <__vfprintf_internal+0x24d0>
    0.00 :   75fe1:  cmp    %r14,%rax
    0.00 :   75fe4:  jb     77500 <__vfprintf_internal+0x24d0>
    0.00 :   75fea:  movslq %eax,%rcx
    0.00 :   75fed:  mov    %eax,%r12d
    0.00 :   75ff0:  cmp    %rcx,%rax
    0.00 :   75ff3:  mov    $0x1,%ecx
    0.00 :   75ff8:  cmovne %ecx,%edx
    0.00 :   75ffb:  test   %edx,%edx
    0.00 :   75ffd:  jne    75860 <__vfprintf_internal+0x830>
         : 1230  __vfprintf_internal():
         : 1231  ./stdio-common/vfprintf-internal.c:1593
    0.00 :   76003:  test   %eax,%eax
    0.00 :   76005:  js     7533d <__vfprintf_internal+0x30d>
         : 1234  ./stdio-common/vfprintf-internal.c:1595 (discriminator 2)
    0.00 :   7600b:  cmpb   $0x0,0x0(%r13)
    0.00 :   76010:  jne    75210 <__vfprintf_internal+0x1e0>
    0.00 :   76016:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   7601b:  nopl   0x0(%rax,%rax,1)
    0.00 :   76020:  endbr64
         : 1240  ./stdio-common/vfprintf-internal.c:1491
    0.00 :   76024:  jmp    753b4 <__vfprintf_internal+0x384>
    0.00 :   76029:  nopl   0x0(%rax)
    0.00 :   76030:  endbr64
         : 1244  ./stdio-common/vfprintf-internal.c:1392 (discriminator 31)
    0.00 :   76034:  mov    0x20(%rsp),%rdi
         : 1246  ./stdio-common/vfprintf-internal.c:1516 (discriminator 31)
    0.00 :   76039:  movl   $0x8,0x60(%rsp)
         : 1248  ./stdio-common/vfprintf-internal.c:1392 (discriminator 31)
    0.00 :   76041:  mov    (%rdi),%eax
         : 1250  ./stdio-common/vfprintf-internal.c:1516 (discriminator 31)
    0.00 :   76043:  test   %r10d,%r10d
    0.00 :   76046:  jne    75a3c <__vfprintf_internal+0xa0c>
         : 1253  ./stdio-common/vfprintf-internal.c:1516 (discriminator 54)
    0.00 :   7604c:  test   %r11d,%r11d
    0.00 :   7604f:  je     76818 <__vfprintf_internal+0x17e8>
         : 1256  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76055:  cmp    $0x2f,%eax
    0.00 :   76058:  ja     76b70 <__vfprintf_internal+0x1b40>
    0.00 :   7605e:  mov    %eax,%edx
    0.00 :   76060:  add    $0x8,%eax
    0.00 :   76063:  add    0x10(%rdi),%rdx
    0.00 :   76067:  mov    %eax,(%rdi)
    0.00 :   76069:  movl   $0x0,0x40(%rsp)
    0.00 :   76071:  movzbl (%rdx),%r11d
    0.00 :   76075:  movl   $0x0,0x58(%rsp)
    0.00 :   7607d:  cmp    $0xffffffff,%r14d
    0.00 :   76081:  jne    75a70 <__vfprintf_internal+0xa40>
    0.00 :   76087:  nopw   0x0(%rax,%rax,1)
    0.00 :   76090:  movq   $0x1,0x70(%rsp)
    0.00 :   76099:  jmp    75a86 <__vfprintf_internal+0xa56>
    0.00 :   7609e:  xchg   %ax,%ax
    0.00 :   760a0:  endbr64
    0.00 :   760a4:  movl   $0xa,0x60(%rsp)
    0.00 :   760ac:  jmp    75a2c <__vfprintf_internal+0x9fc>
    0.00 :   760b1:  nopl   0x0(%rax)
    0.00 :   760b8:  endbr64
         : 1277  ./stdio-common/vfprintf-internal.c:1516 (discriminator 32)
    0.00 :   760bc:  movl   $0x10,0x60(%rsp)
    0.00 :   760c4:  jmp    75a2c <__vfprintf_internal+0x9fc>
    0.00 :   760c9:  nopl   0x0(%rax)
    0.00 :   760d0:  endbr64
         : 1282  ./stdio-common/vfprintf-internal.c:1323
    0.00 :   760d4:  movzbl 0x1(%rbx),%r13d
    0.00 :   760d9:  lea    0x1(%rbx),%rcx
    0.00 :   760dd:  lea    -0x974(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   760e4:  lea    -0x20(%r13),%edi
    0.00 :   760e8:  cmp    $0x5a,%dil
    0.00 :   760ec:  ja     76bb8 <__vfprintf_internal+0x1b88>
         : 1289  ./stdio-common/vfprintf-internal.c:1323 (discriminator 1)
    0.00 :   760f2:  movsbl %r13b,%esi
         : 1291  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   760f6:  lea    0x15b563(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 1293  ./stdio-common/vfprintf-internal.c:1322 (discriminator 1)
    0.00 :   760fd:  movl   $0x1,0x40(%rsp)
         : 1295  ./stdio-common/vfprintf-internal.c:1323 (discriminator 1)
    0.00 :   76105:  sub    $0x20,%esi
    0.00 :   76108:  movslq %esi,%rsi
    0.00 :   7610b:  movzbl (%rax,%rsi,1),%esi
         : 1299  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   7610f:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   76113:  lea    -0x9aa(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   7611a:  add    %rbx,%rsi
         : 1303  ./stdio-common/vfprintf-internal.c:1323 (discriminator 1)
    0.00 :   7611d:  mov    %rcx,%rbx
    0.00 :   76120:  jmp    *%rsi
    0.00 :   76122:  nopw   0x0(%rax,%rax,1)
    0.00 :   76128:  endbr64
         : 1308  ./stdio-common/vfprintf-internal.c:1318
    0.00 :   7612c:  movzbl 0x1(%rbx),%r13d
    0.00 :   76131:  lea    0x1(%rbx),%rcx
    0.00 :   76135:  lea    -0x20(%r13),%esi
    0.00 :   76139:  cmp    $0x5a,%sil
    0.00 :   7613d:  jbe    76b28 <__vfprintf_internal+0x1af8>
    0.00 :   76143:  lea    -0x9da(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
         : 1315  ./stdio-common/vfprintf-internal.c:1317
    0.00 :   7614a:  movl   $0x1,0x58(%rsp)
         : 1317  ./stdio-common/vfprintf-internal.c:1318
    0.00 :   76152:  mov    %rcx,%rbx
    0.00 :   76155:  jmp    *%rsi
    0.00 :   76157:  nopw   0x0(%rax,%rax,1)
    0.00 :   76160:  endbr64
         : 1322  ./stdio-common/vfprintf-internal.c:1474
    0.00 :   76164:  movzbl 0x1(%rbx),%r13d
    0.00 :   76169:  lea    0x1(%rbx),%rcx
    0.00 :   7616d:  lea    -0xa04(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76174:  lea    -0x20(%r13),%edi
    0.00 :   76178:  cmp    $0x5a,%dil
    0.00 :   7617c:  ja     7619a <__vfprintf_internal+0x116a>
         : 1329  ./stdio-common/vfprintf-internal.c:1474 (discriminator 1)
    0.00 :   7617e:  movsbl %r13b,%esi
    0.00 :   76182:  lea    -0xa19(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76189:  sub    $0x20,%esi
    0.00 :   7618c:  movslq %esi,%rsi
    0.00 :   7618f:  movzbl (%rax,%rsi,1),%esi
    0.00 :   76193:  movslq (%r8,%rsi,4),%rsi
    0.00 :   76197:  add    %rbx,%rsi
         : 1337  ./stdio-common/vfprintf-internal.c:1474 (discriminator 4)
    0.00 :   7619a:  mov    %rcx,%rbx
         : 1339  ./stdio-common/vfprintf-internal.c:1472 (discriminator 4)
    0.00 :   7619d:  xor    %r15d,%r15d
         : 1341  ./stdio-common/vfprintf-internal.c:1473 (discriminator 4)
    0.00 :   761a0:  mov    $0x1,%r11d
    0.00 :   761a6:  jmp    *%rsi
    0.00 :   761a8:  nopl   0x0(%rax,%rax,1)
    0.00 :   761b0:  endbr64
         : 1346  ./stdio-common/vfprintf-internal.c:1339
    0.00 :   761b4:  mov    0x28(%rsp),%ecx
    0.00 :   761b8:  movzbl 0x38(%rsp),%esi
         : 1349  ./stdio-common/vfprintf-internal.c:1340
    0.00 :   761bd:  movzbl 0x1(%rbx),%r13d
         : 1351  ./stdio-common/vfprintf-internal.c:1339
    0.00 :   761c2:  test   %ecx,%ecx
    0.00 :   761c4:  mov    $0x30,%ecx
    0.00 :   761c9:  cmove  %ecx,%esi
         : 1355  ./stdio-common/vfprintf-internal.c:1340
    0.00 :   761cc:  lea    -0x20(%r13),%edi
    0.00 :   761d0:  lea    0x1(%rbx),%rcx
         : 1358  ./stdio-common/vfprintf-internal.c:1339
    0.00 :   761d4:  mov    %sil,0x38(%rsp)
         : 1360  ./stdio-common/vfprintf-internal.c:1340
    0.00 :   761d9:  lea    -0xa70(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   761e0:  cmp    $0x5a,%dil
    0.00 :   761e4:  ja     76891 <__vfprintf_internal+0x1861>
         : 1364  ./stdio-common/vfprintf-internal.c:1340 (discriminator 1)
    0.00 :   761ea:  movsbl %r13b,%esi
         : 1366  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   761ee:  lea    0x15b46b(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 1368  ./stdio-common/vfprintf-internal.c:1340 (discriminator 1)
    0.00 :   761f5:  sub    $0x20,%esi
    0.00 :   761f8:  movslq %esi,%rsi
    0.00 :   761fb:  movzbl (%rax,%rsi,1),%esi
         : 1372  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   761ff:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   76203:  lea    -0xa9a(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   7620a:  add    %rbx,%rsi
         : 1376  ./stdio-common/vfprintf-internal.c:1418 (discriminator 1)
    0.00 :   7620d:  mov    %rcx,%rbx
    0.00 :   76210:  jmp    *%rsi
    0.00 :   76212:  nopw   0x0(%rax,%rax,1)
    0.00 :   76218:  endbr64
         : 1381  ./stdio-common/vfprintf-internal.c:1377
    0.00 :   7621c:  movzbl 0x1(%rbx),%esi
         : 1383  ./stdio-common/vfprintf-internal.c:1376
    0.00 :   76220:  lea    0x1(%rbx),%rdi
    0.00 :   76224:  mov    %rdi,0x70(%rsp)
         : 1386  ./stdio-common/vfprintf-internal.c:1377
    0.00 :   76229:  sub    $0x30,%esi
    0.00 :   7622c:  cmp    $0x9,%esi
    0.00 :   7622f:  jbe    76a10 <__vfprintf_internal+0x19e0>
         : 1390  ./stdio-common/vfprintf-internal.c:1392
    0.00 :   76235:  mov    0x20(%rsp),%rsi
    0.00 :   7623a:  mov    (%rsi),%ecx
    0.00 :   7623c:  cmp    $0x2f,%ecx
    0.00 :   7623f:  jbe    76c70 <__vfprintf_internal+0x1c40>
    0.00 :   76245:  mov    %rsi,%rdi
    0.00 :   76248:  mov    0x8(%rsi),%rsi
    0.00 :   7624c:  lea    0x8(%rsi),%rcx
    0.00 :   76250:  mov    %rcx,0x8(%rdi)
    0.00 :   76254:  mov    (%rsi),%edi
    0.00 :   76256:  mov    %edi,0x10(%rsp)
         : 1401  ./stdio-common/vfprintf-internal.c:1395
    0.00 :   7625a:  test   %edi,%edi
    0.00 :   7625c:  jns    76271 <__vfprintf_internal+0x1241>
         : 1404  ./stdio-common/vfprintf-internal.c:1397
    0.00 :   7625e:  neg    %edi
         : 1406  ./stdio-common/vfprintf-internal.c:1398
    0.00 :   76260:  movb   $0x20,0x38(%rsp)
         : 1408  ./stdio-common/vfprintf-internal.c:1397
    0.00 :   76265:  mov    %edi,0x10(%rsp)
         : 1410  ./stdio-common/vfprintf-internal.c:1399
    0.00 :   76269:  movl   $0x1,0x28(%rsp)
         : 1412  ./stdio-common/vfprintf-internal.c:1402
    0.00 :   76271:  movzbl 0x1(%rbx),%r13d
    0.00 :   76276:  lea    -0xb0d(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   7627d:  lea    -0x20(%r13),%ecx
    0.00 :   76281:  cmp    $0x5a,%cl
    0.00 :   76284:  ja     76c68 <__vfprintf_internal+0x1c38>
         : 1418  ./stdio-common/vfprintf-internal.c:1402 (discriminator 1)
    0.00 :   7628a:  movsbl %r13b,%ecx
    0.00 :   7628e:  lea    0x15b34b(%rip),%rbx        # 1d15e0 <step1_jumps.8>
    0.00 :   76295:  sub    $0x20,%ecx
    0.00 :   76298:  movslq %ecx,%rcx
    0.00 :   7629b:  movzbl (%rax,%rcx,1),%ecx
    0.00 :   7629f:  movslq (%rbx,%rcx,4),%rsi
    0.00 :   762a3:  lea    -0xb3a(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   762aa:  add    %rbx,%rsi
         : 1427  ./stdio-common/vfprintf-internal.c:1376 (discriminator 1)
    0.00 :   762ad:  mov    0x70(%rsp),%rbx
    0.00 :   762b2:  jmp    *%rsi
    0.00 :   762b4:  nopl   0x0(%rax)
    0.00 :   762b8:  endbr64
         : 1432  ./stdio-common/vfprintf-internal.c:1468
    0.00 :   762bc:  movzbl 0x1(%rbx),%r13d
    0.00 :   762c1:  lea    0x1(%rbx),%rcx
    0.00 :   762c5:  lea    -0xb5c(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   762cc:  lea    -0x20(%r13),%edi
    0.00 :   762d0:  cmp    $0x5a,%dil
    0.00 :   762d4:  ja     76be0 <__vfprintf_internal+0x1bb0>
         : 1439  ./stdio-common/vfprintf-internal.c:1468 (discriminator 1)
    0.00 :   762da:  movsbl %r13b,%esi
    0.00 :   762de:  lea    0x15b1fb(%rip),%rbx        # 1d14e0 <step3a_jumps.6>
         : 1442  ./stdio-common/vfprintf-internal.c:1467 (discriminator 1)
    0.00 :   762e5:  mov    $0x1,%r15d
         : 1444  ./stdio-common/vfprintf-internal.c:1468 (discriminator 1)
    0.00 :   762eb:  sub    $0x20,%esi
    0.00 :   762ee:  movslq %esi,%rsi
    0.00 :   762f1:  movzbl (%rax,%rsi,1),%esi
    0.00 :   762f5:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   762f9:  lea    -0xb90(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76300:  add    %rbx,%rsi
    0.00 :   76303:  mov    %rcx,%rbx
    0.00 :   76306:  jmp    *%rsi
    0.00 :   76308:  nopl   0x0(%rax,%rax,1)
    0.00 :   76310:  endbr64
         : 1455  read_int():
         : 1456  ./stdio-common/printf-parse.h:76
    0.00 :   76314:  movzbl (%rbx),%ecx
         : 1458  ./stdio-common/printf-parse.h:78
    0.00 :   76317:  movzbl 0x1(%rbx),%esi
         : 1460  ./stdio-common/printf-parse.h:76
    0.00 :   7631b:  sub    $0x30,%ecx
         : 1462  ./stdio-common/printf-parse.h:78
    0.00 :   7631e:  mov    %esi,%r13d
         : 1464  ./stdio-common/printf-parse.h:76
    0.00 :   76321:  mov    %ecx,0x10(%rsp)
         : 1466  ./stdio-common/printf-parse.h:78
    0.00 :   76325:  lea    0x1(%rbx),%rcx
    0.00 :   76329:  lea    -0x30(%rsi),%ebx
    0.00 :   7632c:  mov    0x10(%rsp),%esi
    0.00 :   76330:  cmp    $0x9,%ebx
    0.00 :   76333:  ja     7642d <__vfprintf_internal+0x13fd>
    0.00 :   76339:  movzbl 0x1(%rcx),%edi
    0.00 :   7633d:  add    $0x1,%rcx
    0.00 :   76341:  mov    %dil,0x70(%rsp)
    0.00 :   76346:  sub    $0x30,%edi
         : 1476  ./stdio-common/printf-parse.h:79
    0.00 :   76349:  test   %esi,%esi
    0.00 :   7634b:  js     77549 <__vfprintf_internal+0x2519>
         : 1479  ./stdio-common/printf-parse.h:81
    0.00 :   76351:  cmp    $0xccccccc,%esi
    0.00 :   76357:  jg     763d8 <__vfprintf_internal+0x13a8>
         : 1482  ./stdio-common/printf-parse.h:87
    0.00 :   76359:  lea    (%rsi,%rsi,4),%esi
         : 1484  ./stdio-common/printf-parse.h:88
    0.00 :   7635c:  mov    %r9d,%r13d
         : 1486  ./stdio-common/printf-parse.h:87
    0.00 :   7635f:  add    %esi,%esi
         : 1488  ./stdio-common/printf-parse.h:88
    0.00 :   76361:  sub    %ebx,%r13d
    0.00 :   76364:  cmp    %r13d,%esi
    0.00 :   76367:  jg     763d8 <__vfprintf_internal+0x13a8>
         : 1492  ./stdio-common/printf-parse.h:91
    0.00 :   76369:  add    %ebx,%esi
         : 1494  ./stdio-common/printf-parse.h:78
    0.00 :   7636b:  cmp    $0x9,%edi
    0.00 :   7636e:  ja     76868 <__vfprintf_internal+0x1838>
    0.00 :   76374:  mov    %edi,%ebx
    0.00 :   76376:  jmp    76339 <__vfprintf_internal+0x1309>
    0.00 :   76378:  nopl   0x0(%rax,%rax,1)
    0.00 :   76380:  endbr64
         : 1501  __vfprintf_internal():
         : 1502  ./stdio-common/vfprintf-internal.c:1369
    0.00 :   76384:  movzbl 0x1(%rbx),%r13d
    0.00 :   76389:  lea    0x1(%rbx),%rcx
    0.00 :   7638d:  lea    -0xc24(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76394:  lea    -0x20(%r13),%edi
    0.00 :   76398:  cmp    $0x5a,%dil
    0.00 :   7639c:  ja     76a98 <__vfprintf_internal+0x1a68>
         : 1509  ./stdio-common/vfprintf-internal.c:1369 (discriminator 1)
    0.00 :   763a2:  movsbl %r13b,%esi
         : 1511  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   763a6:  lea    0x15b2b3(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 1513  ./stdio-common/vfprintf-internal.c:1368 (discriminator 1)
    0.00 :   763ad:  movl   $0x1,0x5c(%rsp)
         : 1515  ./stdio-common/vfprintf-internal.c:1369 (discriminator 1)
    0.00 :   763b5:  sub    $0x20,%esi
    0.00 :   763b8:  movslq %esi,%rsi
    0.00 :   763bb:  movzbl (%rax,%rsi,1),%esi
         : 1519  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   763bf:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   763c3:  lea    -0xc5a(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   763ca:  add    %rbx,%rsi
         : 1523  ./stdio-common/vfprintf-internal.c:1369 (discriminator 1)
    0.00 :   763cd:  mov    %rcx,%rbx
    0.00 :   763d0:  jmp    *%rsi
    0.00 :   763d2:  nopw   0x0(%rax,%rax,1)
         : 1527  read_int():
         : 1528  ./stdio-common/printf-parse.h:78
    0.00 :   763d8:  cmp    $0x9,%edi
    0.00 :   763db:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   763e1:  movzbl 0x1(%rcx),%esi
    0.00 :   763e5:  sub    $0x30,%esi
    0.00 :   763e8:  cmp    $0x9,%esi
    0.00 :   763eb:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   763f1:  movzbl 0x2(%rcx),%esi
    0.00 :   763f5:  add    $0x2,%rcx
    0.00 :   763f9:  sub    $0x30,%esi
    0.00 :   763fc:  cmp    $0x9,%esi
    0.00 :   763ff:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   76405:  movl   $0xffffffff,0x10(%rsp)
    0.00 :   7640d:  lea    0x1(%rcx),%rsi
    0.00 :   76411:  nopl   0x0(%rax)
    0.00 :   76418:  movzbl (%rsi),%edi
    0.00 :   7641b:  mov    %rsi,%rcx
    0.00 :   7641e:  add    $0x1,%rsi
    0.00 :   76422:  mov    %edi,%r13d
    0.00 :   76425:  sub    $0x30,%edi
    0.00 :   76428:  cmp    $0x9,%edi
    0.00 :   7642b:  jbe    76418 <__vfprintf_internal+0x13e8>
         : 1550  __vfprintf_internal():
         : 1551  ./stdio-common/vfprintf-internal.c:1408
    0.00 :   7642d:  cmpl   $0xffffffff,0x10(%rsp)
    0.00 :   76432:  jne    76872 <__vfprintf_internal+0x1842>
    0.00 :   76438:  jmp    75860 <__vfprintf_internal+0x830>
    0.00 :   7643d:  nopl   (%rax)
         : 1556  ./stdio-common/vfprintf-internal.c:1516 (discriminator 86)
    0.00 :   76440:  test   %r10d,%r10d
    0.00 :   76443:  je     76740 <__vfprintf_internal+0x1710>
         : 1559  ./stdio-common/vfprintf-internal.c:1516 (discriminator 157)
    0.00 :   76449:  mov    0x28(%rbp),%rax
    0.00 :   7644d:  cmp    0x30(%rbp),%rax
    0.00 :   76451:  jae    766f0 <__vfprintf_internal+0x16c0>
         : 1563  ./stdio-common/vfprintf-internal.c:1516 (discriminator 160)
    0.00 :   76457:  lea    0x1(%rax),%rcx
    0.00 :   7645b:  mov    %rcx,0x28(%rbp)
    0.00 :   7645f:  movb   $0x2d,(%rax)
         : 1567  ./stdio-common/vfprintf-internal.c:1516 (discriminator 183)
    0.00 :   76462:  cmp    $0x7fffffff,%r12d
    0.00 :   76469:  je     76728 <__vfprintf_internal+0x16f8>
         : 1570  ./stdio-common/vfprintf-internal.c:1516 (discriminator 185)
    0.00 :   7646f:  subl   $0x1,0x10(%rsp)
    0.00 :   76474:  add    $0x1,%r12d
         : 1573  ./stdio-common/vfprintf-internal.c:1516 (discriminator 186)
    0.00 :   76478:  test   %r11,%r11
    0.00 :   7647b:  je     76489 <__vfprintf_internal+0x1459>
    0.00 :   7647d:  mov    0x4c(%rsp),%eax
    0.00 :   76481:  test   %eax,%eax
    0.00 :   76483:  jne    76960 <__vfprintf_internal+0x1930>
         : 1579  ./stdio-common/vfprintf-internal.c:1516 (discriminator 207)
    0.00 :   76489:  mov    0x10(%rsp),%r13d
    0.00 :   7648e:  add    %r15d,%edx
    0.00 :   76491:  sub    %edx,%r13d
    0.00 :   76494:  test   %r14d,%r14d
    0.00 :   76497:  jle    764eb <__vfprintf_internal+0x14bb>
         : 1585  pad_func():
         : 1586  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76499:  movslq %r14d,%rdx
    0.00 :   7649c:  mov    $0x30,%esi
    0.00 :   764a1:  mov    %rbp,%rdi
    0.00 :   764a4:  mov    %r9,0x28(%rsp)
    0.00 :   764a9:  mov    %rdx,0x10(%rsp)
    0.00 :   764ae:  call   806a0 <_IO_padn>
         : 1593  ./stdio-common/vfprintf-internal.c:200
    0.00 :   764b3:  mov    0x10(%rsp),%rdx
    0.00 :   764b8:  cmp    %rax,%rdx
    0.00 :   764bb:  jne    76728 <__vfprintf_internal+0x16f8>
         : 1597  done_add_func():
         : 1598  ./stdio-common/vfprintf-internal.c:127
    0.00 :   764c1:  xor    %eax,%eax
    0.00 :   764c3:  add    %r14d,%r12d
    0.00 :   764c6:  mov    0x28(%rsp),%r9
    0.00 :   764cb:  js     77586 <__vfprintf_internal+0x2556>
    0.00 :   764d1:  cmp    %edx,%r12d
    0.00 :   764d4:  jb     77586 <__vfprintf_internal+0x2556>
    0.00 :   764da:  test   %eax,%eax
    0.00 :   764dc:  jne    75860 <__vfprintf_internal+0x830>
         : 1607  __vfprintf_internal():
         : 1608  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   764e2:  test   %r12d,%r12d
    0.00 :   764e5:  js     7533d <__vfprintf_internal+0x30d>
         : 1611  outstring_func():
         : 1612  ./stdio-common/vfprintf-internal.c:239
    0.00 :   764eb:  mov    0xd8(%rbp),%r14
         : 1614  IO_validate_vtable():
         : 1615  ./stdio-common/../libio/libioP.h:942
    0.00 :   764f2:  lea    0x19f507(%rip),%rsi        # 215a00 <_IO_helper_jumps>
    0.00 :   764f9:  mov    %r14,%rax
    0.00 :   764fc:  sub    %rsi,%rax
         : 1619  ./stdio-common/../libio/libioP.h:943
    0.00 :   764ff:  cmp    %rax,0x30(%rsp)
    0.00 :   76504:  jbe    771bd <__vfprintf_internal+0x218d>
         : 1622  outstring_func():
         : 1623  ./stdio-common/vfprintf-internal.c:239
    0.00 :   7650a:  mov    %r15,%rdx
    0.00 :   7650d:  mov    %r9,%rsi
    0.00 :   76510:  mov    %rbp,%rdi
    0.00 :   76513:  call   *0x38(%r14)
    0.00 :   76517:  cmp    %r15,%rax
    0.00 :   7651a:  jne    76728 <__vfprintf_internal+0x16f8>
         : 1630  done_add_func():
         : 1631  ./stdio-common/vfprintf-internal.c:127
    0.00 :   76520:  movslq %r12d,%rax
    0.00 :   76523:  xor    %edx,%edx
    0.00 :   76525:  add    %r15,%rax
    0.00 :   76528:  js     77519 <__vfprintf_internal+0x24e9>
    0.00 :   7652e:  cmp    %r15,%rax
    0.00 :   76531:  jb     77519 <__vfprintf_internal+0x24e9>
    0.00 :   76537:  movslq %eax,%rcx
    0.00 :   7653a:  mov    %eax,%r12d
    0.00 :   7653d:  cmp    %rcx,%rax
    0.00 :   76540:  mov    $0x1,%ecx
    0.00 :   76545:  cmovne %ecx,%edx
    0.00 :   76548:  test   %edx,%edx
    0.00 :   7654a:  jne    75860 <__vfprintf_internal+0x830>
         : 1645  __vfprintf_internal():
         : 1646  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76550:  test   %eax,%eax
    0.00 :   76552:  jns    756d0 <__vfprintf_internal+0x6a0>
    0.00 :   76558:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   7655d:  nopl   (%rax)
         : 1651  ./stdio-common/vfprintf-internal.c:1516 (discriminator 67)
    0.00 :   76560:  test   %r11,%r11
    0.00 :   76563:  jne    76800 <__vfprintf_internal+0x17d0>
         : 1654  ./stdio-common/vfprintf-internal.c:1516 (discriminator 69)
    0.00 :   76569:  cmpl   $0x8,0x60(%rsp)
    0.00 :   7656e:  jne    769f8 <__vfprintf_internal+0x19c8>
    0.00 :   76574:  mov    0x4c(%rsp),%eax
    0.00 :   76578:  test   %eax,%eax
    0.00 :   7657a:  je     769f8 <__vfprintf_internal+0x19c8>
         : 1660  ./stdio-common/vfprintf-internal.c:1516 (discriminator 71)
    0.00 :   76580:  movb   $0x30,0x527(%rsp)
    0.00 :   76588:  mov    $0x1,%r15d
    0.00 :   7658e:  lea    0x527(%rsp),%r9
         : 1664  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76596:  movb   $0x20,0x38(%rsp)
    0.00 :   7659b:  xor    %edx,%edx
    0.00 :   7659d:  mov    0x28(%rsp),%eax
    0.00 :   765a1:  test   %eax,%eax
    0.00 :   765a3:  jne    76440 <__vfprintf_internal+0x1410>
    0.00 :   765a9:  mov    0x10(%rsp),%r8d
    0.00 :   765ae:  add    %r15d,%edx
    0.00 :   765b1:  sub    %edx,%r8d
    0.00 :   765b4:  jmp    75baf <__vfprintf_internal+0xb7f>
    0.00 :   765b9:  nopl   0x0(%rax)
         : 1675  ./stdio-common/vfprintf-internal.c:1516 (discriminator 78)
    0.00 :   765c0:  test   %r11,%r11
    0.00 :   765c3:  je     77038 <__vfprintf_internal+0x2008>
         : 1678  ./stdio-common/vfprintf-internal.c:1516 (discriminator 80)
    0.00 :   765c9:  cmpl   $0x8,0x60(%rsp)
    0.00 :   765ce:  jne    765ea <__vfprintf_internal+0x15ba>
    0.00 :   765d0:  mov    0x4c(%rsp),%eax
    0.00 :   765d4:  test   %eax,%eax
    0.00 :   765d6:  je     765ea <__vfprintf_internal+0x15ba>
         : 1684  ./stdio-common/vfprintf-internal.c:1516 (discriminator 82)
    0.00 :   765d8:  lea    -0x1(%r9),%rax
    0.00 :   765dc:  mov    %r14,%r15
    0.00 :   765df:  movb   $0x30,-0x1(%r9)
    0.00 :   765e4:  sub    %rax,%r15
    0.00 :   765e7:  mov    %rax,%r9
         : 1690  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   765ea:  mov    0x70(%rsp),%rdx
    0.00 :   765ef:  mov    $0x0,%eax
    0.00 :   765f4:  mov    0x28(%rsp),%ecx
    0.00 :   765f8:  sub    %r15,%rdx
    0.00 :   765fb:  cmovs  %rax,%rdx
    0.00 :   765ff:  mov    %edx,%r14d
    0.00 :   76602:  test   %ecx,%ecx
    0.00 :   76604:  jne    76440 <__vfprintf_internal+0x1410>
    0.00 :   7660a:  mov    0x10(%rsp),%r8d
    0.00 :   7660f:  sub    %r15d,%r8d
    0.00 :   76612:  sub    %edx,%r8d
    0.00 :   76615:  jmp    75b90 <__vfprintf_internal+0xb60>
    0.00 :   7661a:  nopw   0x0(%rax,%rax,1)
         : 1704  ./stdio-common/vfprintf-internal.c:1236
    0.00 :   76620:  mov    0x528(%rsp),%rax
    0.00 :   76628:  sub    %fs:0x28,%rax
    0.00 :   76631:  jne    7750a <__vfprintf_internal+0x24da>
    0.00 :   76637:  mov    0x7c(%rsp),%ecx
    0.00 :   7663b:  mov    0x20(%rsp),%rdx
    0.00 :   76640:  mov    %rbp,%rdi
    0.00 :   76643:  mov    0x8(%rsp),%rsi
         : 1712  ./stdio-common/vfprintf-internal.c:1612
    0.00 :   76648:  add    $0x538,%rsp
    0.00 :   7664f:  pop    %rbx
    0.00 :   76650:  pop    %rbp
    0.00 :   76651:  pop    %r12
    0.00 :   76653:  pop    %r13
    0.00 :   76655:  pop    %r14
    0.00 :   76657:  pop    %r15
         : 1720  ./stdio-common/vfprintf-internal.c:1236
    0.00 :   76659:  jmp    775a0 <buffered_vfprintf>
    0.00 :   7665e:  xchg   %ax,%ax
         : 1723  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76660:  cmpb   $0x20,0x38(%rsp)
    0.00 :   76665:  jne    75c02 <__vfprintf_internal+0xbd2>
         : 1726  pad_func():
         : 1727  ./stdio-common/vfprintf-internal.c:192
    0.00 :   7666b:  test   %r8d,%r8d
    0.00 :   7666e:  jle    77541 <__vfprintf_internal+0x2511>
         : 1730  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76674:  movslq %r8d,%rdx
    0.00 :   76677:  mov    $0x20,%esi
    0.00 :   7667c:  mov    %rbp,%rdi
    0.00 :   7667f:  mov    %r10d,0x5c(%rsp)
    0.00 :   76684:  mov    %rdx,0x10(%rsp)
    0.00 :   76689:  mov    %r9,0x50(%rsp)
    0.00 :   7668e:  mov    %r11,0x38(%rsp)
    0.00 :   76693:  mov    %r8d,0x28(%rsp)
    0.00 :   76698:  call   806a0 <_IO_padn>
         : 1740  ./stdio-common/vfprintf-internal.c:200
    0.00 :   7669d:  mov    0x10(%rsp),%rdx
    0.00 :   766a2:  cmp    %rax,%rdx
    0.00 :   766a5:  jne    76728 <__vfprintf_internal+0x16f8>
         : 1744  done_add_func():
         : 1745  ./stdio-common/vfprintf-internal.c:127
    0.00 :   766ab:  mov    0x28(%rsp),%r8d
    0.00 :   766b0:  xor    %eax,%eax
    0.00 :   766b2:  mov    0x38(%rsp),%r11
    0.00 :   766b7:  mov    0x50(%rsp),%r9
    0.00 :   766bc:  mov    0x5c(%rsp),%r10d
    0.00 :   766c1:  add    %r8d,%r12d
    0.00 :   766c4:  js     77523 <__vfprintf_internal+0x24f3>
    0.00 :   766ca:  cmp    %edx,%r12d
    0.00 :   766cd:  jb     77523 <__vfprintf_internal+0x24f3>
    0.00 :   766d3:  mov    %eax,%r8d
    0.00 :   766d6:  test   %eax,%eax
    0.00 :   766d8:  jne    75860 <__vfprintf_internal+0x830>
         : 1758  __vfprintf_internal():
         : 1759  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   766de:  test   %r12d,%r12d
    0.00 :   766e1:  jns    75bcf <__vfprintf_internal+0xb9f>
    0.00 :   766e7:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   766ec:  nopl   0x0(%rax)
    0.00 :   766f0:  mov    %r9,0x40(%rsp)
         : 1765  ./stdio-common/vfprintf-internal.c:1516 (discriminator 159)
    0.00 :   766f5:  mov    $0x2d,%esi
    0.00 :   766fa:  mov    %rdx,0x38(%rsp)
    0.00 :   766ff:  mov    %r11,0x28(%rsp)
         : 1769  ./stdio-common/vfprintf-internal.c:1516 (discriminator 179)
    0.00 :   76704:  mov    %rbp,%rdi
    0.00 :   76707:  call   8d800 <__overflow>
    0.00 :   7670c:  mov    0x28(%rsp),%r11
    0.00 :   76711:  mov    0x38(%rsp),%rdx
    0.00 :   76716:  cmp    $0xffffffff,%eax
    0.00 :   76719:  mov    0x40(%rsp),%r9
    0.00 :   7671e:  jne    76462 <__vfprintf_internal+0x1432>
    0.00 :   76724:  nopl   0x0(%rax)
         : 1778  outstring_func():
         : 1779  ./stdio-common/vfprintf-internal.c:240
    0.00 :   76728:  mov    $0xffffffff,%r12d
         : 1781  __vfprintf_internal():
         : 1782  ./stdio-common/vfprintf-internal.c:1608
    0.00 :   7672e:  testl  $0x8000,0x0(%rbp)
    0.00 :   76735:  jne    75346 <__vfprintf_internal+0x316>
    0.00 :   7673b:  jmp    75380 <__vfprintf_internal+0x350>
         : 1786  ./stdio-common/vfprintf-internal.c:1516 (discriminator 158)
    0.00 :   76740:  mov    0x40(%rsp),%eax
    0.00 :   76744:  test   %eax,%eax
    0.00 :   76746:  je     76930 <__vfprintf_internal+0x1900>
         : 1790  ./stdio-common/vfprintf-internal.c:1516 (discriminator 167)
    0.00 :   7674c:  mov    0x28(%rbp),%rax
    0.00 :   76750:  cmp    0x30(%rbp),%rax
    0.00 :   76754:  jae    773b8 <__vfprintf_internal+0x2388>
         : 1794  ./stdio-common/vfprintf-internal.c:1516 (discriminator 170)
    0.00 :   7675a:  lea    0x1(%rax),%rcx
    0.00 :   7675e:  mov    %rcx,0x28(%rbp)
    0.00 :   76762:  movb   $0x2b,(%rax)
    0.00 :   76765:  jmp    76462 <__vfprintf_internal+0x1432>
    0.00 :   7676a:  nopw   0x0(%rax,%rax,1)
         : 1800  IO_validate_vtable():
         : 1801  ./stdio-common/../libio/libioP.h:946
    0.00 :   76770:  call   89ef0 <_IO_vtable_check>
    0.00 :   76775:  jmp    75fbe <__vfprintf_internal+0xf8e>
    0.00 :   7677a:  nopw   0x0(%rax,%rax,1)
         : 1805  pad_func():
         : 1806  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76780:  movslq %r13d,%r14
    0.00 :   76783:  mov    $0x30,%esi
    0.00 :   76788:  mov    %rbp,%rdi
    0.00 :   7678b:  mov    %r9,0x10(%rsp)
    0.00 :   76790:  mov    %r14,%rdx
    0.00 :   76793:  call   806a0 <_IO_padn>
         : 1813  ./stdio-common/vfprintf-internal.c:200
    0.00 :   76798:  cmp    %rax,%r14
    0.00 :   7679b:  jne    76728 <__vfprintf_internal+0x16f8>
         : 1816  done_add_func():
         : 1817  ./stdio-common/vfprintf-internal.c:127
    0.00 :   7679d:  xor    %eax,%eax
    0.00 :   7679f:  add    %r13d,%r12d
    0.00 :   767a2:  mov    0x10(%rsp),%r9
    0.00 :   767a7:  js     7752d <__vfprintf_internal+0x24fd>
    0.00 :   767ad:  cmp    %r13d,%r12d
    0.00 :   767b0:  jb     7752d <__vfprintf_internal+0x24fd>
    0.00 :   767b6:  test   %eax,%eax
    0.00 :   767b8:  jne    75860 <__vfprintf_internal+0x830>
         : 1826  __vfprintf_internal():
         : 1827  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   767be:  test   %r12d,%r12d
    0.00 :   767c1:  jns    75c7d <__vfprintf_internal+0xc4d>
    0.00 :   767c7:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   767cc:  nopl   0x0(%rax)
         : 1832  ./stdio-common/vfprintf-internal.c:1516 (discriminator 103)
    0.00 :   767d0:  mov    0x40(%rsp),%esi
    0.00 :   767d4:  test   %esi,%esi
    0.00 :   767d6:  je     77058 <__vfprintf_internal+0x2028>
         : 1836  ./stdio-common/vfprintf-internal.c:1516 (discriminator 112)
    0.00 :   767dc:  mov    0x28(%rbp),%rax
    0.00 :   767e0:  cmp    0x30(%rbp),%rax
    0.00 :   767e4:  jae    7739f <__vfprintf_internal+0x236f>
         : 1840  ./stdio-common/vfprintf-internal.c:1516 (discriminator 115)
    0.00 :   767ea:  lea    0x1(%rax),%rdx
    0.00 :   767ee:  mov    %rdx,0x28(%rbp)
    0.00 :   767f2:  movb   $0x2b,(%rax)
    0.00 :   767f5:  jmp    75bf1 <__vfprintf_internal+0xbc1>
    0.00 :   767fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   76800:  movq   $0x0,0x70(%rsp)
         : 1847  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76809:  movb   $0x20,0x38(%rsp)
    0.00 :   7680e:  jmp    75a86 <__vfprintf_internal+0xa56>
    0.00 :   76813:  nopl   0x0(%rax,%rax,1)
         : 1851  ./stdio-common/vfprintf-internal.c:1516 (discriminator 57)
    0.00 :   76818:  test   %r15d,%r15d
    0.00 :   7681b:  jne    76af0 <__vfprintf_internal+0x1ac0>
         : 1854  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76821:  cmp    $0x2f,%eax
    0.00 :   76824:  ja     76dec <__vfprintf_internal+0x1dbc>
    0.00 :   7682a:  mov    %eax,%edx
    0.00 :   7682c:  add    $0x8,%eax
    0.00 :   7682f:  add    0x10(%rdi),%rdx
    0.00 :   76833:  mov    %eax,(%rdi)
    0.00 :   76835:  movl   $0x0,0x40(%rsp)
    0.00 :   7683d:  mov    (%rdx),%r11d
    0.00 :   76840:  xor    %r10d,%r10d
    0.00 :   76843:  movl   $0x0,0x58(%rsp)
    0.00 :   7684b:  jmp    75a66 <__vfprintf_internal+0xa36>
    0.00 :   76850:  mov    0x8(%rdi),%rdx
    0.00 :   76854:  lea    0x8(%rdx),%rax
    0.00 :   76858:  mov    %rax,0x8(%rdi)
    0.00 :   7685c:  jmp    75a50 <__vfprintf_internal+0xa20>
    0.00 :   76861:  nopl   0x0(%rax)
    0.00 :   76868:  mov    %esi,0x10(%rsp)
    0.00 :   7686c:  movzbl 0x70(%rsp),%r13d
         : 1873  ./stdio-common/vfprintf-internal.c:1415
    0.00 :   76872:  cmp    $0x24,%r13b
    0.00 :   76876:  je     76a88 <__vfprintf_internal+0x1a58>
         : 1876  ./stdio-common/vfprintf-internal.c:1418
    0.00 :   7687c:  lea    -0x20(%r13),%edi
    0.00 :   76880:  lea    -0x1117(%rip),%rsi        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76887:  cmp    $0x5a,%dil
    0.00 :   7688b:  jbe    76cd0 <__vfprintf_internal+0x1ca0>
         : 1881  ./stdio-common/vfprintf-internal.c:1418 (discriminator 4)
    0.00 :   76891:  mov    %rcx,%rbx
    0.00 :   76894:  jmp    *%rsi
    0.00 :   76896:  cs nopw 0x0(%rax,%rax,1)
         : 1885  ./stdio-common/vfprintf-internal.c:1555
    0.00 :   768a0:  mov    0x20(%rsp),%rcx
    0.00 :   768a5:  mov    0x8(%rcx),%rax
    0.00 :   768a9:  mov    %rax,0x10(%rsp)
    0.00 :   768ae:  add    $0xf,%rax
    0.00 :   768b2:  and    $0xfffffffffffffff0,%rax
    0.00 :   768b6:  lea    0x10(%rax),%rdx
    0.00 :   768ba:  mov    %rdx,0x8(%rcx)
    0.00 :   768be:  fldt   (%rax)
    0.00 :   768c0:  fstpt  0xc0(%rsp)
         : 1895  ./stdio-common/vfprintf-internal.c:1556 (discriminator 9)
    0.00 :   768c7:  lea    0xc0(%rsp),%rax
         : 1897  __printf_fp_spec():
         : 1898  ./stdio-common/vfprintf-internal.c:351 (discriminator 9)
    0.00 :   768cf:  and    $0xffffffdf,%r13d
         : 1900  ./stdio-common/vfprintf-internal.c:352 (discriminator 9)
    0.00 :   768d3:  mov    %rbp,%rdi
         : 1902  __vfprintf_internal():
         : 1903  ./stdio-common/vfprintf-internal.c:1556 (discriminator 9)
    0.00 :   768d6:  mov    %rax,0xb8(%rsp)
         : 1905  __printf_fp_spec():
         : 1906  ./stdio-common/vfprintf-internal.c:352 (discriminator 9)
    0.00 :   768de:  lea    0xb8(%rsp),%rdx
    0.00 :   768e6:  lea    0xd0(%rsp),%rsi
         : 1909  ./stdio-common/vfprintf-internal.c:351 (discriminator 9)
    0.00 :   768ee:  cmp    $0x41,%r13d
    0.00 :   768f2:  jne    76928 <__vfprintf_internal+0x18f8>
         : 1912  ./stdio-common/vfprintf-internal.c:352
    0.00 :   768f4:  call   5d8b0 <__printf_fphex>
         : 1914  __vfprintf_internal():
         : 1915  ./stdio-common/vfprintf-internal.c:1559
    0.00 :   768f9:  test   %eax,%eax
    0.00 :   768fb:  js     76728 <__vfprintf_internal+0x16f8>
         : 1918  done_add_func():
         : 1919  ./stdio-common/vfprintf-internal.c:127
    0.00 :   76901:  xor    %edx,%edx
    0.00 :   76903:  add    %eax,%r12d
    0.00 :   76906:  js     7750f <__vfprintf_internal+0x24df>
    0.00 :   7690c:  cmp    %eax,%r12d
    0.00 :   7690f:  jb     7750f <__vfprintf_internal+0x24df>
    0.00 :   76915:  test   %edx,%edx
    0.00 :   76917:  je     75701 <__vfprintf_internal+0x6d1>
    0.00 :   7691d:  jmp    75860 <__vfprintf_internal+0x830>
    0.00 :   76922:  nopw   0x0(%rax,%rax,1)
         : 1929  __printf_fp_spec():
         : 1930  ./stdio-common/vfprintf-internal.c:354
    0.00 :   76928:  call   5d520 <__printf_fp>
    0.00 :   7692d:  jmp    768f9 <__vfprintf_internal+0x18c9>
    0.00 :   7692f:  nop
         : 1934  __vfprintf_internal():
         : 1935  ./stdio-common/vfprintf-internal.c:1516 (discriminator 168)
    0.00 :   76930:  mov    0x58(%rsp),%eax
    0.00 :   76934:  test   %eax,%eax
    0.00 :   76936:  je     76478 <__vfprintf_internal+0x1448>
         : 1939  ./stdio-common/vfprintf-internal.c:1516 (discriminator 177)
    0.00 :   7693c:  mov    0x28(%rbp),%rax
    0.00 :   76940:  cmp    0x30(%rbp),%rax
    0.00 :   76944:  jae    77463 <__vfprintf_internal+0x2433>
         : 1943  ./stdio-common/vfprintf-internal.c:1516 (discriminator 180)
    0.00 :   7694a:  lea    0x1(%rax),%rcx
    0.00 :   7694e:  mov    %rcx,0x28(%rbp)
    0.00 :   76952:  movb   $0x20,(%rax)
    0.00 :   76955:  jmp    76462 <__vfprintf_internal+0x1432>
    0.00 :   7695a:  nopw   0x0(%rax,%rax,1)
         : 1949  ./stdio-common/vfprintf-internal.c:1516 (discriminator 189)
    0.00 :   76960:  mov    0x60(%rsp),%ecx
    0.00 :   76964:  mov    $0x10004,%eax
    0.00 :   76969:  bt     %rcx,%rax
    0.00 :   7696d:  jae    76489 <__vfprintf_internal+0x1459>
         : 1954  ./stdio-common/vfprintf-internal.c:1516 (discriminator 191)
    0.00 :   76973:  mov    0x28(%rbp),%rax
    0.00 :   76977:  cmp    0x30(%rbp),%rax
    0.00 :   7697b:  jae    774c8 <__vfprintf_internal+0x2498>
         : 1958  ./stdio-common/vfprintf-internal.c:1516 (discriminator 194)
    0.00 :   76981:  lea    0x1(%rax),%rcx
    0.00 :   76985:  mov    %rcx,0x28(%rbp)
    0.00 :   76989:  movb   $0x30,(%rax)
         : 1962  ./stdio-common/vfprintf-internal.c:1516 (discriminator 197)
    0.00 :   7698c:  cmp    $0x7fffffff,%r12d
    0.00 :   76993:  je     76728 <__vfprintf_internal+0x16f8>
         : 1965  ./stdio-common/vfprintf-internal.c:1516 (discriminator 199)
    0.00 :   76999:  mov    0x28(%rbp),%rax
    0.00 :   7699d:  cmp    0x30(%rbp),%rax
    0.00 :   769a1:  jae    77495 <__vfprintf_internal+0x2465>
         : 1969  ./stdio-common/vfprintf-internal.c:1516 (discriminator 201)
    0.00 :   769a7:  lea    0x1(%rax),%rcx
    0.00 :   769ab:  mov    %rcx,0x28(%rbp)
    0.00 :   769af:  mov    %r13b,(%rax)
         : 1973  ./stdio-common/vfprintf-internal.c:1516 (discriminator 204)
    0.00 :   769b2:  cmp    $0x7ffffffe,%r12d
    0.00 :   769b9:  je     76728 <__vfprintf_internal+0x16f8>
         : 1976  ./stdio-common/vfprintf-internal.c:1516 (discriminator 206)
    0.00 :   769bf:  subl   $0x2,0x10(%rsp)
    0.00 :   769c4:  add    $0x2,%r12d
    0.00 :   769c8:  jmp    76489 <__vfprintf_internal+0x1459>
    0.00 :   769cd:  nopl   (%rax)
         : 1981  IO_validate_vtable():
         : 1982  ./stdio-common/../libio/libioP.h:946
    0.00 :   769d0:  call   89ef0 <_IO_vtable_check>
    0.00 :   769d5:  jmp    7513d <__vfprintf_internal+0x10d>
    0.00 :   769da:  nopw   0x0(%rax,%rax,1)
         : 1986  __vfprintf_internal():
         : 1987  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   769e0:  mov    0x8(%rsi),%rcx
    0.00 :   769e4:  lea    0x8(%rcx),%rax
    0.00 :   769e8:  mov    %rax,0x8(%rsi)
    0.00 :   769ec:  jmp    7561b <__vfprintf_internal+0x5eb>
    0.00 :   769f1:  nopl   0x0(%rax)
    0.00 :   769f8:  xor    %r15d,%r15d
         : 1994  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   769fb:  lea    0x528(%rsp),%r9
    0.00 :   76a03:  jmp    76596 <__vfprintf_internal+0x1566>
    0.00 :   76a08:  nopl   0x0(%rax,%rax,1)
         : 1998  read_int():
         : 1999  ./stdio-common/printf-parse.h:78
    0.00 :   76a10:  movzbl 0x1(%rdi),%edi
    0.00 :   76a14:  lea    0x2(%rbx),%rcx
    0.00 :   76a18:  mov    %edi,%r13d
    0.00 :   76a1b:  sub    $0x30,%edi
    0.00 :   76a1e:  cmp    $0x9,%edi
    0.00 :   76a21:  ja     76a71 <__vfprintf_internal+0x1a41>
    0.00 :   76a23:  mov    %rbx,0x10(%rsp)
    0.00 :   76a28:  mov    %edx,0x88(%rsp)
    0.00 :   76a2f:  mov    %edi,%ebx
    0.00 :   76a31:  movzbl 0x1(%rcx),%edi
    0.00 :   76a35:  add    $0x1,%rcx
    0.00 :   76a39:  mov    %edi,%r13d
    0.00 :   76a3c:  sub    $0x30,%edi
         : 2013  ./stdio-common/printf-parse.h:81
    0.00 :   76a3f:  cmp    $0xccccccc,%esi
    0.00 :   76a45:  jg     770e0 <__vfprintf_internal+0x20b0>
         : 2016  ./stdio-common/printf-parse.h:87
    0.00 :   76a4b:  lea    (%rsi,%rsi,4),%edx
         : 2018  ./stdio-common/printf-parse.h:88
    0.00 :   76a4e:  mov    %r9d,%esi
         : 2020  ./stdio-common/printf-parse.h:87
    0.00 :   76a51:  add    %edx,%edx
         : 2022  ./stdio-common/printf-parse.h:88
    0.00 :   76a53:  sub    %ebx,%esi
    0.00 :   76a55:  cmp    %esi,%edx
    0.00 :   76a57:  jg     770e0 <__vfprintf_internal+0x20b0>
         : 2026  ./stdio-common/printf-parse.h:91
    0.00 :   76a5d:  lea    (%rdx,%rbx,1),%esi
         : 2028  ./stdio-common/printf-parse.h:78
    0.00 :   76a60:  cmp    $0x9,%edi
    0.00 :   76a63:  jbe    76a2f <__vfprintf_internal+0x19ff>
    0.00 :   76a65:  mov    0x10(%rsp),%rbx
    0.00 :   76a6a:  mov    0x88(%rsp),%edx
         : 2033  __vfprintf_internal():
         : 2034  ./stdio-common/vfprintf-internal.c:1388 (discriminator 1)
    0.00 :   76a71:  cmp    $0x24,%r13b
    0.00 :   76a75:  jne    76235 <__vfprintf_internal+0x1205>
    0.00 :   76a7b:  test   %esi,%esi
    0.00 :   76a7d:  je     76235 <__vfprintf_internal+0x1205>
    0.00 :   76a83:  nopl   0x0(%rax,%rax,1)
    0.00 :   76a88:  mov    0x78(%rsp),%eax
    0.00 :   76a8c:  jmp    752df <__vfprintf_internal+0x2af>
    0.00 :   76a91:  nopl   0x0(%rax)
         : 2043  ./stdio-common/vfprintf-internal.c:1368 (discriminator 4)
    0.00 :   76a98:  movl   $0x1,0x5c(%rsp)
         : 2045  ./stdio-common/vfprintf-internal.c:1369 (discriminator 4)
    0.00 :   76aa0:  mov    %rcx,%rbx
    0.00 :   76aa3:  jmp    *%rsi
    0.00 :   76aa5:  nopl   (%rax)
         : 2049  ./stdio-common/vfprintf-internal.c:1392 (discriminator 16)
    0.00 :   76aa8:  mov    0x20(%rsp),%rsi
    0.00 :   76aad:  mov    (%rsi),%eax
         : 2052  ./stdio-common/vfprintf-internal.c:1516 (discriminator 16)
    0.00 :   76aaf:  test   %r11d,%r11d
    0.00 :   76ab2:  je     76db7 <__vfprintf_internal+0x1d87>
         : 2055  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76ab8:  cmp    $0x2f,%eax
    0.00 :   76abb:  ja     77265 <__vfprintf_internal+0x2235>
    0.00 :   76ac1:  mov    %eax,%edx
    0.00 :   76ac3:  add    $0x8,%eax
    0.00 :   76ac6:  add    0x10(%rsi),%rdx
    0.00 :   76aca:  mov    %eax,(%rsi)
    0.00 :   76acc:  movsbq (%rdx),%r10
         : 2063  ./stdio-common/vfprintf-internal.c:1516 (discriminator 24)
    0.00 :   76ad0:  mov    %r10,%r11
    0.00 :   76ad3:  test   %r10,%r10
    0.00 :   76ad6:  js     76fc8 <__vfprintf_internal+0x1f98>
         : 2067  ./stdio-common/vfprintf-internal.c:1516 (discriminator 26)
    0.00 :   76adc:  movl   $0xa,0x60(%rsp)
    0.00 :   76ae4:  xor    %r10d,%r10d
    0.00 :   76ae7:  jmp    75a66 <__vfprintf_internal+0xa36>
    0.00 :   76aec:  nopl   0x0(%rax)
         : 2072  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76af0:  cmp    $0x2f,%eax
    0.00 :   76af3:  jbe    76ddc <__vfprintf_internal+0x1dac>
    0.00 :   76af9:  mov    0x8(%rdi),%rdx
    0.00 :   76afd:  lea    0x8(%rdx),%rax
    0.00 :   76b01:  mov    %rax,0x8(%rdi)
    0.00 :   76b05:  movl   $0x0,0x40(%rsp)
    0.00 :   76b0d:  movzwl (%rdx),%r11d
    0.00 :   76b11:  xor    %r10d,%r10d
    0.00 :   76b14:  movl   $0x0,0x58(%rsp)
    0.00 :   76b1c:  jmp    75a66 <__vfprintf_internal+0xa36>
    0.00 :   76b21:  nopl   0x0(%rax)
         : 2084  ./stdio-common/vfprintf-internal.c:1318 (discriminator 1)
    0.00 :   76b28:  movsbl %r13b,%esi
         : 2086  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   76b2c:  lea    0x15ab2d(%rip),%rbx        # 1d1660 <step0_jumps.9>
         : 2088  ./stdio-common/vfprintf-internal.c:1317 (discriminator 1)
    0.00 :   76b33:  movl   $0x1,0x58(%rsp)
         : 2090  ./stdio-common/vfprintf-internal.c:1318 (discriminator 1)
    0.00 :   76b3b:  sub    $0x20,%esi
    0.00 :   76b3e:  movslq %esi,%rsi
    0.00 :   76b41:  movzbl (%rax,%rsi,1),%esi
         : 2094  ./stdio-common/vfprintf-internal.c:1329 (discriminator 1)
    0.00 :   76b45:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   76b49:  lea    -0x13e0(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76b50:  add    %rbx,%rsi
         : 2098  ./stdio-common/vfprintf-internal.c:1318 (discriminator 1)
    0.00 :   76b53:  mov    %rcx,%rbx
    0.00 :   76b56:  jmp    *%rsi
    0.00 :   76b58:  nopl   0x0(%rax,%rax,1)
         : 2102  ./stdio-common/vfprintf-internal.c:1486 (discriminator 4)
    0.00 :   76b60:  mov    %rdx,%rbx
         : 2104  ./stdio-common/vfprintf-internal.c:1485 (discriminator 4)
    0.00 :   76b63:  mov    $0x1,%r10d
         : 2106  ./stdio-common/vfprintf-internal.c:1484 (discriminator 4)
    0.00 :   76b69:  mov    $0x1,%edx
    0.00 :   76b6e:  jmp    *%rsi
         : 2109  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76b70:  mov    0x8(%rdi),%rdx
    0.00 :   76b74:  lea    0x8(%rdx),%rax
    0.00 :   76b78:  mov    %rax,0x8(%rdi)
    0.00 :   76b7c:  jmp    76069 <__vfprintf_internal+0x1039>
    0.00 :   76b81:  nopl   0x0(%rax)
         : 2115  ./stdio-common/vfprintf-internal.c:1344 (discriminator 4)
    0.00 :   76b88:  movl   $0x1,0x50(%rsp)
         : 2117  ./stdio-common/vfprintf-internal.c:1365 (discriminator 4)
    0.00 :   76b90:  mov    %rcx,%rbx
    0.00 :   76b93:  jmp    *%rsi
    0.00 :   76b95:  nopl   (%rax)
         : 2121  ./stdio-common/vfprintf-internal.c:1333 (discriminator 4)
    0.00 :   76b98:  movl   $0x1,0x4c(%rsp)
         : 2123  ./stdio-common/vfprintf-internal.c:1334 (discriminator 4)
    0.00 :   76ba0:  mov    %rcx,%rbx
    0.00 :   76ba3:  jmp    *%rsi
    0.00 :   76ba5:  nopl   (%rax)
         : 2127  ./stdio-common/vfprintf-internal.c:1479 (discriminator 4)
    0.00 :   76ba8:  mov    %rcx,%rbx
         : 2129  ./stdio-common/vfprintf-internal.c:1478 (discriminator 4)
    0.00 :   76bab:  mov    $0x1,%r10d
    0.00 :   76bb1:  jmp    *%rsi
    0.00 :   76bb3:  nopl   0x0(%rax,%rax,1)
         : 2133  ./stdio-common/vfprintf-internal.c:1322 (discriminator 4)
    0.00 :   76bb8:  movl   $0x1,0x40(%rsp)
         : 2135  ./stdio-common/vfprintf-internal.c:1323 (discriminator 4)
    0.00 :   76bc0:  mov    %rcx,%rbx
    0.00 :   76bc3:  jmp    *%rsi
    0.00 :   76bc5:  nopl   (%rax)
         : 2139  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76bc8:  mov    0x8(%rdi),%rdx
    0.00 :   76bcc:  lea    0x8(%rdx),%rax
    0.00 :   76bd0:  mov    %rax,0x8(%rdi)
    0.00 :   76bd4:  jmp    75e7f <__vfprintf_internal+0xe4f>
    0.00 :   76bd9:  nopl   0x0(%rax)
         : 2145  ./stdio-common/vfprintf-internal.c:1468 (discriminator 4)
    0.00 :   76be0:  mov    %rcx,%rbx
         : 2147  ./stdio-common/vfprintf-internal.c:1467 (discriminator 4)
    0.00 :   76be3:  mov    $0x1,%r15d
    0.00 :   76be9:  jmp    *%rsi
    0.00 :   76beb:  nopl   0x0(%rax,%rax,1)
         : 2151  ./stdio-common/vfprintf-internal.c:1516 (discriminator 244)
    0.00 :   76bf0:  mov    0x90(%rsp),%edi
    0.00 :   76bf7:  lea    0x140(%rsp),%rsi
    0.00 :   76bff:  mov    $0x3e8,%edx
    0.00 :   76c04:  call   a8620 <__strerror_r>
    0.00 :   76c09:  mov    %rax,%r15
    0.00 :   76c0c:  jmp    758a1 <__vfprintf_internal+0x871>
    0.00 :   76c11:  nopl   0x0(%rax)
         : 2159  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76c18:  mov    0x8(%rdi),%rdx
    0.00 :   76c1c:  lea    0x8(%rdx),%rax
    0.00 :   76c20:  mov    %rax,0x8(%rdi)
    0.00 :   76c24:  jmp    7572f <__vfprintf_internal+0x6ff>
    0.00 :   76c29:  nopl   0x0(%rax)
         : 2165  ./stdio-common/vfprintf-internal.c:1516 (discriminator 234)
    0.00 :   76c30:  test   %r11d,%r11d
    0.00 :   76c33:  jne    76d9e <__vfprintf_internal+0x1d6e>
         : 2168  ./stdio-common/vfprintf-internal.c:1516 (discriminator 237)
    0.00 :   76c39:  test   %r15d,%r15d
    0.00 :   76c3c:  jne    77276 <__vfprintf_internal+0x2246>
         : 2171  ./stdio-common/vfprintf-internal.c:1516 (discriminator 239)
    0.00 :   76c42:  mov    %r12d,(%rax)
    0.00 :   76c45:  jmp    75f80 <__vfprintf_internal+0xf50>
    0.00 :   76c4a:  nopw   0x0(%rax,%rax,1)
         : 2175  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76c50:  mov    0x8(%rsi),%rdx
    0.00 :   76c54:  lea    0x8(%rdx),%rax
    0.00 :   76c58:  mov    %rax,0x8(%rsi)
    0.00 :   76c5c:  jmp    75e41 <__vfprintf_internal+0xe11>
    0.00 :   76c61:  nopl   0x0(%rax)
         : 2181  ./stdio-common/vfprintf-internal.c:1376 (discriminator 4)
    0.00 :   76c68:  mov    0x70(%rsp),%rbx
    0.00 :   76c6d:  jmp    *%rsi
    0.00 :   76c6f:  nop
    0.00 :   76c70:  mov    %rsi,%rdi
         : 2186  ./stdio-common/vfprintf-internal.c:1392
    0.00 :   76c73:  mov    %ecx,%esi
    0.00 :   76c75:  add    $0x8,%ecx
    0.00 :   76c78:  mov    %ecx,(%rdi)
    0.00 :   76c7a:  add    0x10(%rdi),%rsi
    0.00 :   76c7e:  jmp    76254 <__vfprintf_internal+0x1224>
         : 2192  ./stdio-common/vfprintf-internal.c:1516 (discriminator 218)
    0.00 :   76c83:  mov    $0x5,%eax
    0.00 :   76c88:  lea    0x161c06(%rip),%r15        # 1d8895 <not_available+0x317>
    0.00 :   76c8f:  cmp    %eax,%r14d
    0.00 :   76c92:  cmovl  %eax,%r14d
         : 2197  ./stdio-common/vfprintf-internal.c:1517 (discriminator 218)
    0.00 :   76c96:  cmp    $0x53,%r13b
    0.00 :   76c9a:  jne    758cb <__vfprintf_internal+0x89b>
         : 2200  ./stdio-common/vfprintf-internal.c:1517 (discriminator 41)
    0.00 :   76ca0:  mov    0x28(%rsp),%r8d
    0.00 :   76ca5:  mov    0x10(%rsp),%ecx
    0.00 :   76ca9:  mov    %r12d,%r9d
    0.00 :   76cac:  mov    %r14d,%edx
    0.00 :   76caf:  mov    %r15,%rsi
    0.00 :   76cb2:  mov    %rbp,%rdi
    0.00 :   76cb5:  call   72680 <outstring_converted_wide_string>
    0.00 :   76cba:  mov    %eax,%r12d
    0.00 :   76cbd:  test   %eax,%eax
    0.00 :   76cbf:  jns    75f80 <__vfprintf_internal+0xf50>
    0.00 :   76cc5:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   76cca:  nopw   0x0(%rax,%rax,1)
         : 2213  ./stdio-common/vfprintf-internal.c:1418 (discriminator 1)
  100.00 :   76cd0:  movsbl %r13b,%esi
    0.00 :   76cd4:  lea    0x15a905(%rip),%rbx        # 1d15e0 <step1_jumps.8>
    0.00 :   76cdb:  sub    $0x20,%esi
    0.00 :   76cde:  movslq %esi,%rsi
    0.00 :   76ce1:  movzbl (%rax,%rsi,1),%esi
    0.00 :   76ce5:  movslq (%rbx,%rsi,4),%rsi
    0.00 :   76ce9:  lea    -0x1580(%rip),%rbx        # 75770 <__vfprintf_internal+0x740>
    0.00 :   76cf0:  add    %rbx,%rsi
    0.00 :   76cf3:  mov    %rcx,%rbx
    0.00 :   76cf6:  jmp    *%rsi
    0.00 :   76cf8:  nopl   0x0(%rax,%rax,1)
         : 2225  ./stdio-common/vfprintf-internal.c:1555
    0.00 :   76d00:  mov    0x8(%rsi),%rdx
    0.00 :   76d04:  lea    0x8(%rdx),%rax
    0.00 :   76d08:  mov    %rax,0x8(%rsi)
    0.00 :   76d0c:  jmp    755cf <__vfprintf_internal+0x59f>
    0.00 :   76d11:  nopl   0x0(%rax)
         : 2231  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76d18:  mov    0x8(%rdi),%rdx
    0.00 :   76d1c:  lea    0x8(%rdx),%rax
    0.00 :   76d20:  mov    %rax,0x8(%rdi)
    0.00 :   76d24:  jmp    757df <__vfprintf_internal+0x7af>
         : 2236  ./stdio-common/vfprintf-internal.c:1517 (discriminator 43)
    0.00 :   76d29:  mov    %r15,%rdi
    0.00 :   76d2c:  call   28490 <*ABS*+0xa86a0@plt>
    0.00 :   76d31:  mov    %rax,%r14
    0.00 :   76d34:  jmp    758d9 <__vfprintf_internal+0x8a9>
         : 2241  pad_func():
         : 2242  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76d39:  movslq %r13d,%rdx
    0.00 :   76d3c:  mov    $0x20,%esi
    0.00 :   76d41:  mov    %rbp,%rdi
    0.00 :   76d44:  mov    %rdx,0x10(%rsp)
    0.00 :   76d49:  call   806a0 <_IO_padn>
         : 2248  ./stdio-common/vfprintf-internal.c:200
    0.00 :   76d4e:  mov    0x10(%rsp),%rdx
    0.00 :   76d53:  cmp    %rax,%rdx
    0.00 :   76d56:  jne    76728 <__vfprintf_internal+0x16f8>
         : 2252  done_add_func():
         : 2253  ./stdio-common/vfprintf-internal.c:127
    0.00 :   76d5c:  add    %r13d,%r12d
    0.00 :   76d5f:  js     75860 <__vfprintf_internal+0x830>
    0.00 :   76d65:  cmp    %r13d,%r12d
    0.00 :   76d68:  jb     75860 <__vfprintf_internal+0x830>
         : 2258  __vfprintf_internal():
         : 2259  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76d6e:  test   %r12d,%r12d
    0.00 :   76d71:  jns    75655 <__vfprintf_internal+0x625>
    0.00 :   76d77:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   76d7c:  nopl   0x0(%rax)
         : 2264  ./stdio-common/vfprintf-internal.c:1555
    0.00 :   76d80:  mov    0x8(%rcx),%rax
    0.00 :   76d84:  mov    %rax,0x10(%rsp)
    0.00 :   76d89:  add    $0xf,%rax
    0.00 :   76d8d:  and    $0xfffffffffffffff0,%rax
    0.00 :   76d91:  lea    0x10(%rax),%rdx
    0.00 :   76d95:  mov    %rdx,0x8(%rcx)
    0.00 :   76d99:  jmp    754e7 <__vfprintf_internal+0x4b7>
         : 2272  ./stdio-common/vfprintf-internal.c:1516 (discriminator 236)
    0.00 :   76d9e:  mov    %r12b,(%rax)
    0.00 :   76da1:  jmp    75f80 <__vfprintf_internal+0xf50>
         : 2275  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76da6:  mov    0x8(%rdi),%rdx
    0.00 :   76daa:  lea    0x8(%rdx),%rax
    0.00 :   76dae:  mov    %rax,0x8(%rdi)
    0.00 :   76db2:  jmp    75f48 <__vfprintf_internal+0xf18>
         : 2280  ./stdio-common/vfprintf-internal.c:1516 (discriminator 19)
    0.00 :   76db7:  test   %r15d,%r15d
    0.00 :   76dba:  jne    7727f <__vfprintf_internal+0x224f>
         : 2283  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   76dc0:  cmp    $0x2f,%eax
    0.00 :   76dc3:  ja     77401 <__vfprintf_internal+0x23d1>
    0.00 :   76dc9:  mov    %eax,%edx
    0.00 :   76dcb:  add    $0x8,%eax
    0.00 :   76dce:  add    0x10(%rsi),%rdx
    0.00 :   76dd2:  mov    %eax,(%rsi)
    0.00 :   76dd4:  movslq (%rdx),%r10
    0.00 :   76dd7:  jmp    76ad0 <__vfprintf_internal+0x1aa0>
    0.00 :   76ddc:  mov    %eax,%edx
    0.00 :   76dde:  add    $0x8,%eax
    0.00 :   76de1:  add    0x10(%rdi),%rdx
    0.00 :   76de5:  mov    %eax,(%rdi)
    0.00 :   76de7:  jmp    76b05 <__vfprintf_internal+0x1ad5>
    0.00 :   76dec:  mov    0x8(%rdi),%rdx
    0.00 :   76df0:  lea    0x8(%rdx),%rax
    0.00 :   76df4:  mov    %rax,0x8(%rdi)
    0.00 :   76df8:  jmp    76835 <__vfprintf_internal+0x1805>
         : 2301  pad_func():
         : 2302  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76dfd:  movslq %r13d,%rdx
    0.00 :   76e00:  mov    $0x20,%esi
    0.00 :   76e05:  mov    %rbp,%rdi
    0.00 :   76e08:  mov    %rdx,0x10(%rsp)
    0.00 :   76e0d:  call   806a0 <_IO_padn>
         : 2308  ./stdio-common/vfprintf-internal.c:200
    0.00 :   76e12:  mov    0x10(%rsp),%rdx
    0.00 :   76e17:  cmp    %rax,%rdx
    0.00 :   76e1a:  jne    76728 <__vfprintf_internal+0x16f8>
         : 2312  done_add_func():
         : 2313  ./stdio-common/vfprintf-internal.c:127
    0.00 :   76e20:  add    %r13d,%r12d
    0.00 :   76e23:  js     75860 <__vfprintf_internal+0x830>
    0.00 :   76e29:  cmp    %r13d,%r12d
    0.00 :   76e2c:  jb     75860 <__vfprintf_internal+0x830>
         : 2318  __vfprintf_internal():
         : 2319  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76e32:  test   %r12d,%r12d
    0.00 :   76e35:  jns    758fa <__vfprintf_internal+0x8ca>
    0.00 :   76e3b:  jmp    7533d <__vfprintf_internal+0x30d>
         : 2323  read_int():
         : 2324  ./stdio-common/printf-parse.h:78
    0.00 :   76e40:  movzbl 0x1(%rcx),%edi
    0.00 :   76e44:  add    $0x2,%rbx
    0.00 :   76e48:  mov    %edi,%r13d
    0.00 :   76e4b:  sub    $0x30,%edi
    0.00 :   76e4e:  cmp    $0x9,%edi
    0.00 :   76e51:  ja     75ee6 <__vfprintf_internal+0xeb6>
    0.00 :   76e57:  movzbl 0x1(%rbx),%ecx
    0.00 :   76e5b:  add    $0x1,%rbx
    0.00 :   76e5f:  mov    %ecx,%r13d
    0.00 :   76e62:  sub    $0x30,%ecx
         : 2335  ./stdio-common/printf-parse.h:81
    0.00 :   76e65:  cmp    $0xccccccc,%r14d
    0.00 :   76e6c:  jg     76f80 <__vfprintf_internal+0x1f50>
         : 2338  ./stdio-common/printf-parse.h:87
    0.00 :   76e72:  lea    (%r14,%r14,4),%r14d
         : 2340  ./stdio-common/printf-parse.h:88
    0.00 :   76e76:  mov    %r9d,%esi
         : 2342  ./stdio-common/printf-parse.h:87
    0.00 :   76e79:  add    %r14d,%r14d
         : 2344  ./stdio-common/printf-parse.h:88
    0.00 :   76e7c:  sub    %edi,%esi
    0.00 :   76e7e:  cmp    %esi,%r14d
    0.00 :   76e81:  jg     76f80 <__vfprintf_internal+0x1f50>
         : 2348  ./stdio-common/printf-parse.h:91
    0.00 :   76e87:  add    %edi,%r14d
         : 2350  ./stdio-common/printf-parse.h:78
    0.00 :   76e8a:  cmp    $0x9,%ecx
    0.00 :   76e8d:  ja     75ee6 <__vfprintf_internal+0xeb6>
    0.00 :   76e93:  mov    %ecx,%edi
    0.00 :   76e95:  jmp    76e57 <__vfprintf_internal+0x1e27>
         : 2355  pad_func():
         : 2356  ./stdio-common/vfprintf-internal.c:192
    0.00 :   76e97:  test   %r13d,%r13d
    0.00 :   76e9a:  jle    757c4 <__vfprintf_internal+0x794>
         : 2359  ./stdio-common/vfprintf-internal.c:196
    0.00 :   76ea0:  movslq %r13d,%r14
    0.00 :   76ea3:  mov    $0x20,%esi
    0.00 :   76ea8:  mov    %rbp,%rdi
    0.00 :   76eab:  mov    %r14,%rdx
    0.00 :   76eae:  call   806a0 <_IO_padn>
         : 2365  ./stdio-common/vfprintf-internal.c:200
    0.00 :   76eb3:  cmp    %rax,%r14
    0.00 :   76eb6:  jne    76728 <__vfprintf_internal+0x16f8>
         : 2368  done_add_func():
         : 2369  ./stdio-common/vfprintf-internal.c:127
    0.00 :   76ebc:  add    %r13d,%r12d
    0.00 :   76ebf:  js     75860 <__vfprintf_internal+0x830>
    0.00 :   76ec5:  cmp    %r13d,%r12d
    0.00 :   76ec8:  jb     75860 <__vfprintf_internal+0x830>
         : 2374  __vfprintf_internal():
         : 2375  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76ece:  test   %r12d,%r12d
    0.00 :   76ed1:  jns    757c4 <__vfprintf_internal+0x794>
    0.00 :   76ed7:  jmp    7533d <__vfprintf_internal+0x30d>
    0.00 :   76edc:  nopl   0x0(%rax)
         : 2380  ./stdio-common/vfprintf-internal.c:1260 (discriminator 7)
    0.00 :   76ee0:  call   91230 <__lll_lock_wait_private>
    0.00 :   76ee5:  jmp    75567 <__vfprintf_internal+0x537>
         : 2383  ./stdio-common/vfprintf-internal.c:1516 (discriminator 225)
    0.00 :   76eea:  mov    0x8(%rsp),%r14
    0.00 :   76eef:  mov    %r10d,0x28(%rsp)
    0.00 :   76ef4:  mov    %r11d,0x10(%rsp)
    0.00 :   76ef9:  mov    %r14,%rdi
    0.00 :   76efc:  call   28490 <*ABS*+0xa86a0@plt>
    0.00 :   76f01:  mov    %r14,%rdi
    0.00 :   76f04:  lea    0x1(%rax),%rsi
    0.00 :   76f08:  call   135110 <__readonly_area>
    0.00 :   76f0d:  mov    0x10(%rsp),%r11d
    0.00 :   76f12:  mov    0x28(%rsp),%r10d
    0.00 :   76f17:  test   %eax,%eax
    0.00 :   76f19:  mov    %eax,0xa0(%rsp)
    0.00 :   76f20:  jns    75e26 <__vfprintf_internal+0xdf6>
         : 2397  ./stdio-common/vfprintf-internal.c:1516 (discriminator 228)
    0.00 :   76f26:  lea    0x1668eb(%rip),%rdi        # 1dd818 <__PRETTY_FUNCTION__.0+0x1d0>
    0.00 :   76f2d:  call   896d0 <__libc_fatal>
    0.00 :   76f32:  nopw   0x0(%rax,%rax,1)
    0.00 :   76f38:  mov    $0x6,%eax
         : 2402  ./stdio-common/vfprintf-internal.c:1517
    0.00 :   76f3d:  mov    $0x6,%r14d
    0.00 :   76f43:  lea    0x161951(%rip),%r15        # 1d889b <null>
    0.00 :   76f4a:  jmp    758d9 <__vfprintf_internal+0x8a9>
         : 2406  ./stdio-common/vfprintf-internal.c:1516 (discriminator 138)
    0.00 :   76f4f:  mov    $0x30,%esi
    0.00 :   76f54:  mov    %rbp,%rdi
    0.00 :   76f57:  mov    %r8d,0x28(%rsp)
    0.00 :   76f5c:  mov    %r9,0x10(%rsp)
    0.00 :   76f61:  call   8d800 <__overflow>
    0.00 :   76f66:  mov    0x10(%rsp),%r9
    0.00 :   76f6b:  mov    0x28(%rsp),%r8d
    0.00 :   76f70:  cmp    $0xffffffff,%eax
    0.00 :   76f73:  jne    75c37 <__vfprintf_internal+0xc07>
    0.00 :   76f79:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   76f7e:  xchg   %ax,%ax
         : 2418  read_int():
         : 2419  ./stdio-common/printf-parse.h:78
    0.00 :   76f80:  cmp    $0x9,%ecx
    0.00 :   76f83:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   76f89:  movzbl 0x1(%rbx),%eax
    0.00 :   76f8d:  sub    $0x30,%eax
    0.00 :   76f90:  cmp    $0x9,%eax
    0.00 :   76f93:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   76f99:  movzbl 0x2(%rbx),%eax
    0.00 :   76f9d:  sub    $0x30,%eax
    0.00 :   76fa0:  cmp    $0x9,%eax
    0.00 :   76fa3:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   76fa9:  add    $0x3,%rbx
    0.00 :   76fad:  nopl   (%rax)
    0.00 :   76fb0:  movzbl (%rbx),%eax
    0.00 :   76fb3:  add    $0x1,%rbx
    0.00 :   76fb7:  sub    $0x30,%eax
    0.00 :   76fba:  cmp    $0x9,%eax
    0.00 :   76fbd:  jbe    76fb0 <__vfprintf_internal+0x1f80>
    0.00 :   76fbf:  jmp    75860 <__vfprintf_internal+0x830>
    0.00 :   76fc4:  nopl   0x0(%rax)
         : 2439  __vfprintf_internal():
         : 2440  ./stdio-common/vfprintf-internal.c:1516 (discriminator 25)
    0.00 :   76fc8:  movl   $0xa,0x60(%rsp)
    0.00 :   76fd0:  neg    %r11
    0.00 :   76fd3:  mov    $0x1,%r10d
    0.00 :   76fd9:  jmp    75a66 <__vfprintf_internal+0xa36>
    0.00 :   76fde:  xchg   %ax,%ax
         : 2446  outstring_func():
         : 2447  ./stdio-common/vfprintf-internal.c:239
    0.00 :   76fe0:  mov    0xd8(%rbp),%r13
         : 2449  IO_validate_vtable():
         : 2450  ./stdio-common/../libio/libioP.h:942
    0.00 :   76fe7:  lea    0x19ea12(%rip),%rdx        # 215a00 <_IO_helper_jumps>
    0.00 :   76fee:  mov    %r13,%rax
    0.00 :   76ff1:  sub    %rdx,%rax
         : 2454  ./stdio-common/../libio/libioP.h:943
    0.00 :   76ff4:  cmp    %rax,0x30(%rsp)
    0.00 :   76ff9:  jbe    77459 <__vfprintf_internal+0x2429>
         : 2457  outstring_func():
         : 2458  ./stdio-common/vfprintf-internal.c:239
    0.00 :   76fff:  mov    %r14,%rdx
    0.00 :   77002:  mov    %r15,%rsi
    0.00 :   77005:  mov    %rbp,%rdi
    0.00 :   77008:  call   *0x38(%r13)
    0.00 :   7700c:  cmp    %r14,%rax
    0.00 :   7700f:  jne    76728 <__vfprintf_internal+0x16f8>
         : 2465  done_add_func():
         : 2466  ./stdio-common/vfprintf-internal.c:127
    0.00 :   77015:  movslq %r12d,%rax
    0.00 :   77018:  xor    %edx,%edx
    0.00 :   7701a:  add    %r14,%rax
    0.00 :   7701d:  js     77028 <__vfprintf_internal+0x1ff8>
    0.00 :   7701f:  cmp    %r14,%rax
    0.00 :   77022:  jae    75cc9 <__vfprintf_internal+0xc99>
    0.00 :   77028:  mov    $0x1,%edx
    0.00 :   7702d:  jmp    75cc9 <__vfprintf_internal+0xc99>
    0.00 :   77032:  nopw   0x0(%rax,%rax,1)
         : 2476  __vfprintf_internal():
         : 2477  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   77038:  mov    0x70(%rsp),%rdx
    0.00 :   7703d:  mov    $0x0,%eax
    0.00 :   77042:  sub    %r15,%rdx
    0.00 :   77045:  cmovs  %rax,%rdx
    0.00 :   77049:  mov    %edx,%r14d
    0.00 :   7704c:  jmp    7659d <__vfprintf_internal+0x156d>
    0.00 :   77051:  nopl   0x0(%rax)
         : 2485  ./stdio-common/vfprintf-internal.c:1516 (discriminator 113)
    0.00 :   77058:  mov    0x58(%rsp),%ecx
    0.00 :   7705c:  test   %ecx,%ecx
    0.00 :   7705e:  je     75c02 <__vfprintf_internal+0xbd2>
         : 2489  ./stdio-common/vfprintf-internal.c:1516 (discriminator 122)
    0.00 :   77064:  mov    0x28(%rbp),%rax
    0.00 :   77068:  cmp    0x30(%rbp),%rax
    0.00 :   7706c:  jae    7747c <__vfprintf_internal+0x244c>
         : 2493  ./stdio-common/vfprintf-internal.c:1516 (discriminator 125)
    0.00 :   77072:  lea    0x1(%rax),%rdx
    0.00 :   77076:  mov    %rdx,0x28(%rbp)
    0.00 :   7707a:  movb   $0x20,(%rax)
    0.00 :   7707d:  jmp    75bf1 <__vfprintf_internal+0xbc1>
    0.00 :   77082:  nopw   0x0(%rax,%rax,1)
         : 2499  ./stdio-common/vfprintf-internal.c:1427
    0.00 :   77088:  movzbl 0x2(%rbx),%ecx
         : 2501  ./stdio-common/vfprintf-internal.c:1426
    0.00 :   7708c:  lea    0x2(%rbx),%rsi
    0.00 :   77090:  mov    %rsi,0x70(%rsp)
         : 2504  ./stdio-common/vfprintf-internal.c:1427
    0.00 :   77095:  sub    $0x30,%ecx
    0.00 :   77098:  cmp    $0x9,%ecx
    0.00 :   7709b:  jbe    772b0 <__vfprintf_internal+0x2280>
         : 2508  ./stdio-common/vfprintf-internal.c:1442
    0.00 :   770a1:  mov    0x20(%rsp),%rbx
    0.00 :   770a6:  mov    (%rbx),%ecx
    0.00 :   770a8:  cmp    $0x2f,%ecx
    0.00 :   770ab:  jbe    771ee <__vfprintf_internal+0x21be>
    0.00 :   770b1:  mov    0x8(%rbx),%rsi
    0.00 :   770b5:  lea    0x8(%rsi),%rcx
    0.00 :   770b9:  mov    %rcx,0x8(%rbx)
         : 2516  ./stdio-common/vfprintf-internal.c:1445
    0.00 :   770bd:  mov    (%rsi),%ecx
    0.00 :   770bf:  mov    $0xffffffff,%esi
         : 2519  ./stdio-common/vfprintf-internal.c:1463
    0.00 :   770c4:  mov    0x70(%rsp),%rbx
    0.00 :   770c9:  test   %ecx,%ecx
    0.00 :   770cb:  movzbl (%rbx),%r13d
    0.00 :   770cf:  cmovns %ecx,%esi
    0.00 :   770d2:  mov    %esi,%r14d
    0.00 :   770d5:  jmp    75ee6 <__vfprintf_internal+0xeb6>
    0.00 :   770da:  nopw   0x0(%rax,%rax,1)
         : 2527  read_int():
         : 2528  ./stdio-common/printf-parse.h:78
    0.00 :   770e0:  cmp    $0x9,%edi
    0.00 :   770e3:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   770e9:  movzbl 0x1(%rcx),%eax
    0.00 :   770ed:  sub    $0x30,%eax
    0.00 :   770f0:  cmp    $0x9,%eax
    0.00 :   770f3:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   770f9:  movzbl 0x2(%rcx),%eax
    0.00 :   770fd:  sub    $0x30,%eax
    0.00 :   77100:  cmp    $0x9,%eax
    0.00 :   77103:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   77109:  add    $0x3,%rcx
    0.00 :   7710d:  nopl   (%rax)
    0.00 :   77110:  movzbl (%rcx),%eax
    0.00 :   77113:  add    $0x1,%rcx
    0.00 :   77117:  sub    $0x30,%eax
    0.00 :   7711a:  cmp    $0x9,%eax
    0.00 :   7711d:  jbe    77110 <__vfprintf_internal+0x20e0>
    0.00 :   7711f:  jmp    75860 <__vfprintf_internal+0x830>
    0.00 :   77124:  nopl   0x0(%rax)
         : 2548  __vfprintf_internal():
         : 2549  ./stdio-common/vfprintf-internal.c:1214
    0.00 :   77128:  movl   $0x0,0xa0(%rsp)
         : 2551  ./stdio-common/vfprintf-internal.c:1240
    0.00 :   77133:  movq   $0xffffffffffffffff,0x80(%rsp)
         : 2553  ./stdio-common/vfprintf-internal.c:1182
    0.00 :   7713f:  movq   $0x0,0x98(%rsp)
    0.00 :   7714b:  jmp    752df <__vfprintf_internal+0x2af>
         : 2556  ./stdio-common/vfprintf-internal.c:1516 (discriminator 247)
    0.00 :   77150:  movslq 0x90(%rsp),%r11
    0.00 :   77158:  movl   $0xa,0x60(%rsp)
    0.00 :   77160:  xor    %r10d,%r10d
    0.00 :   77163:  test   %r11d,%r11d
    0.00 :   77166:  jns    75a66 <__vfprintf_internal+0xa36>
         : 2562  ./stdio-common/vfprintf-internal.c:1516 (discriminator 249)
    0.00 :   7716c:  neg    %r11
    0.00 :   7716f:  mov    $0x1,%r10d
    0.00 :   77175:  jmp    75a66 <__vfprintf_internal+0xa36>
         : 2566  ./stdio-common/vfprintf-internal.c:1352
    0.00 :   7717a:  mov    0x60(%rsp),%rcx
    0.00 :   7717f:  mov    0x8(%rcx),%rcx
         : 2569  ./stdio-common/vfprintf-internal.c:1355
    0.00 :   77183:  mov    0x50(%rcx),%rdi
         : 2571  ./stdio-common/vfprintf-internal.c:1352
    0.00 :   77187:  mov    0x48(%rcx),%rsi
         : 2573  ./stdio-common/vfprintf-internal.c:1356
    0.00 :   7718b:  movzbl (%rdi),%ecx
         : 2575  ./stdio-common/vfprintf-internal.c:1352
    0.00 :   7718e:  mov    %rsi,0x98(%rsp)
         : 2577  ./stdio-common/vfprintf-internal.c:1356
    0.00 :   77196:  test   %cl,%cl
    0.00 :   77198:  je     77240 <__vfprintf_internal+0x2210>
    0.00 :   7719e:  cmp    $0x7f,%cl
    0.00 :   771a1:  je     77240 <__vfprintf_internal+0x2210>
         : 2582  ./stdio-common/vfprintf-internal.c:1363
    0.00 :   771a7:  xor    %ecx,%ecx
    0.00 :   771a9:  cmpb   $0x0,(%rsi)
    0.00 :   771ac:  cmovne %rdi,%rcx
    0.00 :   771b0:  mov    %rcx,0x80(%rsp)
    0.00 :   771b8:  jmp    75d03 <__vfprintf_internal+0xcd3>
    0.00 :   771bd:  mov    %r9,0x10(%rsp)
         : 2589  IO_validate_vtable():
         : 2590  ./stdio-common/../libio/libioP.h:946
    0.00 :   771c2:  call   89ef0 <_IO_vtable_check>
    0.00 :   771c7:  mov    0x10(%rsp),%r9
    0.00 :   771cc:  jmp    7650a <__vfprintf_internal+0x14da>
    0.00 :   771d1:  mov    %r9,0x10(%rsp)
    0.00 :   771d6:  call   89ef0 <_IO_vtable_check>
    0.00 :   771db:  mov    0x10(%rsp),%r9
    0.00 :   771e0:  jmp    75c9c <__vfprintf_internal+0xc6c>
         : 2598  __vfprintf_internal():
         : 2599  ./stdio-common/vfprintf-internal.c:1533
    0.00 :   771e5:  xor    %edx,%edx
    0.00 :   771e7:  xor    %ecx,%ecx
    0.00 :   771e9:  jmp    7541b <__vfprintf_internal+0x3eb>
         : 2603  ./stdio-common/vfprintf-internal.c:1442
    0.00 :   771ee:  mov    %ecx,%esi
    0.00 :   771f0:  add    $0x8,%ecx
    0.00 :   771f3:  add    0x10(%rbx),%rsi
    0.00 :   771f7:  mov    %ecx,(%rbx)
    0.00 :   771f9:  jmp    770bd <__vfprintf_internal+0x208d>
    0.00 :   771fe:  mov    %r8d,0x38(%rsp)
         : 2610  ./stdio-common/vfprintf-internal.c:1516 (discriminator 104)
    0.00 :   77203:  mov    $0x2d,%esi
    0.00 :   77208:  mov    %r9,0x28(%rsp)
    0.00 :   7720d:  mov    %r11,0x10(%rsp)
         : 2614  ./stdio-common/vfprintf-internal.c:1516 (discriminator 124)
    0.00 :   77212:  mov    %rbp,%rdi
    0.00 :   77215:  call   8d800 <__overflow>
    0.00 :   7721a:  mov    0x10(%rsp),%r11
    0.00 :   7721f:  mov    0x28(%rsp),%r9
    0.00 :   77224:  cmp    $0xffffffff,%eax
    0.00 :   77227:  mov    0x38(%rsp),%r8d
    0.00 :   7722c:  jne    75bf1 <__vfprintf_internal+0xbc1>
    0.00 :   77232:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   77237:  nopw   0x0(%rax,%rax,1)
         : 2624  ./stdio-common/vfprintf-internal.c:1363
    0.00 :   77240:  movq   $0x0,0x80(%rsp)
    0.00 :   7724c:  jmp    75d03 <__vfprintf_internal+0xcd3>
    0.00 :   77251:  mov    %rax,0x10(%rsp)
         : 2628  IO_validate_vtable():
         : 2629  ./stdio-common/../libio/libioP.h:946
    0.00 :   77256:  call   89ef0 <_IO_vtable_check>
    0.00 :   7725b:  mov    0x10(%rsp),%rax
    0.00 :   77260:  jmp    75674 <__vfprintf_internal+0x644>
         : 2633  __vfprintf_internal():
         : 2634  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   77265:  mov    0x8(%rsi),%rdx
    0.00 :   77269:  lea    0x8(%rdx),%rax
    0.00 :   7726d:  mov    %rax,0x8(%rsi)
    0.00 :   77271:  jmp    76acc <__vfprintf_internal+0x1a9c>
         : 2639  ./stdio-common/vfprintf-internal.c:1516 (discriminator 240)
    0.00 :   77276:  mov    %r12w,(%rax)
    0.00 :   7727a:  jmp    75f80 <__vfprintf_internal+0xf50>
         : 2642  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   7727f:  cmp    $0x2f,%eax
    0.00 :   77282:  ja     773f0 <__vfprintf_internal+0x23c0>
    0.00 :   77288:  mov    %eax,%edx
    0.00 :   7728a:  add    $0x8,%eax
    0.00 :   7728d:  add    0x10(%rsi),%rdx
    0.00 :   77291:  mov    %eax,(%rsi)
    0.00 :   77293:  movswq (%rdx),%r10
    0.00 :   77297:  jmp    76ad0 <__vfprintf_internal+0x1aa0>
    0.00 :   7729c:  mov    %rax,0x10(%rsp)
         : 2652  IO_validate_vtable():
         : 2653  ./stdio-common/../libio/libioP.h:946
    0.00 :   772a1:  call   89ef0 <_IO_vtable_check>
    0.00 :   772a6:  mov    0x10(%rsp),%rax
    0.00 :   772ab:  jmp    75919 <__vfprintf_internal+0x8e9>
         : 2657  read_int():
         : 2658  ./stdio-common/printf-parse.h:78
    0.00 :   772b0:  movzbl 0x1(%rsi),%esi
    0.00 :   772b4:  add    $0x3,%rbx
    0.00 :   772b8:  lea    -0x30(%rsi),%r13d
    0.00 :   772bc:  mov    %esi,%edi
    0.00 :   772be:  cmp    $0x9,%r13d
    0.00 :   772c2:  ja     77344 <__vfprintf_internal+0x2314>
    0.00 :   772c8:  movzbl 0x1(%rbx),%esi
    0.00 :   772cc:  add    $0x1,%rbx
    0.00 :   772d0:  mov    %esi,%edi
    0.00 :   772d2:  sub    $0x30,%esi
         : 2669  ./stdio-common/printf-parse.h:81
    0.00 :   772d5:  cmp    $0xccccccc,%ecx
    0.00 :   772db:  jg     77300 <__vfprintf_internal+0x22d0>
         : 2672  ./stdio-common/printf-parse.h:87
    0.00 :   772dd:  lea    (%rcx,%rcx,4),%ecx
         : 2674  ./stdio-common/printf-parse.h:88
    0.00 :   772e0:  mov    %r9d,%r14d
         : 2676  ./stdio-common/printf-parse.h:87
    0.00 :   772e3:  add    %ecx,%ecx
         : 2678  ./stdio-common/printf-parse.h:88
    0.00 :   772e5:  sub    %r13d,%r14d
    0.00 :   772e8:  cmp    %r14d,%ecx
    0.00 :   772eb:  jg     77300 <__vfprintf_internal+0x22d0>
         : 2682  ./stdio-common/printf-parse.h:91
    0.00 :   772ed:  add    %r13d,%ecx
         : 2684  ./stdio-common/printf-parse.h:78
    0.00 :   772f0:  cmp    $0x9,%esi
    0.00 :   772f3:  ja     77344 <__vfprintf_internal+0x2314>
    0.00 :   772f5:  mov    %esi,%r13d
    0.00 :   772f8:  jmp    772c8 <__vfprintf_internal+0x2298>
    0.00 :   772fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   77300:  cmp    $0x9,%esi
    0.00 :   77303:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   77309:  movzbl 0x1(%rbx),%eax
    0.00 :   7730d:  sub    $0x30,%eax
    0.00 :   77310:  cmp    $0x9,%eax
    0.00 :   77313:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   77319:  movzbl 0x2(%rbx),%eax
    0.00 :   7731d:  sub    $0x30,%eax
    0.00 :   77320:  cmp    $0x9,%eax
    0.00 :   77323:  ja     75860 <__vfprintf_internal+0x830>
    0.00 :   77329:  add    $0x3,%rbx
    0.00 :   7732d:  nopl   (%rax)
    0.00 :   77330:  movzbl (%rbx),%eax
    0.00 :   77333:  add    $0x1,%rbx
    0.00 :   77337:  sub    $0x30,%eax
    0.00 :   7733a:  cmp    $0x9,%eax
    0.00 :   7733d:  jbe    77330 <__vfprintf_internal+0x2300>
    0.00 :   7733f:  jmp    75860 <__vfprintf_internal+0x830>
         : 2708  __vfprintf_internal():
         : 2709  ./stdio-common/vfprintf-internal.c:1438 (discriminator 1)
    0.00 :   77344:  test   %ecx,%ecx
    0.00 :   77346:  je     770a1 <__vfprintf_internal+0x2071>
    0.00 :   7734c:  cmp    $0x24,%dil
    0.00 :   77350:  jne    770a1 <__vfprintf_internal+0x2071>
    0.00 :   77356:  jmp    76a88 <__vfprintf_internal+0x1a58>
    0.00 :   7735b:  nopl   0x0(%rax,%rax,1)
         : 2716  ./stdio-common/vfprintf-internal.c:1516 (discriminator 1)
    0.00 :   77360:  mov    $0x25,%esi
    0.00 :   77365:  mov    %rbp,%rdi
    0.00 :   77368:  call   8d800 <__overflow>
    0.00 :   7736d:  cmp    $0xffffffff,%eax
    0.00 :   77370:  jne    75f6d <__vfprintf_internal+0xf3d>
    0.00 :   77376:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   7737b:  nopl   0x0(%rax,%rax,1)
         : 2724  ./stdio-common/vfprintf-internal.c:1222 (discriminator 1)
    0.00 :   77380:  mov    0x1a1a89(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
    0.00 :   77387:  or     $0x20,%ebx
    0.00 :   7738a:  mov    $0xffffffff,%r12d
    0.00 :   77390:  mov    %ebx,0x0(%rbp)
    0.00 :   77393:  movl   $0x9,%fs:(%rax)
    0.00 :   7739a:  jmp    75354 <__vfprintf_internal+0x324>
    0.00 :   7739f:  mov    %r8d,0x38(%rsp)
         : 2732  ./stdio-common/vfprintf-internal.c:1516 (discriminator 114)
    0.00 :   773a4:  mov    $0x2b,%esi
    0.00 :   773a9:  mov    %r9,0x28(%rsp)
    0.00 :   773ae:  mov    %r11,0x10(%rsp)
    0.00 :   773b3:  jmp    77212 <__vfprintf_internal+0x21e2>
    0.00 :   773b8:  mov    %r9,0x40(%rsp)
         : 2738  ./stdio-common/vfprintf-internal.c:1516 (discriminator 169)
    0.00 :   773bd:  mov    $0x2b,%esi
    0.00 :   773c2:  mov    %rdx,0x38(%rsp)
    0.00 :   773c7:  mov    %r11,0x28(%rsp)
    0.00 :   773cc:  jmp    76704 <__vfprintf_internal+0x16d4>
         : 2743  ./stdio-common/vfprintf-internal.c:1517 (discriminator 8)
    0.00 :   773d1:  movzbl %dl,%esi
    0.00 :   773d4:  mov    %rbp,%rdi
    0.00 :   773d7:  call   8d800 <__overflow>
    0.00 :   773dc:  cmp    $0xffffffff,%eax
    0.00 :   773df:  jne    757f9 <__vfprintf_internal+0x7c9>
    0.00 :   773e5:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   773ea:  nopw   0x0(%rax,%rax,1)
         : 2751  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   773f0:  mov    0x8(%rsi),%rdx
    0.00 :   773f4:  lea    0x8(%rdx),%rax
    0.00 :   773f8:  mov    %rax,0x8(%rsi)
    0.00 :   773fc:  jmp    77293 <__vfprintf_internal+0x2263>
    0.00 :   77401:  mov    0x8(%rsi),%rdx
    0.00 :   77405:  lea    0x8(%rdx),%rax
    0.00 :   77409:  mov    %rax,0x8(%rsi)
    0.00 :   7740d:  jmp    76dd4 <__vfprintf_internal+0x1da4>
         : 2760  ./stdio-common/vfprintf-internal.c:1516 (discriminator 145)
    0.00 :   77412:  movzbl %r13b,%esi
    0.00 :   77416:  mov    %rbp,%rdi
    0.00 :   77419:  mov    %r8d,0x28(%rsp)
    0.00 :   7741e:  mov    %r9,0x10(%rsp)
    0.00 :   77423:  call   8d800 <__overflow>
    0.00 :   77428:  mov    0x10(%rsp),%r9
    0.00 :   7742d:  mov    0x28(%rsp),%r8d
    0.00 :   77432:  cmp    $0xffffffff,%eax
    0.00 :   77435:  jne    75c5d <__vfprintf_internal+0xc2d>
    0.00 :   7743b:  jmp    76728 <__vfprintf_internal+0x16f8>
         : 2771  ./stdio-common/vfprintf-internal.c:1222 (discriminator 3)
    0.00 :   77440:  mov    0x1a19c9(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
    0.00 :   77447:  mov    $0xffffffff,%r12d
    0.00 :   7744d:  movl   $0x16,%fs:(%rax)
    0.00 :   77454:  jmp    75354 <__vfprintf_internal+0x324>
         : 2776  IO_validate_vtable():
         : 2777  ./stdio-common/../libio/libioP.h:946
    0.00 :   77459:  call   89ef0 <_IO_vtable_check>
    0.00 :   7745e:  jmp    76fff <__vfprintf_internal+0x1fcf>
    0.00 :   77463:  mov    %r9,0x40(%rsp)
         : 2781  __vfprintf_internal():
         : 2782  ./stdio-common/vfprintf-internal.c:1516 (discriminator 179)
    0.00 :   77468:  mov    $0x20,%esi
    0.00 :   7746d:  mov    %rdx,0x38(%rsp)
    0.00 :   77472:  mov    %r11,0x28(%rsp)
    0.00 :   77477:  jmp    76704 <__vfprintf_internal+0x16d4>
    0.00 :   7747c:  mov    %r8d,0x38(%rsp)
         : 2788  ./stdio-common/vfprintf-internal.c:1516 (discriminator 124)
    0.00 :   77481:  mov    $0x20,%esi
    0.00 :   77486:  mov    %r9,0x28(%rsp)
    0.00 :   7748b:  mov    %r11,0x10(%rsp)
    0.00 :   77490:  jmp    77212 <__vfprintf_internal+0x21e2>
         : 2793  ./stdio-common/vfprintf-internal.c:1516 (discriminator 200)
    0.00 :   77495:  movzbl %r13b,%esi
    0.00 :   77499:  mov    %rbp,%rdi
    0.00 :   7749c:  mov    %r9,0x38(%rsp)
    0.00 :   774a1:  mov    %rdx,0x28(%rsp)
    0.00 :   774a6:  call   8d800 <__overflow>
    0.00 :   774ab:  mov    0x28(%rsp),%rdx
    0.00 :   774b0:  mov    0x38(%rsp),%r9
    0.00 :   774b5:  cmp    $0xffffffff,%eax
    0.00 :   774b8:  jne    769b2 <__vfprintf_internal+0x1982>
    0.00 :   774be:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   774c3:  nopl   0x0(%rax,%rax,1)
         : 2805  ./stdio-common/vfprintf-internal.c:1516 (discriminator 193)
    0.00 :   774c8:  mov    $0x30,%esi
    0.00 :   774cd:  mov    %rbp,%rdi
    0.00 :   774d0:  mov    %r9,0x38(%rsp)
    0.00 :   774d5:  mov    %rdx,0x28(%rsp)
    0.00 :   774da:  call   8d800 <__overflow>
    0.00 :   774df:  mov    0x28(%rsp),%rdx
    0.00 :   774e4:  mov    0x38(%rsp),%r9
    0.00 :   774e9:  cmp    $0xffffffff,%eax
    0.00 :   774ec:  jne    7698c <__vfprintf_internal+0x195c>
    0.00 :   774f2:  jmp    76728 <__vfprintf_internal+0x16f8>
    0.00 :   774f7:  nopw   0x0(%rax,%rax,1)
         : 2817  done_add_func():
         : 2818  ./stdio-common/vfprintf-internal.c:127
    0.00 :   77500:  mov    $0x1,%edx
    0.00 :   77505:  jmp    75fea <__vfprintf_internal+0xfba>
         : 2821  __vfprintf_internal():
         : 2822  ./stdio-common/vfprintf-internal.c:1612
    0.00 :   7750a:  call   136740 <__stack_chk_fail>
         : 2824  done_add_func():
         : 2825  ./stdio-common/vfprintf-internal.c:127
    0.00 :   7750f:  mov    $0x1,%edx
    0.00 :   77514:  jmp    76915 <__vfprintf_internal+0x18e5>
    0.00 :   77519:  mov    $0x1,%edx
    0.00 :   7751e:  jmp    76537 <__vfprintf_internal+0x1507>
    0.00 :   77523:  mov    $0x1,%eax
    0.00 :   77528:  jmp    766d3 <__vfprintf_internal+0x16a3>
    0.00 :   7752d:  mov    $0x1,%eax
    0.00 :   77532:  jmp    767b6 <__vfprintf_internal+0x1786>
    0.00 :   77537:  mov    $0x1,%edx
    0.00 :   7753c:  jmp    75945 <__vfprintf_internal+0x915>
         : 2836  __vfprintf_internal():
         : 2837  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   77541:  xor    %r8d,%r8d
    0.00 :   77544:  jmp    75c02 <__vfprintf_internal+0xbd2>
         : 2840  read_int():
         : 2841  ./stdio-common/printf-parse.h:78
    0.00 :   77549:  mov    %esi,0x10(%rsp)
    0.00 :   7754d:  movzbl 0x70(%rsp),%r13d
    0.00 :   77553:  cmp    $0x9,%edi
    0.00 :   77556:  jbe    7640d <__vfprintf_internal+0x13dd>
    0.00 :   7755c:  jmp    7642d <__vfprintf_internal+0x13fd>
         : 2847  pad_func():
         : 2848  ./stdio-common/vfprintf-internal.c:192
    0.00 :   77561:  test   %r8d,%r8d
    0.00 :   77564:  jg     76674 <__vfprintf_internal+0x1644>
         : 2851  __vfprintf_internal():
         : 2852  ./stdio-common/vfprintf-internal.c:1516
    0.00 :   7756a:  xor    %r8d,%r8d
    0.00 :   7756d:  jmp    75bcf <__vfprintf_internal+0xb9f>
         : 2855  done_add_func():
         : 2856  ./stdio-common/vfprintf-internal.c:127
    0.00 :   77572:  mov    $0x1,%eax
    0.00 :   77577:  jmp    75851 <__vfprintf_internal+0x821>
    0.00 :   7757c:  mov    $0x1,%edx
    0.00 :   77581:  jmp    756a0 <__vfprintf_internal+0x670>
    0.00 :   77586:  mov    $0x1,%eax
    0.00 :   7758b:  jmp    764da <__vfprintf_internal+0x14aa>
         : 2863  __vfprintf_internal():
         : 2864  ./stdio-common/vfprintf-internal.c:1259
    0.00 :   77590:  movb   $0x1,0xa6(%rsp)
    0.00 :   77598:  jmp    75100 <__vfprintf_internal+0xd0>
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000128ff0 <__mcount_internal>:
         : 6      __mcount_internal():
         : 7      ./gmon/mcount.c:60
    0.00 :   128ff0: endbr64
         : 9      ./gmon/mcount.c:72
    0.00 :   128ff4: xor    %eax,%eax
    0.00 :   128ff6: mov    $0x1,%edx
    0.00 :   128ffb: lock cmpxchg %rdx,0xf043c(%rip)        # 219440 <_gmonparam>
    0.00 :   129004: jne    1290e0 <__mcount_internal+0xf0>
         : 14     ./gmon/mcount.c:81
    0.00 :   12900a: sub    0xf046f(%rip),%rdi        # 219480 <_gmonparam+0x40>
         : 16     ./gmon/mcount.c:82
    0.00 :   129011: cmp    %rdi,0xf0478(%rip)        # 219490 <_gmonparam+0x50>
    0.00 :   129018: jb     1290af <__mcount_internal+0xbf>
         : 19     ./gmon/mcount.c:93
    0.00 :   12901e: mov    0xf047b(%rip),%rcx        # 2194a0 <_gmonparam+0x60>
         : 21     ./gmon/mcount.c:97
    0.00 :   129025: mov    0xf042c(%rip),%rax        # 219458 <_gmonparam+0x18>
         : 23     ./gmon/mcount.c:93
    0.00 :   12902c: shr    %cl,%rdi
         : 25     ./gmon/mcount.c:97
    0.00 :   12902f: movslq %edi,%rdi
    0.00 :   129032: lea    (%rax,%rdi,8),%r8
         : 28     ./gmon/mcount.c:103
    0.00 :   129036: mov    0xf042b(%rip),%rdi        # 219468 <_gmonparam+0x28>
         : 30     ./gmon/mcount.c:98
    0.00 :   12903d: mov    (%r8),%rax
         : 32     ./gmon/mcount.c:99
    0.00 :   129040: test   %rax,%rax
    0.00 :   129043: je     1290c0 <__mcount_internal+0xd0>
         : 35     ./gmon/mcount.c:115
    0.00 :   129045: lea    (%rax,%rax,2),%rax
    0.00 :   129049: lea    (%rdi,%rax,8),%rcx
         : 38     ./gmon/mcount.c:116
  100.00 :   12904d: cmp    %rsi,(%rcx)
    0.00 :   129050: jne    129074 <__mcount_internal+0x84>
    0.00 :   129052: jmp    129140 <__mcount_internal+0x150>
    0.00 :   129057: nopw   0x0(%rax,%rax,1)
         : 43     ./gmon/mcount.c:152
    0.00 :   129060: lea    (%rax,%rax,2),%rdx
    0.00 :   129064: lea    (%rdi,%rdx,8),%rdx
         : 46     ./gmon/mcount.c:153
    0.00 :   129068: cmp    %rsi,(%rdx)
    0.00 :   12906b: je     129118 <__mcount_internal+0x128>
    0.00 :   129071: mov    %rdx,%rcx
         : 50     ./gmon/mcount.c:130
    0.00 :   129074: mov    0x10(%rcx),%rax
    0.00 :   129078: test   %rax,%rax
    0.00 :   12907b: jne    129060 <__mcount_internal+0x70>
         : 54     ./gmon/mcount.c:137
    0.00 :   12907d: mov    0x10(%rdi),%rax
    0.00 :   129081: add    $0x1,%rax
         : 57     ./gmon/mcount.c:138
    0.00 :   129085: cmp    0xf03ec(%rip),%rax        # 219478 <_gmonparam+0x38>
         : 59     ./gmon/mcount.c:137
    0.00 :   12908c: mov    %rax,0x10(%rdi)
         : 61     ./gmon/mcount.c:138
    0.00 :   129090: jae    1290d5 <__mcount_internal+0xe5>
         : 63     ./gmon/mcount.c:141
    0.00 :   129092: lea    (%rax,%rax,2),%rdx
    0.00 :   129096: lea    (%rdi,%rdx,8),%rdx
         : 66     ./gmon/mcount.c:142
    0.00 :   12909a: mov    %rsi,(%rdx)
         : 68     ./gmon/mcount.c:143
    0.00 :   12909d: movq   $0x1,0x8(%rdx)
         : 70     ./gmon/mcount.c:144
    0.00 :   1290a5: mov    (%r8),%rcx
    0.00 :   1290a8: mov    %rcx,0x10(%rdx)
         : 73     ./gmon/mcount.c:145
    0.00 :   1290ac: mov    %rax,(%r8)
         : 75     ./gmon/mcount.c:169
    0.00 :   1290af: movq   $0x0,0xf0386(%rip)        # 219440 <_gmonparam>
         : 77     ./gmon/mcount.c:170
    0.00 :   1290ba: ret
    0.00 :   1290bb: nopl   0x0(%rax,%rax,1)
         : 80     ./gmon/mcount.c:103
    0.00 :   1290c0: mov    0x10(%rdi),%rax
    0.00 :   1290c4: add    $0x1,%rax
         : 83     ./gmon/mcount.c:104
    0.00 :   1290c8: cmp    0xf03a9(%rip),%rax        # 219478 <_gmonparam+0x38>
         : 85     ./gmon/mcount.c:103
    0.00 :   1290cf: mov    %rax,0x10(%rdi)
         : 87     ./gmon/mcount.c:104
    0.00 :   1290d3: jb     1290e8 <__mcount_internal+0xf8>
         : 89     ./gmon/mcount.c:172
    0.00 :   1290d5: movq   $0x2,0xf0360(%rip)        # 219440 <_gmonparam>
         : 91     ./gmon/mcount.c:174
    0.00 :   1290e0: ret
    0.00 :   1290e1: nopl   0x0(%rax)
         : 94     ./gmon/mcount.c:108
    0.00 :   1290e8: mov    %rax,(%r8)
         : 96     ./gmon/mcount.c:109
    0.00 :   1290eb: lea    (%rax,%rax,2),%rax
    0.00 :   1290ef: lea    (%rdi,%rax,8),%rax
         : 99     ./gmon/mcount.c:110
    0.00 :   1290f3: mov    %rsi,(%rax)
         : 101    ./gmon/mcount.c:111
    0.00 :   1290f6: movq   $0x1,0x8(%rax)
         : 103    ./gmon/mcount.c:112
    0.00 :   1290fe: movq   $0x0,0x10(%rax)
         : 105    ./gmon/mcount.c:169
    0.00 :   129106: movq   $0x0,0xf032f(%rip)        # 219440 <_gmonparam>
         : 107    ./gmon/mcount.c:170
    0.00 :   129111: ret
    0.00 :   129112: nopw   0x0(%rax,%rax,1)
         : 110    ./gmon/mcount.c:161
    0.00 :   129118: mov    0x10(%rdx),%rsi
         : 112    ./gmon/mcount.c:159
    0.00 :   12911c: addq   $0x1,0x8(%rdx)
         : 114    ./gmon/mcount.c:161
    0.00 :   129121: mov    %rsi,0x10(%rcx)
         : 116    ./gmon/mcount.c:162
    0.00 :   129125: mov    (%r8),%rcx
    0.00 :   129128: mov    %rcx,0x10(%rdx)
         : 119    ./gmon/mcount.c:163
    0.00 :   12912c: mov    %rax,(%r8)
         : 121    ./gmon/mcount.c:169
    0.00 :   12912f: movq   $0x0,0xf0306(%rip)        # 219440 <_gmonparam>
         : 123    ./gmon/mcount.c:170
    0.00 :   12913a: ret
    0.00 :   12913b: nopl   0x0(%rax,%rax,1)
         : 126    ./gmon/mcount.c:120
    0.00 :   129140: addq   $0x1,0x8(%rcx)
         : 128    ./gmon/mcount.c:121
    0.00 :   129145: jmp    1290af <__mcount_internal+0xbf>
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000005a930 <__GI___printf_fp_l>:
         : 6     __GI___printf_fp_l():
         : 7     ./stdio-common/printf_fp.c:216
    0.00 :   5a930:  endbr64
    0.00 :   5a934:  push   %rbp
    0.00 :   5a935:  mov    %rsp,%rbp
    0.00 :   5a938:  push   %r15
    0.00 :   5a93a:  push   %r14
    0.00 :   5a93c:  push   %r13
    0.00 :   5a93e:  push   %r12
    0.00 :   5a940:  mov    %rdi,%r12
    0.00 :   5a943:  mov    %rdx,%rdi
    0.00 :   5a946:  push   %rbx
    0.00 :   5a947:  sub    $0x128,%rsp
    0.00 :   5a94e:  mov    %rdx,-0xb8(%rbp)
    0.00 :   5a955:  mov    %rsi,-0xf8(%rbp)
    0.00 :   5a95c:  mov    %fs:0x28,%rax
    0.00 :   5a965:  mov    %rax,-0x38(%rbp)
    0.00 :   5a969:  xor    %eax,%eax
         : 24    ./stdio-common/printf_fp.c:266
    0.00 :   5a96b:  movzbl 0xd(%rdx),%eax
         : 26    ./stdio-common/printf_fp.c:257
    0.00 :   5a96f:  movl   $0x0,-0xa4(%rbp)
         : 28    ./stdio-common/printf_fp.c:274
    0.00 :   5a979:  movl   $0x0,-0xa0(%rbp)
         : 30    ./stdio-common/printf_fp.c:266
    0.00 :   5a983:  mov    %eax,%edx
    0.00 :   5a985:  shr    $0x2,%dl
    0.00 :   5a988:  mov    %edx,%ebx
         : 34    ./stdio-common/printf_fp.c:298
    0.00 :   5a98a:  movzbl 0xc(%rdi),%edx
         : 36    ./stdio-common/printf_fp.c:277
    0.00 :   5a98e:  mov    %eax,%edi
         : 38    ./stdio-common/printf_fp.c:266
    0.00 :   5a990:  and    $0x1,%ebx
    0.00 :   5a993:  mov    %ebx,-0xbc(%rbp)
         : 41    ./stdio-common/printf_fp.c:277
    0.00 :   5a999:  and    $0x1,%edi
    0.00 :   5a99c:  jne    5ab50 <__GI___printf_fp_l+0x220>
         : 44    _nl_lookup():
         : 45    ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5a9a2:  mov    0x8(%rsi),%rsi
    0.00 :   5a9a6:  mov    0x40(%rsi),%rbx
    0.00 :   5a9aa:  mov    %rbx,-0x108(%rbp)
         : 49    __GI___printf_fp_l():
         : 50    ./stdio-common/printf_fp.c:280
    0.00 :   5a9b1:  mov    0x58(%rsi),%ebx
    0.00 :   5a9b4:  mov    %ebx,-0xc0(%rbp)
         : 53    ./stdio-common/printf_fp.c:298
    0.00 :   5a9ba:  test   %dl,%dl
    0.00 :   5a9bc:  js     5acf0 <__GI___printf_fp_l+0x3c0>
         : 56    ./stdio-common/printf_fp.c:306
    0.00 :   5a9c2:  movq   $0x0,-0xe8(%rbp)
         : 58    ./stdio-common/printf_fp.c:234
    0.00 :   5a9cd:  movl   $0x0,-0x114(%rbp)
         : 60    ./stdio-common/printf_fp.c:233
    0.00 :   5a9d7:  movq   $0x0,-0x110(%rbp)
         : 62    ./stdio-common/printf_fp.c:388
    0.00 :   5a9e2:  mov    (%rcx),%rcx
         : 64    ./stdio-common/printf_fp.c:387
    0.00 :   5a9e5:  test   $0x10,%al
    0.00 :   5a9e7:  je     5ac28 <__GI___printf_fp_l+0x2f8>
         : 67    ./stdio-common/printf_fp.c:388
    0.00 :   5a9ed:  movdqa (%rcx),%xmm2
    0.00 :   5a9f1:  mov    %dl,-0xe0(%rbp)
    0.00 :   5a9f7:  movdqa %xmm2,%xmm1
    0.00 :   5a9fb:  movdqa %xmm2,%xmm0
    0.00 :   5a9ff:  movaps %xmm2,-0xd0(%rbp)
    0.00 :   5aa06:  call   1ba260 <__unordtf2>
    0.00 :   5aa0b:  movdqa -0xd0(%rbp),%xmm2
    0.00 :   5aa13:  movzbl -0xe0(%rbp),%edx
    0.00 :   5aa1a:  test   %rax,%rax
    0.00 :   5aa1d:  jne    5b8af <__GI___printf_fp_l+0xf7f>
         : 78    ./stdio-common/printf_fp.c:388 (discriminator 2)
    0.00 :   5aa23:  movdqa %xmm2,%xmm0
    0.00 :   5aa27:  movdqa 0x187741(%rip),%xmm1        # 1e2170 <othermask+0xe0>
    0.00 :   5aa2f:  pand   0x1876d9(%rip),%xmm0        # 1e2110 <othermask+0x80>
    0.00 :   5aa37:  movaps %xmm2,-0xd0(%rbp)
    0.00 :   5aa3e:  mov    %dl,-0xf0(%rbp)
    0.00 :   5aa44:  movaps %xmm0,-0xe0(%rbp)
    0.00 :   5aa4b:  call   1ba260 <__unordtf2>
    0.00 :   5aa50:  movdqa -0xd0(%rbp),%xmm2
    0.00 :   5aa58:  test   %rax,%rax
    0.00 :   5aa5b:  jne    5b7a8 <__GI___printf_fp_l+0xe78>
    0.00 :   5aa61:  movdqa 0x187707(%rip),%xmm1        # 1e2170 <othermask+0xe0>
    0.00 :   5aa69:  movdqa -0xe0(%rbp),%xmm0
    0.00 :   5aa71:  call   1ba660 <__letf2>
    0.00 :   5aa76:  movdqa -0xd0(%rbp),%xmm2
    0.00 :   5aa7e:  test   %rax,%rax
    0.00 :   5aa81:  jle    5b7a8 <__GI___printf_fp_l+0xe78>
         : 95    ./stdio-common/printf_fp.c:388 (discriminator 5)
    0.00 :   5aa87:  mov    -0xb8(%rbp),%rax
    0.00 :   5aa8e:  movmskps %xmm2,%r13d
    0.00 :   5aa92:  lea    0x17dc8e(%rip),%r14        # 1d8727 <not_available+0x1a9>
    0.00 :   5aa99:  movzbl -0xf0(%rbp),%edx
    0.00 :   5aaa0:  and    $0x8,%r13d
    0.00 :   5aaa4:  movslq 0x8(%rax),%rcx
    0.00 :   5aaa8:  mov    0x1be349(%rip),%rax        # 218df8 <_DYNAMIC+0x238>
    0.00 :   5aaaf:  mov    %r13d,-0xa4(%rbp)
    0.00 :   5aab6:  mov    %fs:(%rax),%rax
    0.00 :   5aaba:  testb  $0x1,0x1(%rax,%rcx,2)
    0.00 :   5aabf:  lea    0x187f6a(%rip),%rax        # 1e2a30 <default_rwlockattr+0x358>
    0.00 :   5aac6:  lea    0x187f43(%rip),%rcx        # 1e2a10 <default_rwlockattr+0x338>
    0.00 :   5aacd:  cmove  %rax,%rcx
    0.00 :   5aad1:  lea    0x17db12(%rip),%rax        # 1d85ea <not_available+0x6c>
    0.00 :   5aad8:  cmove  %rax,%r14
         : 111   ./stdio-common/printf_fp.c:402
    0.00 :   5aadc:  mov    -0xb8(%rbp),%rax
    0.00 :   5aae3:  mov    0x4(%rax),%ebx
         : 114   ./stdio-common/printf_fp.c:408
    0.00 :   5aae6:  mov    %edx,%eax
    0.00 :   5aae8:  shr    $0x5,%al
    0.00 :   5aaeb:  xor    $0x1,%eax
    0.00 :   5aaee:  and    $0x1,%eax
         : 119   ./stdio-common/printf_fp.c:404
    0.00 :   5aaf1:  test   %r13d,%r13d
    0.00 :   5aaf4:  je     5ada8 <__GI___printf_fp_l+0x478>
         : 122   ./stdio-common/printf_fp.c:406
    0.00 :   5aafa:  sub    $0x4,%ebx
         : 124   ./stdio-common/printf_fp.c:408
    0.00 :   5aafd:  test   %ebx,%ebx
    0.00 :   5aaff:  setg   %r15b
    0.00 :   5ab03:  jle    5ab0d <__GI___printf_fp_l+0x1dd>
    0.00 :   5ab05:  test   %al,%al
    0.00 :   5ab07:  jne    5ad00 <__GI___printf_fp_l+0x3d0>
         : 130   ./stdio-common/printf_fp.c:260
    0.00 :   5ab0d:  xor    %r13d,%r13d
         : 132   ./stdio-common/printf_fp.c:412
    0.00 :   5ab10:  mov    -0xbc(%rbp),%eax
    0.00 :   5ab16:  test   %eax,%eax
    0.00 :   5ab18:  je     5af18 <__GI___printf_fp_l+0x5e8>
         : 136   ./stdio-common/printf_fp.c:412 (discriminator 1)
    0.00 :   5ab1e:  mov    0xa0(%r12),%rax
    0.00 :   5ab26:  test   %rax,%rax
    0.00 :   5ab29:  je     5cc6d <__GI___printf_fp_l+0x233d>
         : 140   ./stdio-common/printf_fp.c:412 (discriminator 4)
    0.00 :   5ab2f:  mov    0x20(%rax),%rdx
    0.00 :   5ab33:  cmp    0x28(%rax),%rdx
    0.00 :   5ab37:  jae    5cc6d <__GI___printf_fp_l+0x233d>
         : 144   ./stdio-common/printf_fp.c:412 (discriminator 6)
    0.00 :   5ab3d:  lea    0x4(%rdx),%rsi
    0.00 :   5ab41:  mov    %rsi,0x20(%rax)
    0.00 :   5ab45:  movl   $0x2d,(%rdx)
    0.00 :   5ab4b:  jmp    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5ab50:  mov    %rsi,%r11
         : 150   _nl_lookup():
         : 151   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5ab53:  mov    0x20(%rsi),%rsi
    0.00 :   5ab57:  mov    0x50(%rsi),%rbx
         : 154   __GI___printf_fp_l():
         : 155   ./stdio-common/printf_fp.c:286
    0.00 :   5ab5b:  cmpb   $0x0,(%rbx)
         : 157   _nl_lookup():
         : 158   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5ab5e:  mov    %rbx,-0x108(%rbp)
         : 160   __GI___printf_fp_l():
         : 161   ./stdio-common/printf_fp.c:286
    0.00 :   5ab65:  jne    5ab76 <__GI___printf_fp_l+0x246>
         : 163   _nl_lookup():
         : 164   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5ab67:  mov    0x8(%r11),%r8
    0.00 :   5ab6b:  mov    0x40(%r8),%rbx
    0.00 :   5ab6f:  mov    %rbx,-0x108(%rbp)
         : 168   __GI___printf_fp_l():
         : 169   ./stdio-common/printf_fp.c:288
    0.00 :   5ab76:  mov    0x198(%rsi),%ebx
    0.00 :   5ab7c:  mov    %ebx,-0xc0(%rbp)
         : 172   ./stdio-common/printf_fp.c:290
    0.00 :   5ab82:  test   %ebx,%ebx
    0.00 :   5ab84:  jne    5ab9b <__GI___printf_fp_l+0x26b>
         : 175   _nl_lookup_word():
         : 176   ./stdio-common/../include/../locale/localeinfo.h:330
    0.00 :   5ab86:  mov    -0xf8(%rbp),%rbx
    0.00 :   5ab8d:  mov    0x8(%rbx),%r8
         : 179   __GI___printf_fp_l():
         : 180   ./stdio-common/printf_fp.c:291
    0.00 :   5ab91:  mov    0x58(%r8),%ebx
    0.00 :   5ab95:  mov    %ebx,-0xc0(%rbp)
         : 183   ./stdio-common/printf_fp.c:298
    0.00 :   5ab9b:  test   %dl,%dl
    0.00 :   5ab9d:  jns    5a9c2 <__GI___printf_fp_l+0x92>
         : 186   _nl_lookup():
         : 187   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5aba3:  mov    0x60(%rsi),%rsi
    0.00 :   5aba7:  mov    %rsi,-0xe8(%rbp)
         : 190   __GI___printf_fp_l():
         : 191   ./stdio-common/printf_fp.c:305
    0.00 :   5abae:  movzbl (%rsi),%esi
    0.00 :   5abb1:  mov    %sil,-0xd0(%rbp)
    0.00 :   5abb8:  sub    $0x1,%esi
    0.00 :   5abbb:  cmp    $0x7d,%sil
    0.00 :   5abbf:  ja     5a9c2 <__GI___printf_fp_l+0x92>
         : 197   ./stdio-common/printf_fp.c:310
    0.00 :   5abc5:  mov    -0xbc(%rbp),%r8d
    0.00 :   5abcc:  test   %r8d,%r8d
    0.00 :   5abcf:  je     5af58 <__GI___printf_fp_l+0x628>
         : 201   ./stdio-common/printf_fp.c:312
    0.00 :   5abd5:  test   %dil,%dil
    0.00 :   5abd8:  jne    5b878 <__GI___printf_fp_l+0xf48>
         : 204   _nl_lookup_word():
         : 205   ./stdio-common/../include/../locale/localeinfo.h:330
    0.00 :   5abde:  mov    -0xf8(%rbp),%rsi
    0.00 :   5abe5:  mov    0x8(%rsi),%rsi
         : 208   __GI___printf_fp_l():
         : 209   ./stdio-common/printf_fp.c:313
    0.00 :   5abe9:  mov    0x60(%rsi),%esi
    0.00 :   5abec:  mov    %esi,-0x114(%rbp)
         : 212   ./stdio-common/printf_fp.c:331
    0.00 :   5abf2:  mov    -0x114(%rbp),%edi
    0.00 :   5abf8:  xor    %esi,%esi
         : 215   ./stdio-common/printf_fp.c:388
    0.00 :   5abfa:  mov    (%rcx),%rcx
         : 217   ./stdio-common/printf_fp.c:331
    0.00 :   5abfd:  movq   $0x0,-0x110(%rbp)
    0.00 :   5ac08:  test   %edi,%edi
    0.00 :   5ac0a:  cmovne -0xe8(%rbp),%rsi
    0.00 :   5ac12:  mov    %rsi,-0xe8(%rbp)
         : 222   ./stdio-common/printf_fp.c:387
    0.00 :   5ac19:  test   $0x10,%al
    0.00 :   5ac1b:  jne    5a9ed <__GI___printf_fp_l+0xbd>
    0.00 :   5ac21:  nopl   0x0(%rax)
         : 226   ./stdio-common/printf_fp.c:392
    0.00 :   5ac28:  test   $0x1,%dl
    0.00 :   5ac2b:  je     5acb0 <__GI___printf_fp_l+0x380>
         : 229   ./stdio-common/printf_fp.c:393
    0.00 :   5ac31:  fldt   (%rcx)
    0.00 :   5ac33:  fucomi %st(0),%st
    0.00 :   5ac35:  jp     5cddf <__GI___printf_fp_l+0x24af>
         : 233   ./stdio-common/printf_fp.c:393 (discriminator 2)
    0.00 :   5ac3b:  fld    %st(0)
    0.00 :   5ac3d:  fabs
    0.00 :   5ac3f:  fldt   0x18742b(%rip)        # 1e2070 <in6addr_any+0x90>
    0.00 :   5ac45:  fxch   %st(1)
    0.00 :   5ac47:  fucomip %st(1),%st
    0.00 :   5ac49:  fstp   %st(0)
    0.00 :   5ac4b:  jbe    5b688 <__GI___printf_fp_l+0xd58>
         : 241   ./stdio-common/printf_fp.c:393 (discriminator 5)
    0.00 :   5ac51:  fxam
    0.00 :   5ac53:  fnstsw %ax
    0.00 :   5ac55:  fstp   %st(0)
    0.00 :   5ac57:  mov    %eax,%r13d
    0.00 :   5ac5a:  and    $0x200,%r13d
         : 247   ./stdio-common/printf_fp.c:396 (discriminator 5)
    0.00 :   5ac61:  mov    -0xb8(%rbp),%rax
    0.00 :   5ac68:  mov    %r13d,-0xa4(%rbp)
    0.00 :   5ac6f:  lea    0x17dab1(%rip),%r14        # 1d8727 <not_available+0x1a9>
    0.00 :   5ac76:  movslq 0x8(%rax),%rcx
    0.00 :   5ac7a:  mov    0x1be177(%rip),%rax        # 218df8 <_DYNAMIC+0x238>
    0.00 :   5ac81:  mov    %fs:(%rax),%rax
    0.00 :   5ac85:  testb  $0x1,0x1(%rax,%rcx,2)
    0.00 :   5ac8a:  lea    0x187d9f(%rip),%rax        # 1e2a30 <default_rwlockattr+0x358>
    0.00 :   5ac91:  lea    0x187d78(%rip),%rcx        # 1e2a10 <default_rwlockattr+0x338>
    0.00 :   5ac98:  cmove  %rax,%rcx
    0.00 :   5ac9c:  lea    0x17d947(%rip),%rax        # 1d85ea <not_available+0x6c>
    0.00 :   5aca3:  cmove  %rax,%r14
    0.00 :   5aca7:  jmp    5aadc <__GI___printf_fp_l+0x1ac>
    0.00 :   5acac:  nopl   0x0(%rax)
         : 262   ./stdio-common/printf_fp.c:396
    0.00 :   5acb0:  movsd  (%rcx),%xmm0
    0.00 :   5acb4:  ucomisd %xmm0,%xmm0
    0.00 :   5acb8:  jp     5cdf4 <__GI___printf_fp_l+0x24c4>
         : 266   ./stdio-common/printf_fp.c:396 (discriminator 2)
    0.00 :   5acbe:  movapd %xmm0,%xmm1
    0.00 :   5acc2:  andpd  0x1873c6(%rip),%xmm1        # 1e2090 <othermask>
    0.00 :   5acca:  ucomisd 0x187a0e(%rip),%xmm1        # 1e26e0 <default_rwlockattr+0x8>
    0.00 :   5acd2:  jbe    5afb0 <__GI___printf_fp_l+0x680>
         : 271   ./stdio-common/printf_fp.c:396 (discriminator 5)
    0.00 :   5acd8:  movmskpd %xmm0,%r13d
    0.00 :   5acdd:  and    $0x1,%r13d
    0.00 :   5ace1:  jmp    5ac61 <__GI___printf_fp_l+0x331>
    0.00 :   5ace6:  cs nopw 0x0(%rax,%rax,1)
         : 276   _nl_lookup():
         : 277   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5acf0:  mov    0x50(%rsi),%rsi
    0.00 :   5acf4:  mov    %rsi,-0xe8(%rbp)
         : 280   __GI___printf_fp_l():
         : 281   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5acfb:  jmp    5abae <__GI___printf_fp_l+0x27e>
         : 283   ./stdio-common/printf_fp.c:409
    0.00 :   5ad00:  mov    -0xbc(%rbp),%edx
    0.00 :   5ad06:  movslq %ebx,%r13
    0.00 :   5ad09:  mov    $0x20,%esi
    0.00 :   5ad0e:  mov    %r12,%rdi
    0.00 :   5ad11:  mov    %rcx,-0xd0(%rbp)
    0.00 :   5ad18:  test   %edx,%edx
    0.00 :   5ad1a:  mov    %r13,%rdx
    0.00 :   5ad1d:  je     5af40 <__GI___printf_fp_l+0x610>
         : 292   ./stdio-common/printf_fp.c:409 (discriminator 1)
    0.00 :   5ad23:  call   824e0 <_IO_wpadn>
    0.00 :   5ad28:  mov    -0xd0(%rbp),%rcx
         : 295   ./stdio-common/printf_fp.c:409 (discriminator 4)
    0.00 :   5ad2f:  cmp    %r13,%rax
    0.00 :   5ad32:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 298   ./stdio-common/printf_fp.c:411
    0.00 :   5ad38:  mov    -0xa4(%rbp),%eax
    0.00 :   5ad3e:  mov    %ebx,%r13d
    0.00 :   5ad41:  mov    $0x1,%r15d
    0.00 :   5ad47:  test   %eax,%eax
    0.00 :   5ad49:  jne    5ab10 <__GI___printf_fp_l+0x1e0>
    0.00 :   5ad4f:  mov    -0xb8(%rbp),%rax
    0.00 :   5ad56:  movzbl 0xc(%rax),%edx
         : 306   ./stdio-common/printf_fp.c:413
    0.00 :   5ad5a:  test   $0x40,%dl
    0.00 :   5ad5d:  jne    5adc9 <__GI___printf_fp_l+0x499>
         : 309   ./stdio-common/printf_fp.c:415
    0.00 :   5ad5f:  and    $0x10,%edx
    0.00 :   5ad62:  je     5ae08 <__GI___printf_fp_l+0x4d8>
         : 312   ./stdio-common/printf_fp.c:416
    0.00 :   5ad68:  mov    -0xbc(%rbp),%eax
    0.00 :   5ad6e:  test   %eax,%eax
    0.00 :   5ad70:  je     5b90d <__GI___printf_fp_l+0xfdd>
         : 316   ./stdio-common/printf_fp.c:416 (discriminator 1)
    0.00 :   5ad76:  mov    0xa0(%r12),%rax
    0.00 :   5ad7e:  test   %rax,%rax
    0.00 :   5ad81:  je     5d20f <__GI___printf_fp_l+0x28df>
         : 320   ./stdio-common/printf_fp.c:416 (discriminator 4)
    0.00 :   5ad87:  mov    0x20(%rax),%rdx
    0.00 :   5ad8b:  cmp    0x28(%rax),%rdx
    0.00 :   5ad8f:  jae    5d20f <__GI___printf_fp_l+0x28df>
         : 324   ./stdio-common/printf_fp.c:416 (discriminator 6)
    0.00 :   5ad95:  lea    0x4(%rdx),%rsi
    0.00 :   5ad99:  mov    %rsi,0x20(%rax)
    0.00 :   5ad9d:  movl   $0x20,(%rdx)
    0.00 :   5ada3:  jmp    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5ada5:  nopl   (%rax)
         : 330   ./stdio-common/printf_fp.c:404 (discriminator 1)
    0.00 :   5ada8:  test   $0x50,%dl
    0.00 :   5adab:  jne    5af00 <__GI___printf_fp_l+0x5d0>
         : 333   ./stdio-common/printf_fp.c:406
    0.00 :   5adb1:  sub    $0x3,%ebx
         : 335   ./stdio-common/printf_fp.c:408
    0.00 :   5adb4:  test   %ebx,%ebx
    0.00 :   5adb6:  setg   %r15b
    0.00 :   5adba:  jle    5adc4 <__GI___printf_fp_l+0x494>
    0.00 :   5adbc:  test   %al,%al
    0.00 :   5adbe:  jne    5ad00 <__GI___printf_fp_l+0x3d0>
         : 341   ./stdio-common/printf_fp.c:413
    0.00 :   5adc4:  test   $0x40,%dl
    0.00 :   5adc7:  je     5ad5f <__GI___printf_fp_l+0x42f>
         : 344   ./stdio-common/printf_fp.c:414
    0.00 :   5adc9:  mov    -0xbc(%rbp),%eax
    0.00 :   5adcf:  test   %eax,%eax
    0.00 :   5add1:  je     5b7e0 <__GI___printf_fp_l+0xeb0>
         : 348   ./stdio-common/printf_fp.c:414 (discriminator 1)
    0.00 :   5add7:  mov    0xa0(%r12),%rax
    0.00 :   5addf:  test   %rax,%rax
    0.00 :   5ade2:  je     5d053 <__GI___printf_fp_l+0x2723>
         : 352   ./stdio-common/printf_fp.c:414 (discriminator 4)
    0.00 :   5ade8:  mov    0x20(%rax),%rdx
    0.00 :   5adec:  cmp    0x28(%rax),%rdx
    0.00 :   5adf0:  jae    5d053 <__GI___printf_fp_l+0x2723>
         : 356   ./stdio-common/printf_fp.c:414 (discriminator 6)
    0.00 :   5adf6:  lea    0x4(%rdx),%rsi
    0.00 :   5adfa:  mov    %rsi,0x20(%rax)
    0.00 :   5adfe:  movl   $0x2b,(%rdx)
         : 360   ./stdio-common/printf_fp.c:416 (discriminator 16)
    0.00 :   5ae04:  add    $0x1,%r13d
         : 362   ./stdio-common/printf_fp.c:418 (discriminator 20)
    0.00 :   5ae08:  mov    -0xbc(%rbp),%eax
    0.00 :   5ae0e:  test   %eax,%eax
    0.00 :   5ae10:  je     5b710 <__GI___printf_fp_l+0xde0>
         : 366   ./stdio-common/printf_fp.c:418
    0.00 :   5ae16:  mov    0xa0(%r12),%rax
    0.00 :   5ae1e:  mov    (%rcx),%esi
    0.00 :   5ae20:  test   %rax,%rax
    0.00 :   5ae23:  je     5b801 <__GI___printf_fp_l+0xed1>
    0.00 :   5ae29:  mov    0x20(%rax),%rdx
    0.00 :   5ae2d:  cmp    %rdx,0x28(%rax)
    0.00 :   5ae31:  jbe    5b801 <__GI___printf_fp_l+0xed1>
    0.00 :   5ae37:  lea    0x4(%rdx),%rdi
    0.00 :   5ae3b:  mov    %rdi,0x20(%rax)
    0.00 :   5ae3f:  mov    %esi,(%rdx)
    0.00 :   5ae41:  cmp    $0xffffffff,%esi
    0.00 :   5ae44:  je     5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5ae4a:  mov    0x4(%rcx),%esi
    0.00 :   5ae4d:  add    $0x1,%r13d
    0.00 :   5ae51:  lea    0x8(%rcx),%r14
    0.00 :   5ae55:  mov    0x20(%rax),%rdx
    0.00 :   5ae59:  cmp    %rdx,0x28(%rax)
    0.00 :   5ae5d:  jbe    5b83c <__GI___printf_fp_l+0xf0c>
    0.00 :   5ae63:  lea    0x4(%rdx),%rcx
    0.00 :   5ae67:  mov    %rcx,0x20(%rax)
    0.00 :   5ae6b:  mov    %esi,(%rdx)
    0.00 :   5ae6d:  cmp    $0xffffffff,%esi
    0.00 :   5ae70:  je     5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5ae76:  mov    (%r14),%esi
    0.00 :   5ae79:  add    $0x1,%r13d
         : 392   ./stdio-common/printf_fp.c:418 (discriminator 18)
    0.00 :   5ae7d:  mov    0x20(%rax),%rdx
    0.00 :   5ae81:  cmp    0x28(%rax),%rdx
    0.00 :   5ae85:  jae    5b865 <__GI___printf_fp_l+0xf35>
         : 396   ./stdio-common/printf_fp.c:418 (discriminator 20)
    0.00 :   5ae8b:  lea    0x4(%rdx),%rcx
    0.00 :   5ae8f:  cmp    $0xffffffff,%esi
    0.00 :   5ae92:  mov    %rcx,0x20(%rax)
    0.00 :   5ae96:  sete   %al
    0.00 :   5ae99:  mov    %esi,(%rdx)
         : 402   ./stdio-common/printf_fp.c:418
    0.00 :   5ae9b:  test   %al,%al
    0.00 :   5ae9d:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 405   ./stdio-common/printf_fp.c:420 (discriminator 30)
    0.00 :   5aea3:  mov    -0xb8(%rbp),%rax
         : 407   ./stdio-common/printf_fp.c:418 (discriminator 30)
    0.00 :   5aeaa:  add    $0x1,%r13d
         : 409   ./stdio-common/printf_fp.c:420 (discriminator 30)
    0.00 :   5aeae:  testb  $0x20,0xc(%rax)
    0.00 :   5aeb2:  je     5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5aeb4:  test   %r15b,%r15b
    0.00 :   5aeb7:  je     5aed8 <__GI___printf_fp_l+0x5a8>
         : 414   ./stdio-common/printf_fp.c:421 (discriminator 1)
    0.00 :   5aeb9:  movslq %ebx,%r14
    0.00 :   5aebc:  mov    $0x20,%esi
    0.00 :   5aec1:  mov    %r12,%rdi
    0.00 :   5aec4:  mov    %r14,%rdx
    0.00 :   5aec7:  call   824e0 <_IO_wpadn>
         : 420   ./stdio-common/printf_fp.c:421 (discriminator 4)
    0.00 :   5aecc:  cmp    %r14,%rax
    0.00 :   5aecf:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 423   ./stdio-common/printf_fp.c:421 (discriminator 6)
    0.00 :   5aed5:  add    %ebx,%r13d
         : 425   ./stdio-common/printf_fp.c:1272
    0.00 :   5aed8:  mov    -0x38(%rbp),%rax
    0.00 :   5aedc:  sub    %fs:0x28,%rax
    0.00 :   5aee5:  jne    5d4ba <__GI___printf_fp_l+0x2b8a>
    0.00 :   5aeeb:  lea    -0x28(%rbp),%rsp
    0.00 :   5aeef:  mov    %r13d,%eax
    0.00 :   5aef2:  pop    %rbx
    0.00 :   5aef3:  pop    %r12
    0.00 :   5aef5:  pop    %r13
    0.00 :   5aef7:  pop    %r14
    0.00 :   5aef9:  pop    %r15
    0.00 :   5aefb:  pop    %rbp
    0.00 :   5aefc:  ret
    0.00 :   5aefd:  nopl   (%rax)
         : 439   ./stdio-common/printf_fp.c:406
    0.00 :   5af00:  sub    $0x4,%ebx
         : 441   ./stdio-common/printf_fp.c:408
    0.00 :   5af03:  test   %ebx,%ebx
    0.00 :   5af05:  setg   %r15b
    0.00 :   5af09:  jg     5adbc <__GI___printf_fp_l+0x48c>
    0.00 :   5af0f:  jmp    5adc4 <__GI___printf_fp_l+0x494>
    0.00 :   5af14:  nopl   0x0(%rax)
         : 447   ./stdio-common/printf_fp.c:412 (discriminator 2)
    0.00 :   5af18:  mov    0x28(%r12),%rax
    0.00 :   5af1d:  cmp    0x30(%r12),%rax
    0.00 :   5af22:  jae    5cff6 <__GI___printf_fp_l+0x26c6>
         : 451   ./stdio-common/printf_fp.c:412 (discriminator 11)
    0.00 :   5af28:  lea    0x1(%rax),%rdx
    0.00 :   5af2c:  mov    %rdx,0x28(%r12)
    0.00 :   5af31:  movb   $0x2d,(%rax)
    0.00 :   5af34:  jmp    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5af39:  nopl   0x0(%rax)
         : 457   ./stdio-common/printf_fp.c:409 (discriminator 2)
    0.00 :   5af40:  call   806a0 <_IO_padn>
    0.00 :   5af45:  mov    -0xd0(%rbp),%rcx
    0.00 :   5af4c:  jmp    5ad2f <__GI___printf_fp_l+0x3ff>
    0.00 :   5af51:  nopl   0x0(%rax)
         : 462   ./stdio-common/printf_fp.c:322
    0.00 :   5af58:  test   %dil,%dil
    0.00 :   5af5b:  jne    5b894 <__GI___printf_fp_l+0xf64>
         : 465   _nl_lookup():
         : 466   ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5af61:  mov    -0xf8(%rbp),%rsi
    0.00 :   5af68:  mov    0x8(%rsi),%rsi
    0.00 :   5af6c:  mov    0x48(%rsi),%rbx
    0.00 :   5af70:  mov    %rbx,-0x110(%rbp)
    0.00 :   5af77:  mov    %rbx,%rsi
         : 472   __GI___printf_fp_l():
         : 473   ./stdio-common/printf_fp.c:337
    0.00 :   5af7a:  movzbl (%rsi),%ebx
    0.00 :   5af7d:  neg    %bl
    0.00 :   5af7f:  sbb    %edi,%edi
    0.00 :   5af81:  and    $0xfffffffe,%edi
    0.00 :   5af84:  cmpb   $0x0,(%rsi)
    0.00 :   5af87:  mov    $0x0,%esi
    0.00 :   5af8c:  cmovne -0xe8(%rbp),%rsi
    0.00 :   5af94:  mov    %edi,-0x114(%rbp)
    0.00 :   5af9a:  mov    %rsi,-0xe8(%rbp)
    0.00 :   5afa1:  jmp    5a9e2 <__GI___printf_fp_l+0xb2>
    0.00 :   5afa6:  cs nopw 0x0(%rax,%rax,1)
         : 485   ./stdio-common/printf_fp.c:396
    0.00 :   5afb0:  lea    -0x60(%rbp),%r15
    0.00 :   5afb4:  lea    -0xa4(%rbp),%rcx
    0.00 :   5afbb:  mov    $0x2,%esi
    0.00 :   5afc0:  lea    -0x98(%rbp),%rdx
    0.00 :   5afc7:  mov    %r15,%rdi
    0.00 :   5afca:  call   564c0 <__mpn_extract_double>
    0.00 :   5afcf:  mov    %eax,%r14d
    0.00 :   5afd2:  mov    %rax,%r13
    0.00 :   5afd5:  shl    $0x6,%r14d
    0.00 :   5afd9:  sub    $0x34,%r14d
         : 496   ./stdio-common/printf_fp.c:432
    0.00 :   5afdd:  mov    -0x98(%rbp),%ecx
         : 498   ./stdio-common/printf_fp.c:437
    0.00 :   5afe3:  mov    %rsp,%rsi
         : 500   ./stdio-common/printf_fp.c:388
    0.00 :   5afe6:  mov    %r13,-0x88(%rbp)
         : 502   ./stdio-common/printf_fp.c:432
    0.00 :   5afed:  mov    %ecx,%eax
    0.00 :   5afef:  neg    %eax
    0.00 :   5aff1:  cmovs  %ecx,%eax
    0.00 :   5aff4:  add    $0x3f,%eax
         : 507   ./stdio-common/printf_fp.c:433
    0.00 :   5aff7:  sar    $0x6,%eax
         : 509   ./stdio-common/printf_fp.c:434
    0.00 :   5affa:  add    $0x4,%eax
    0.00 :   5affd:  cltq
         : 512   ./stdio-common/printf_fp.c:437
    0.00 :   5afff:  lea    0x17(,%rax,8),%rax
    0.00 :   5b007:  mov    %rax,%rdi
    0.00 :   5b00a:  mov    %rax,%rdx
    0.00 :   5b00d:  and    $0xfffffffffffff000,%rdi
    0.00 :   5b014:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5b018:  sub    %rdi,%rsi
    0.00 :   5b01b:  cmp    %rsi,%rsp
    0.00 :   5b01e:  je     5b035 <__GI___printf_fp_l+0x705>
    0.00 :   5b020:  sub    $0x1000,%rsp
    0.00 :   5b027:  orq    $0x0,0xff8(%rsp)
    0.00 :   5b030:  cmp    %rsi,%rsp
    0.00 :   5b033:  jne    5b020 <__GI___printf_fp_l+0x6f0>
    0.00 :   5b035:  and    $0xfff,%edx
    0.00 :   5b03b:  sub    %rdx,%rsp
    0.00 :   5b03e:  test   %rdx,%rdx
    0.00 :   5b041:  jne    5b902 <__GI___printf_fp_l+0xfd2>
         : 529   ./stdio-common/printf_fp.c:438
    0.00 :   5b047:  mov    %rax,%r8
         : 531   ./stdio-common/printf_fp.c:437
    0.00 :   5b04a:  lea    0xf(%rsp),%rdi
         : 533   ./stdio-common/printf_fp.c:438
    0.00 :   5b04f:  mov    %rsp,%rsi
    0.00 :   5b052:  mov    %rax,%rdx
    0.00 :   5b055:  and    $0xfffffffffffff000,%r8
         : 537   ./stdio-common/printf_fp.c:437
    0.00 :   5b05c:  and    $0xfffffffffffffff0,%rdi
         : 539   ./stdio-common/printf_fp.c:438
    0.00 :   5b060:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5b064:  sub    %r8,%rsi
         : 542   ./stdio-common/printf_fp.c:437
    0.00 :   5b067:  mov    %rdi,-0x90(%rbp)
         : 544   ./stdio-common/printf_fp.c:438
    0.00 :   5b06e:  cmp    %rsi,%rsp
    0.00 :   5b071:  je     5b088 <__GI___printf_fp_l+0x758>
    0.00 :   5b073:  sub    $0x1000,%rsp
    0.00 :   5b07a:  orq    $0x0,0xff8(%rsp)
    0.00 :   5b083:  cmp    %rsi,%rsp
    0.00 :   5b086:  jne    5b073 <__GI___printf_fp_l+0x743>
    0.00 :   5b088:  and    $0xfff,%edx
    0.00 :   5b08e:  sub    %rdx,%rsp
    0.00 :   5b091:  test   %rdx,%rdx
    0.00 :   5b094:  je     5b09c <__GI___printf_fp_l+0x76c>
    0.00 :   5b096:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   5b09c:  lea    0xf(%rsp),%rdx
         : 557   ./stdio-common/printf_fp.c:439
    0.00 :   5b0a1:  mov    %rsp,%rsi
         : 559   ./stdio-common/printf_fp.c:438
    0.00 :   5b0a4:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5b0a8:  mov    %rdx,-0x70(%rbp)
         : 562   ./stdio-common/printf_fp.c:439
    0.00 :   5b0ac:  mov    %rax,%rdx
    0.00 :   5b0af:  and    $0xfffffffffffff000,%rax
    0.00 :   5b0b5:  sub    %rax,%rsi
    0.00 :   5b0b8:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5b0bc:  cmp    %rsi,%rsp
    0.00 :   5b0bf:  je     5b0d6 <__GI___printf_fp_l+0x7a6>
    0.00 :   5b0c1:  sub    $0x1000,%rsp
    0.00 :   5b0c8:  orq    $0x0,0xff8(%rsp)
    0.00 :   5b0d1:  cmp    %rsi,%rsp
    0.00 :   5b0d4:  jne    5b0c1 <__GI___printf_fp_l+0x791>
    0.00 :   5b0d6:  mov    %rdx,%rax
    0.00 :   5b0d9:  and    $0xfff,%eax
    0.00 :   5b0de:  sub    %rax,%rsp
    0.00 :   5b0e1:  test   %rax,%rax
    0.00 :   5b0e4:  je     5b0ec <__GI___printf_fp_l+0x7bc>
    0.00 :   5b0e6:  orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   5b0ec:  lea    0xf(%rsp),%rax
         : 580   ./stdio-common/printf_fp.c:445
    0.00 :   5b0f1:  movq   $0x0,-0x78(%rbp)
         : 582   ./stdio-common/printf_fp.c:439
    0.00 :   5b0f9:  and    $0xfffffffffffffff0,%rax
    0.00 :   5b0fd:  mov    %rax,-0x80(%rbp)
         : 585   ./stdio-common/printf_fp.c:446
    0.00 :   5b101:  cmp    $0x2,%ecx
    0.00 :   5b104:  jle    5c19b <__GI___printf_fp_l+0x186b>
         : 588   ./stdio-common/printf_fp.c:463
    0.00 :   5b10a:  lea    (%rcx,%r14,1),%esi
         : 590   ./stdio-common/printf_fp.c:467
    0.00 :   5b10e:  test   %esi,%esi
    0.00 :   5b110:  lea    0x3f(%rsi),%edx
    0.00 :   5b113:  cmovns %esi,%edx
    0.00 :   5b116:  sar    $0x6,%edx
         : 595   ./stdio-common/printf_fp.c:463
    0.00 :   5b119:  test   $0x3f,%sil
    0.00 :   5b11d:  jne    5c895 <__GI___printf_fp_l+0x1f65>
         : 598   ./stdio-common/printf_fp.c:465
    0.00 :   5b123:  test   %r13,%r13
    0.00 :   5b126:  jle    5cca1 <__GI___printf_fp_l+0x2371>
    0.00 :   5b12c:  movslq %edx,%rbx
    0.00 :   5b12f:  mov    %r15,%rsi
    0.00 :   5b132:  mov    %ecx,-0xd0(%rbp)
    0.00 :   5b138:  lea    0x0(,%r13,8),%rdx
    0.00 :   5b140:  lea    (%rdi,%rbx,8),%rdi
    0.00 :   5b144:  call   28620 <*ABS*+0xa9c10@plt>
    0.00 :   5b149:  mov    -0xd0(%rbp),%ecx
         : 608   ./stdio-common/printf_fp.c:467
    0.00 :   5b14f:  add    %rbx,%r13
    0.00 :   5b152:  mov    %rbx,%rdx
    0.00 :   5b155:  mov    %r13,-0x88(%rbp)
         : 612   ./stdio-common/printf_fp.c:479 (discriminator 1)
    0.00 :   5b15c:  test   %rdx,%rdx
    0.00 :   5b15f:  jle    5b17f <__GI___printf_fp_l+0x84f>
         : 615   ./stdio-common/printf_fp.c:479
    0.00 :   5b161:  mov    -0x90(%rbp),%rdi
    0.00 :   5b168:  shl    $0x3,%rdx
    0.00 :   5b16c:  xor    %esi,%esi
    0.00 :   5b16e:  mov    %ecx,-0xd0(%rbp)
    0.00 :   5b174:  call   28670 <*ABS*+0xa96d0@plt>
    0.00 :   5b179:  mov    -0xd0(%rbp),%ecx
         : 622   ./stdio-common/printf_fp.c:490
    0.00 :   5b17f:  mov    $0xc,%r13d
         : 624   ./stdio-common/printf_fp.c:449
    0.00 :   5b185:  xor    %r14d,%r14d
         : 626   ./stdio-common/printf_fp.c:459
    0.00 :   5b188:  xor    %eax,%eax
         : 628   ./stdio-common/printf_fp.c:490
    0.00 :   5b18a:  mov    -0x78(%rbp),%rdx
         : 630   ./stdio-common/printf_fp.c:460
    0.00 :   5b18e:  lea    0x171ce3(%rip),%r15        # 1cce78 <_fpioconst_pow10+0x138>
    0.00 :   5b195:  mov    %r12,-0xd0(%rbp)
    0.00 :   5b19c:  mov    %r14d,%r12d
    0.00 :   5b19f:  mov    %r13d,%r14d
    0.00 :   5b1a2:  lea    -0x138(%r15),%rbx
    0.00 :   5b1a9:  mov    %eax,%r13d
    0.00 :   5b1ac:  jmp    5b20e <__GI___printf_fp_l+0x8de>
    0.00 :   5b1ae:  xchg   %ax,%ax
         : 639   ./stdio-common/printf_fp.c:493
    0.00 :   5b1b0:  mov    -0xb8(%rbp),%rax
    0.00 :   5b1b7:  testb  $0x10,0xd(%rax)
    0.00 :   5b1bb:  jne    5b930 <__GI___printf_fp_l+0x1000>
         : 643   ./stdio-common/printf_fp.c:534
    0.00 :   5b1c1:  mov    0x8(%r15),%rdx
         : 645   ./stdio-common/printf_fp.c:535
    0.00 :   5b1c5:  mov    (%r15),%rax
    0.00 :   5b1c8:  lea    0x171cf1(%rip),%rcx        # 1ccec0 <__tens>
         : 648   ./stdio-common/printf_fp.c:534
    0.00 :   5b1cf:  mov    %rdx,-0x68(%rbp)
         : 650   ./stdio-common/printf_fp.c:535
    0.00 :   5b1d3:  lea    (%rcx,%rax,8),%rsi
    0.00 :   5b1d7:  shl    $0x3,%rdx
    0.00 :   5b1db:  call   28620 <*ABS*+0xa9c10@plt>
         : 654   ./stdio-common/printf_fp.c:551
    0.00 :   5b1e0:  mov    -0x68(%rbp),%rdx
    0.00 :   5b1e4:  cmp    %rdx,-0x88(%rbp)
    0.00 :   5b1eb:  jg     5b270 <__GI___printf_fp_l+0x940>
         : 658   ./stdio-common/printf_fp.c:551 (discriminator 1)
    0.00 :   5b1f1:  je     5c1e0 <__GI___printf_fp_l+0x18b0>
         : 660   ./stdio-common/printf_fp.c:569
    0.00 :   5b1f7:  mov    -0x78(%rbp),%rdx
         : 662   ./stdio-common/printf_fp.c:560
    0.00 :   5b1fb:  sub    $0x1,%r14d
         : 664   ./stdio-common/printf_fp.c:562
    0.00 :   5b1ff:  cmp    %rbx,%r15
    0.00 :   5b202:  je     5b2c3 <__GI___printf_fp_l+0x993>
         : 667   ./stdio-common/printf_fp.c:488
    0.00 :   5b208:  mov    -0x98(%rbp),%ecx
         : 669   ./stdio-common/printf_fp.c:488 (discriminator 4)
    0.00 :   5b20e:  mov    -0x8(%r15),%eax
         : 671   ./stdio-common/printf_fp.c:484 (discriminator 4)
    0.00 :   5b212:  sub    $0x18,%r15
         : 673   ./stdio-common/printf_fp.c:488 (discriminator 4)
    0.00 :   5b216:  add    %r12d,%eax
    0.00 :   5b219:  sub    $0x1,%eax
    0.00 :   5b21c:  cmp    %ecx,%eax
    0.00 :   5b21e:  jg     5b1fb <__GI___printf_fp_l+0x8cb>
         : 678   ./stdio-common/printf_fp.c:503
    0.00 :   5b220:  mov    -0x70(%rbp),%rdi
         : 680   ./stdio-common/printf_fp.c:490
    0.00 :   5b224:  test   %rdx,%rdx
    0.00 :   5b227:  je     5b1b0 <__GI___printf_fp_l+0x880>
         : 683   ./stdio-common/printf_fp.c:543
    0.00 :   5b229:  mov    (%r15),%rcx
         : 685   ./stdio-common/printf_fp.c:541
    0.00 :   5b22c:  mov    0x8(%r15),%rax
    0.00 :   5b230:  lea    0x171c89(%rip),%rsi        # 1ccec0 <__tens>
    0.00 :   5b237:  lea    0x8(%rsi,%rcx,8),%rcx
    0.00 :   5b23c:  mov    -0x80(%rbp),%rsi
    0.00 :   5b240:  lea    -0x1(%rax),%r8
    0.00 :   5b244:  call   54f90 <__mpn_mul>
         : 692   ./stdio-common/printf_fp.c:546
    0.00 :   5b249:  mov    0x8(%r15),%rdx
    0.00 :   5b24d:  add    -0x78(%rbp),%rdx
         : 695   ./stdio-common/printf_fp.c:547
    0.00 :   5b251:  test   %rax,%rax
    0.00 :   5b254:  je     5b978 <__GI___printf_fp_l+0x1048>
         : 698   ./stdio-common/printf_fp.c:546
    0.00 :   5b25a:  sub    $0x1,%rdx
         : 700   ./stdio-common/printf_fp.c:545
    0.00 :   5b25e:  mov    %rdx,-0x68(%rbp)
         : 702   ./stdio-common/printf_fp.c:551
    0.00 :   5b262:  cmp    %rdx,-0x88(%rbp)
    0.00 :   5b269:  jle    5b1f1 <__GI___printf_fp_l+0x8c1>
    0.00 :   5b26b:  nopl   0x0(%rax,%rax,1)
         : 706   ./stdio-common/printf_fp.c:554
    0.00 :   5b270:  mov    -0x70(%rbp),%rsi
    0.00 :   5b274:  mov    -0x80(%rbp),%rdi
    0.00 :   5b278:  mov    %rdx,-0x78(%rbp)
    0.00 :   5b27c:  shl    $0x3,%rdx
    0.00 :   5b280:  call   28620 <*ABS*+0xa9c10@plt>
         : 712   ./stdio-common/printf_fp.c:555
    0.00 :   5b285:  mov    -0x78(%rbp),%rdx
    0.00 :   5b289:  mov    -0x80(%rbp),%rax
    0.00 :   5b28d:  bsr    -0x8(%rax,%rdx,8),%rax
         : 716   ./stdio-common/printf_fp.c:556
    0.00 :   5b293:  mov    %edx,%ecx
    0.00 :   5b295:  shl    $0x6,%ecx
    0.00 :   5b298:  lea    -0x81(%rcx),%r10d
         : 720   ./stdio-common/printf_fp.c:557
    0.00 :   5b29f:  mov    %r14d,%ecx
         : 722   ./stdio-common/printf_fp.c:560
    0.00 :   5b2a2:  sub    $0x1,%r14d
         : 724   ./stdio-common/printf_fp.c:555
    0.00 :   5b2a6:  xor    $0x3f,%rax
         : 726   ./stdio-common/printf_fp.c:556
    0.00 :   5b2aa:  sub    %eax,%r10d
         : 728   ./stdio-common/printf_fp.c:557
    0.00 :   5b2ad:  mov    $0x1,%eax
    0.00 :   5b2b2:  shl    %cl,%eax
         : 731   ./stdio-common/printf_fp.c:556
    0.00 :   5b2b4:  mov    %r10d,%r12d
         : 733   ./stdio-common/printf_fp.c:557
    0.00 :   5b2b7:  or     %eax,%r13d
         : 735   ./stdio-common/printf_fp.c:562
    0.00 :   5b2ba:  cmp    %rbx,%r15
    0.00 :   5b2bd:  jne    5b208 <__GI___printf_fp_l+0x8d8>
         : 738   ./stdio-common/printf_fp.c:563
    0.00 :   5b2c3:  mov    %r13d,-0x98(%rbp)
    0.00 :   5b2ca:  mov    -0xd0(%rbp),%r12
         : 741   ./stdio-common/printf_fp.c:569
    0.00 :   5b2d1:  test   %rdx,%rdx
    0.00 :   5b2d4:  jle    5b348 <__GI___printf_fp_l+0xa18>
         : 744   ./stdio-common/printf_fp.c:573
    0.00 :   5b2d6:  mov    -0x80(%rbp),%rdi
         : 746   ./stdio-common/printf_fp.c:577
    0.00 :   5b2da:  bsr    -0x8(%rdi,%rdx,8),%rsi
         : 748   ./stdio-common/printf_fp.c:573
    0.00 :   5b2e0:  mov    (%rdi),%rax
         : 750   ./stdio-common/printf_fp.c:577
    0.00 :   5b2e3:  xor    $0x3f,%rsi
    0.00 :   5b2e7:  mov    %esi,%ecx
         : 753   ./stdio-common/printf_fp.c:573
    0.00 :   5b2e9:  test   %rax,%rax
    0.00 :   5b2ec:  jne    5d3c0 <__GI___printf_fp_l+0x2a90>
    0.00 :   5b2f2:  mov    -0x90(%rbp),%r9
    0.00 :   5b2f9:  mov    %rdi,%rsi
    0.00 :   5b2fc:  xor    %r13d,%r13d
    0.00 :   5b2ff:  jmp    5b325 <__GI___printf_fp_l+0x9f5>
    0.00 :   5b301:  nopl   0x0(%rax)
         : 761   ./stdio-common/printf_fp.c:573 (discriminator 4)
    0.00 :   5b308:  mov    0x8(%rsi),%r8
    0.00 :   5b30c:  lea    0x1(%rax),%r14d
    0.00 :   5b310:  add    $0x8,%rsi
    0.00 :   5b314:  add    $0x1,%rax
    0.00 :   5b318:  add    $0x8,%r13
    0.00 :   5b31c:  test   %r8,%r8
    0.00 :   5b31f:  jne    5ca47 <__GI___printf_fp_l+0x2117>
         : 769   ./stdio-common/printf_fp.c:573 (discriminator 3)
    0.00 :   5b325:  mov    (%r9,%r13,1),%r8
    0.00 :   5b329:  mov    %eax,%r14d
    0.00 :   5b32c:  test   %r8,%r8
    0.00 :   5b32f:  je     5b308 <__GI___printf_fp_l+0x9d8>
         : 774   ./stdio-common/printf_fp.c:579
    0.00 :   5b331:  test   %ecx,%ecx
    0.00 :   5b333:  jne    5cf27 <__GI___printf_fp_l+0x25f7>
         : 777   ./stdio-common/printf_fp.c:583
    0.00 :   5b339:  test   %r14d,%r14d
    0.00 :   5b33c:  jne    5ceb1 <__GI___printf_fp_l+0x2581>
    0.00 :   5b342:  nopw   0x0(%rax,%rax,1)
         : 781   ./stdio-common/printf_fp.c:831
    0.00 :   5b348:  mov    -0xb8(%rbp),%rsi
         : 783   ./stdio-common/printf_fp.c:841
    0.00 :   5b34f:  mov    0x1bda92(%rip),%rdx        # 218de8 <_DYNAMIC+0x228>
         : 785   ./stdio-common/printf_fp.c:831
    0.00 :   5b356:  mov    0x4(%rsi),%eax
         : 787   ./stdio-common/printf_fp.c:841
    0.00 :   5b359:  movslq 0x8(%rsi),%rcx
         : 789   ./stdio-common/printf_fp.c:847
    0.00 :   5b35d:  mov    (%rsi),%edi
         : 791   ./stdio-common/printf_fp.c:831
    0.00 :   5b35f:  mov    %eax,-0x138(%rbp)
         : 793   ./stdio-common/printf_fp.c:841
    0.00 :   5b365:  mov    %fs:(%rdx),%rdx
    0.00 :   5b369:  mov    %rcx,%rax
         : 796   ./stdio-common/printf_fp.c:847
    0.00 :   5b36c:  mov    %edi,-0xf0(%rbp)
         : 798   ./stdio-common/printf_fp.c:841
    0.00 :   5b372:  mov    (%rdx,%rcx,4),%ecx
    0.00 :   5b375:  mov    %ecx,-0x13c(%rbp)
         : 801   ./stdio-common/printf_fp.c:843
    0.00 :   5b37b:  cmp    $0x65,%cl
    0.00 :   5b37e:  je     5c2a8 <__GI___printf_fp_l+0x1978>
         : 804   ./stdio-common/printf_fp.c:853
    0.00 :   5b384:  cmpb   $0x66,-0x13c(%rbp)
    0.00 :   5b38b:  je     5c3d4 <__GI___printf_fp_l+0x1aa4>
         : 807   ./stdio-common/printf_fp.c:873
    0.00 :   5b391:  movl   $0x6,-0x128(%rbp)
    0.00 :   5b39b:  test   %edi,%edi
    0.00 :   5b39d:  js     5b3ad <__GI___printf_fp_l+0xa7d>
         : 811   ./stdio-common/printf_fp.c:873 (discriminator 1)
    0.00 :   5b39f:  mov    $0x1,%edx
    0.00 :   5b3a4:  cmovne %edi,%edx
    0.00 :   5b3a7:  mov    %edx,-0x128(%rbp)
         : 815   ./stdio-common/printf_fp.c:874 (discriminator 8)
    0.00 :   5b3ad:  mov    -0xa0(%rbp),%r14d
         : 817   ./stdio-common/printf_fp.c:861 (discriminator 8)
    0.00 :   5b3b4:  mov    -0x98(%rbp),%edx
         : 819   ./stdio-common/printf_fp.c:874 (discriminator 8)
    0.00 :   5b3ba:  test   %r14d,%r14d
    0.00 :   5b3bd:  je     5c452 <__GI___printf_fp_l+0x1b22>
         : 822   ./stdio-common/printf_fp.c:875 (discriminator 1)
    0.00 :   5b3c3:  cmp    $0x4,%edx
    0.00 :   5b3c6:  jg     5c859 <__GI___printf_fp_l+0x1f29>
         : 825   ./stdio-common/printf_fp.c:888
    0.00 :   5b3cc:  movl   $0x0,-0x118(%rbp)
    0.00 :   5b3d6:  mov    -0x128(%rbp),%eax
    0.00 :   5b3dc:  mov    %eax,-0xe0(%rbp)
         : 829   ./stdio-common/printf_fp.c:895 (discriminator 4)
    0.00 :   5b3e2:  movslq -0x128(%rbp),%rax
         : 831   ./stdio-common/printf_fp.c:887 (discriminator 4)
    0.00 :   5b3e9:  movl   $0x66,-0x9c(%rbp)
         : 833   ./stdio-common/printf_fp.c:895 (discriminator 4)
    0.00 :   5b3f3:  add    $0x5,%rax
    0.00 :   5b3f7:  mov    %rax,-0x120(%rbp)
         : 836   ./stdio-common/printf_fp.c:898
    0.00 :   5b3fe:  mov    -0xb8(%rbp),%rax
    0.00 :   5b405:  xor    %esi,%esi
    0.00 :   5b407:  testb  $0x8,0xc(%rax)
    0.00 :   5b40b:  mov    -0xe0(%rbp),%eax
    0.00 :   5b411:  cmove  %esi,%eax
    0.00 :   5b414:  mov    %eax,-0xf0(%rbp)
         : 843   ./stdio-common/printf_fp.c:901
    0.00 :   5b41a:  cmpq   $0x0,-0xe8(%rbp)
    0.00 :   5b422:  je     5c350 <__GI___printf_fp_l+0x1a20>
         : 846   __guess_grouping():
         : 847   ./stdio-common/printf_fp.c:1295
    0.00 :   5b428:  mov    -0xe8(%rbp),%rax
    0.00 :   5b42f:  movzbl (%rax),%eax
    0.00 :   5b432:  mov    %al,-0xd0(%rbp)
    0.00 :   5b438:  sub    $0x1,%eax
    0.00 :   5b43b:  cmp    $0x7d,%al
    0.00 :   5b43d:  ja     5c3c0 <__GI___printf_fp_l+0x1a90>
         : 854   __GI___printf_fp_l():
         : 855   ./stdio-common/printf_fp.c:905
    0.00 :   5b443:  mov    -0x118(%rbp),%edx
    0.00 :   5b449:  mov    -0xe8(%rbp),%rax
         : 858   __guess_grouping():
         : 859   ./stdio-common/printf_fp.c:1299
    0.00 :   5b450:  xor    %r9d,%r9d
    0.00 :   5b453:  jmp    5b47d <__GI___printf_fp_l+0xb4d>
    0.00 :   5b455:  nopl   (%rax)
         : 863   ./stdio-common/printf_fp.c:1305
    0.00 :   5b458:  movzbl 0x1(%rax),%r8d
         : 865   ./stdio-common/printf_fp.c:1303
    0.00 :   5b45d:  add    $0x1,%rax
         : 867   ./stdio-common/printf_fp.c:1302
    0.00 :   5b461:  lea    0x1(%r9),%edi
         : 869   ./stdio-common/printf_fp.c:1303
    0.00 :   5b465:  sub    %ecx,%edx
         : 871   ./stdio-common/printf_fp.c:1305
    0.00 :   5b467:  cmp    $0x7e,%r8b
    0.00 :   5b46b:  ja     5c90b <__GI___printf_fp_l+0x1fdb>
         : 874   ./stdio-common/printf_fp.c:1312
    0.00 :   5b471:  test   %r8b,%r8b
    0.00 :   5b474:  je     5c91c <__GI___printf_fp_l+0x1fec>
         : 877   ./stdio-common/printf_fp.c:1302
    0.00 :   5b47a:  mov    %edi,%r9d
         : 879   ./stdio-common/printf_fp.c:1300
    0.00 :   5b47d:  movsbl (%rax),%ecx
    0.00 :   5b480:  cmp    %ecx,%edx
    0.00 :   5b482:  ja     5b458 <__GI___printf_fp_l+0xb28>
         : 883   __GI___printf_fp_l():
         : 884   ./stdio-common/printf_fp.c:905
    0.00 :   5b484:  mov    %r9d,%eax
    0.00 :   5b487:  mov    %r9d,-0x124(%rbp)
         : 887   ./stdio-common/printf_fp.c:908
    0.00 :   5b48e:  add    $0x1,%eax
    0.00 :   5b491:  cltq
    0.00 :   5b493:  add    %rax,-0x120(%rbp)
         : 891   ./stdio-common/printf_fp.c:915
    0.00 :   5b49a:  movabs $0x3ffffffffffffffc,%rax
    0.00 :   5b4a4:  cmp    %rax,-0x120(%rbp)
    0.00 :   5b4ab:  ja     5c840 <__GI___printf_fp_l+0x1f10>
         : 895   ./stdio-common/printf_fp.c:916 (discriminator 1)
    0.00 :   5b4b1:  movslq -0xe0(%rbp),%rax
         : 897   ./stdio-common/printf_fp.c:915 (discriminator 1)
    0.00 :   5b4b8:  mov    -0x120(%rbp),%rdi
    0.00 :   5b4bf:  mov    %esi,-0xd0(%rbp)
    0.00 :   5b4c5:  cmp    %rdi,%rax
    0.00 :   5b4c8:  ja     5c840 <__GI___printf_fp_l+0x1f10>
         : 902   ./stdio-common/printf_fp.c:922
    0.00 :   5b4ce:  lea    0x8(,%rdi,4),%r15
         : 904   __libc_use_alloca():
         : 905   ./stdio-common/../sysdeps/pthread/allocalim.h:27
    0.00 :   5b4d6:  mov    %r15,%rdi
    0.00 :   5b4d9:  call   909a0 <__libc_alloca_cutoff>
         : 908   ./stdio-common/../sysdeps/pthread/allocalim.h:29
    0.00 :   5b4de:  mov    -0xd0(%rbp),%esi
    0.00 :   5b4e4:  test   %eax,%eax
    0.00 :   5b4e6:  jne    5b4f5 <__GI___printf_fp_l+0xbc5>
    0.00 :   5b4e8:  cmp    $0x1000,%r15
    0.00 :   5b4ef:  ja     5ce5e <__GI___printf_fp_l+0x252e>
         : 914   __GI___printf_fp_l():
         : 915   ./stdio-common/printf_fp.c:932
    0.00 :   5b4f5:  add    $0x17,%r15
    0.00 :   5b4f9:  mov    %rsp,%rdx
    0.00 :   5b4fc:  mov    %r15,%rax
    0.00 :   5b4ff:  and    $0xfffffffffffff000,%r15
    0.00 :   5b506:  sub    %r15,%rdx
    0.00 :   5b509:  and    $0xfffffffffffffff0,%rax
    0.00 :   5b50d:  cmp    %rdx,%rsp
    0.00 :   5b510:  je     5b527 <__GI___printf_fp_l+0xbf7>
    0.00 :   5b512:  sub    $0x1000,%rsp
    0.00 :   5b519:  orq    $0x0,0xff8(%rsp)
    0.00 :   5b522:  cmp    %rdx,%rsp
    0.00 :   5b525:  jne    5b512 <__GI___printf_fp_l+0xbe2>
    0.00 :   5b527:  and    $0xfff,%eax
    0.00 :   5b52c:  sub    %rax,%rsp
    0.00 :   5b52f:  test   %rax,%rax
    0.00 :   5b532:  je     5b53a <__GI___printf_fp_l+0xc0a>
    0.00 :   5b534:  orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   5b53a:  movl   $0x1,-0x14c(%rbp)
    0.00 :   5b544:  lea    0xf(%rsp),%rax
    0.00 :   5b549:  movl   $0x0,-0x140(%rbp)
    0.00 :   5b553:  and    $0xfffffffffffffff0,%rax
    0.00 :   5b557:  mov    %rax,-0x130(%rbp)
         : 938   ./stdio-common/printf_fp.c:936
    0.00 :   5b55e:  mov    -0xa0(%rbp),%r13d
         : 940   ./stdio-common/printf_fp.c:933
    0.00 :   5b565:  lea    0x8(%rax),%r14
         : 942   ./stdio-common/printf_fp.c:936
    0.00 :   5b569:  test   %r13d,%r13d
    0.00 :   5b56c:  je     5b57b <__GI___printf_fp_l+0xc4b>
         : 945   ./stdio-common/printf_fp.c:936 (discriminator 1)
    0.00 :   5b56e:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   5b575:  je     5c9f0 <__GI___printf_fp_l+0x20c0>
         : 948   ./stdio-common/printf_fp.c:939
  100.00 :   5b57b:  mov    -0x118(%rbp),%eax
    0.00 :   5b581:  test   %eax,%eax
    0.00 :   5b583:  jle    5cfaa <__GI___printf_fp_l+0x267a>
    0.00 :   5b589:  mov    -0x130(%rbp),%rdi
    0.00 :   5b590:  sub    $0x1,%eax
         : 954   ./stdio-common/printf_fp.c:933
    0.00 :   5b593:  mov    %r14,%r15
    0.00 :   5b596:  lea    -0xa0(%rbp),%r13
    0.00 :   5b59d:  lea    0xc(%rdi,%rax,4),%rbx
    0.00 :   5b5a2:  nopw   0x0(%rax,%rax,1)
         : 959   ./stdio-common/printf_fp.c:942
    0.00 :   5b5a8:  mov    %r13,%rdi
    0.00 :   5b5ab:  add    $0x4,%r15
    0.00 :   5b5af:  call   5a4d0 <hack_digit>
    0.00 :   5b5b4:  mov    %eax,-0x4(%r15)
         : 964   ./stdio-common/printf_fp.c:939
    0.00 :   5b5b8:  cmp    %rbx,%r15
    0.00 :   5b5bb:  jne    5b5a8 <__GI___printf_fp_l+0xc78>
         : 967   ./stdio-common/printf_fp.c:942
    0.00 :   5b5bd:  mov    -0x118(%rbp),%eax
    0.00 :   5b5c3:  mov    %rax,%rcx
    0.00 :   5b5c6:  lea    (%r14,%rax,4),%rax
    0.00 :   5b5ca:  mov    %ecx,-0x134(%rbp)
         : 972   ./stdio-common/printf_fp.c:946
    0.00 :   5b5d0:  mov    -0xb8(%rbp),%rdi
    0.00 :   5b5d7:  testb  $0x8,0xc(%rdi)
    0.00 :   5b5db:  jne    5b5eb <__GI___printf_fp_l+0xcbb>
    0.00 :   5b5dd:  mov    -0xf0(%rbp),%ebx
    0.00 :   5b5e3:  test   %ebx,%ebx
    0.00 :   5b5e5:  jle    5c9b4 <__GI___printf_fp_l+0x2084>
         : 979   ./stdio-common/printf_fp.c:948
    0.00 :   5b5eb:  mov    -0xc0(%rbp),%ecx
    0.00 :   5b5f1:  lea    0x4(%rax),%r15
         : 982   ./stdio-common/printf_fp.c:944
    0.00 :   5b5f5:  mov    $0x1,%esi
         : 984   ./stdio-common/printf_fp.c:948
    0.00 :   5b5fa:  mov    %ecx,(%rax)
         : 986   ./stdio-common/printf_fp.c:962
    0.00 :   5b5fc:  mov    -0xf0(%rbp),%eax
         : 988   ./stdio-common/printf_fp.c:960
    0.00 :   5b602:  xor    %ebx,%ebx
    0.00 :   5b604:  mov    %r12,-0x148(%rbp)
    0.00 :   5b60b:  mov    %r13,%r12
         : 992   ./stdio-common/printf_fp.c:961
    0.00 :   5b60e:  movl   $0x0,-0x100(%rbp)
    0.00 :   5b618:  mov    %ebx,%r13d
    0.00 :   5b61b:  mov    %esi,%ebx
    0.00 :   5b61d:  mov    %eax,-0xd0(%rbp)
         : 997   ./stdio-common/printf_fp.c:962
    0.00 :   5b623:  mov    -0xd0(%rbp),%eax
    0.00 :   5b629:  mov    %eax,%r9d
         : 1000  ./stdio-common/printf_fp.c:963
    0.00 :   5b62c:  cmp    %r13d,%eax
    0.00 :   5b62f:  jg     5b64c <__GI___printf_fp_l+0xd1c>
         : 1003  ./stdio-common/printf_fp.c:963 (discriminator 1)
    0.00 :   5b631:  cmp    %r13d,-0xe0(%rbp)
    0.00 :   5b638:  jle    5b999 <__GI___printf_fp_l+0x1069>
         : 1006  ./stdio-common/printf_fp.c:963 (discriminator 2)
    0.00 :   5b63e:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   5b646:  jle    5b988 <__GI___printf_fp_l+0x1058>
         : 1009  ./stdio-common/printf_fp.c:966
    0.00 :   5b64c:  mov    %r12,%rdi
         : 1011  ./stdio-common/printf_fp.c:965
    0.00 :   5b64f:  add    $0x1,%r13d
         : 1013  ./stdio-common/printf_fp.c:967
    0.00 :   5b653:  add    $0x4,%r15
         : 1015  ./stdio-common/printf_fp.c:966
    0.00 :   5b657:  call   5a4d0 <hack_digit>
    0.00 :   5b65c:  mov    %eax,-0x4(%r15)
         : 1018  ./stdio-common/printf_fp.c:969
    0.00 :   5b660:  test   %ebx,%ebx
    0.00 :   5b662:  jne    5b66d <__GI___printf_fp_l+0xd3d>
    0.00 :   5b664:  cmp    $0x30,%eax
    0.00 :   5b667:  je     5c030 <__GI___printf_fp_l+0x1700>
         : 1023  ./stdio-common/printf_fp.c:962
    0.00 :   5b66d:  mov    -0xd0(%rbp),%eax
    0.00 :   5b673:  mov    $0x1,%ebx
    0.00 :   5b678:  mov    %eax,%r9d
         : 1027  ./stdio-common/printf_fp.c:963
    0.00 :   5b67b:  cmp    %r13d,%eax
    0.00 :   5b67e:  jle    5b631 <__GI___printf_fp_l+0xd01>
    0.00 :   5b680:  jmp    5b64c <__GI___printf_fp_l+0xd1c>
    0.00 :   5b682:  nopw   0x0(%rax,%rax,1)
         : 1032  ./stdio-common/printf_fp.c:393
    0.00 :   5b688:  lea    -0x60(%rbp),%r15
    0.00 :   5b68c:  sub    $0x10,%rsp
    0.00 :   5b690:  lea    -0xa4(%rbp),%rcx
    0.00 :   5b697:  mov    $0x2,%esi
    0.00 :   5b69c:  lea    -0x98(%rbp),%rdx
    0.00 :   5b6a3:  mov    %r15,%rdi
    0.00 :   5b6a6:  fstpt  (%rsp)
    0.00 :   5b6a9:  call   56550 <__mpn_extract_long_double>
    0.00 :   5b6ae:  pop    %rcx
    0.00 :   5b6af:  pop    %rsi
    0.00 :   5b6b0:  mov    %eax,%r14d
    0.00 :   5b6b3:  mov    %rax,%r13
    0.00 :   5b6b6:  shl    $0x6,%r14d
    0.00 :   5b6ba:  sub    $0x3f,%r14d
         : 1047  ./stdio-common/printf_fp.c:400
    0.00 :   5b6be:  jmp    5afdd <__GI___printf_fp_l+0x6ad>
    0.00 :   5b6c3:  mov    %r9d,-0xe0(%rbp)
         : 1050  ./stdio-common/printf_fp.c:1174 (discriminator 5)
    0.00 :   5b6ca:  mov    $0x2d,%esi
         : 1052  ./stdio-common/printf_fp.c:1178 (discriminator 5)
    0.00 :   5b6cf:  mov    %r12,%rdi
    0.00 :   5b6d2:  call   838b0 <__woverflow>
    0.00 :   5b6d7:  mov    -0xe0(%rbp),%r9d
    0.00 :   5b6de:  cmp    $0xffffffff,%eax
    0.00 :   5b6e1:  sete   %al
         : 1058  ./stdio-common/printf_fp.c:1178
    0.00 :   5b6e4:  test   %al,%al
    0.00 :   5b6e6:  je     5bd8e <__GI___printf_fp_l+0x145e>
         : 1061  ./stdio-common/printf_fp.c:1254 (discriminator 37)
    0.00 :   5b6ec:  mov    -0x14c(%rbp),%eax
    0.00 :   5b6f2:  test   %eax,%eax
    0.00 :   5b6f4:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 1065  ./stdio-common/printf_fp.c:1269 (discriminator 7)
    0.00 :   5b6f6:  mov    -0x130(%rbp),%rdi
    0.00 :   5b6fd:  call   28370 <free@plt>
    0.00 :   5b702:  mov    $0xffffffff,%r13d
    0.00 :   5b708:  jmp    5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5b70d:  nopl   (%rax)
         : 1071  ./stdio-common/printf_fp.c:418
    0.00 :   5b710:  movzbl (%r14),%edx
    0.00 :   5b714:  mov    0x28(%r12),%rax
    0.00 :   5b719:  cmp    %rax,0x30(%r12)
    0.00 :   5b71e:  jbe    5cbf0 <__GI___printf_fp_l+0x22c0>
    0.00 :   5b724:  lea    0x1(%rax),%rcx
    0.00 :   5b728:  mov    %rcx,0x28(%r12)
    0.00 :   5b72d:  mov    %dl,(%rax)
    0.00 :   5b72f:  movzbl 0x1(%r14),%edx
    0.00 :   5b734:  mov    0x28(%r12),%rax
    0.00 :   5b739:  cmp    %rax,0x30(%r12)
    0.00 :   5b73e:  jbe    5cbd0 <__GI___printf_fp_l+0x22a0>
    0.00 :   5b744:  lea    0x1(%rax),%rcx
    0.00 :   5b748:  mov    %rcx,0x28(%r12)
    0.00 :   5b74d:  mov    %dl,(%rax)
    0.00 :   5b74f:  movzbl 0x2(%r14),%edx
    0.00 :   5b754:  mov    0x28(%r12),%rax
    0.00 :   5b759:  cmp    0x30(%r12),%rax
    0.00 :   5b75e:  jae    5cbb2 <__GI___printf_fp_l+0x2282>
         : 1090  ./stdio-common/printf_fp.c:418 (discriminator 46)
    0.00 :   5b764:  lea    0x1(%rax),%rcx
    0.00 :   5b768:  mov    %rcx,0x28(%r12)
    0.00 :   5b76d:  mov    %dl,(%rax)
         : 1094  ./stdio-common/printf_fp.c:420 (discriminator 51)
    0.00 :   5b76f:  mov    -0xb8(%rbp),%rax
         : 1096  ./stdio-common/printf_fp.c:418 (discriminator 51)
    0.00 :   5b776:  add    $0x3,%r13d
         : 1098  ./stdio-common/printf_fp.c:420 (discriminator 51)
    0.00 :   5b77a:  testb  $0x20,0xc(%rax)
    0.00 :   5b77e:  je     5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5b784:  test   %r15b,%r15b
    0.00 :   5b787:  je     5aed8 <__GI___printf_fp_l+0x5a8>
         : 1103  ./stdio-common/printf_fp.c:421 (discriminator 2)
    0.00 :   5b78d:  movslq %ebx,%r14
    0.00 :   5b790:  mov    $0x20,%esi
    0.00 :   5b795:  mov    %r12,%rdi
    0.00 :   5b798:  mov    %r14,%rdx
    0.00 :   5b79b:  call   806a0 <_IO_padn>
    0.00 :   5b7a0:  jmp    5aecc <__GI___printf_fp_l+0x59c>
    0.00 :   5b7a5:  nopl   (%rax)
         : 1111  ./stdio-common/printf_fp.c:388
    0.00 :   5b7a8:  lea    -0x60(%rbp),%r15
    0.00 :   5b7ac:  lea    -0xa4(%rbp),%rcx
    0.00 :   5b7b3:  movdqa %xmm2,%xmm0
    0.00 :   5b7b7:  mov    $0x2,%esi
    0.00 :   5b7bc:  lea    -0x98(%rbp),%rdx
    0.00 :   5b7c3:  mov    %r15,%rdi
    0.00 :   5b7c6:  call   566b0 <__mpn_extract_float128>
    0.00 :   5b7cb:  mov    %eax,%r14d
    0.00 :   5b7ce:  mov    %rax,%r13
    0.00 :   5b7d1:  shl    $0x6,%r14d
    0.00 :   5b7d5:  sub    $0x70,%r14d
         : 1123  ./stdio-common/printf_fp.c:400
    0.00 :   5b7d9:  jmp    5afdd <__GI___printf_fp_l+0x6ad>
    0.00 :   5b7de:  xchg   %ax,%ax
         : 1126  ./stdio-common/printf_fp.c:414 (discriminator 2)
    0.00 :   5b7e0:  mov    0x28(%r12),%rax
    0.00 :   5b7e5:  cmp    0x30(%r12),%rax
    0.00 :   5b7ea:  jae    5d1fe <__GI___printf_fp_l+0x28ce>
         : 1130  ./stdio-common/printf_fp.c:414 (discriminator 11)
    0.00 :   5b7f0:  lea    0x1(%rax),%rdx
    0.00 :   5b7f4:  mov    %rdx,0x28(%r12)
    0.00 :   5b7f9:  movb   $0x2b,(%rax)
    0.00 :   5b7fc:  jmp    5ae04 <__GI___printf_fp_l+0x4d4>
         : 1135  ./stdio-common/printf_fp.c:418
    0.00 :   5b801:  mov    %r12,%rdi
    0.00 :   5b804:  mov    %rcx,-0xd0(%rbp)
    0.00 :   5b80b:  call   838b0 <__woverflow>
    0.00 :   5b810:  mov    -0xd0(%rbp),%rcx
    0.00 :   5b817:  cmp    $0xffffffff,%eax
    0.00 :   5b81a:  je     5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5b820:  mov    0xa0(%r12),%rax
    0.00 :   5b828:  mov    0x4(%rcx),%esi
    0.00 :   5b82b:  add    $0x1,%r13d
    0.00 :   5b82f:  lea    0x8(%rcx),%r14
    0.00 :   5b833:  test   %rax,%rax
    0.00 :   5b836:  jne    5ae55 <__GI___printf_fp_l+0x525>
    0.00 :   5b83c:  mov    %r12,%rdi
    0.00 :   5b83f:  call   838b0 <__woverflow>
    0.00 :   5b844:  cmp    $0xffffffff,%eax
    0.00 :   5b847:  je     5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5b84d:  mov    0xa0(%r12),%rax
    0.00 :   5b855:  mov    (%r14),%esi
    0.00 :   5b858:  add    $0x1,%r13d
    0.00 :   5b85c:  test   %rax,%rax
    0.00 :   5b85f:  jne    5ae7d <__GI___printf_fp_l+0x54d>
         : 1157  ./stdio-common/printf_fp.c:418 (discriminator 19)
    0.00 :   5b865:  mov    %r12,%rdi
    0.00 :   5b868:  call   838b0 <__woverflow>
    0.00 :   5b86d:  cmp    $0xffffffff,%eax
    0.00 :   5b870:  sete   %al
    0.00 :   5b873:  jmp    5ae9b <__GI___printf_fp_l+0x56b>
         : 1163  _nl_lookup_word():
         : 1164  ./stdio-common/../include/../locale/localeinfo.h:330
    0.00 :   5b878:  mov    -0xf8(%rbp),%rbx
    0.00 :   5b87f:  mov    0x20(%rbx),%rsi
         : 1167  __GI___printf_fp_l():
         : 1168  ./stdio-common/printf_fp.c:316
    0.00 :   5b883:  mov    0x1a0(%rsi),%edi
    0.00 :   5b889:  mov    %edi,-0x114(%rbp)
    0.00 :   5b88f:  jmp    5abf2 <__GI___printf_fp_l+0x2c2>
         : 1172  _nl_lookup():
         : 1173  ./stdio-common/../include/../locale/localeinfo.h:315
    0.00 :   5b894:  mov    -0xf8(%rbp),%rdi
    0.00 :   5b89b:  mov    0x20(%rdi),%rsi
    0.00 :   5b89f:  mov    0x58(%rsi),%rsi
    0.00 :   5b8a3:  mov    %rsi,-0x110(%rbp)
    0.00 :   5b8aa:  jmp    5af7a <__GI___printf_fp_l+0x64a>
         : 1179  __GI___printf_fp_l():
         : 1180  ./stdio-common/printf_fp.c:388 (discriminator 1)
    0.00 :   5b8af:  movmskps %xmm2,%r13d
    0.00 :   5b8b3:  and    $0x8,%r13d
         : 1183  ./stdio-common/printf_fp.c:396 (discriminator 1)
    0.00 :   5b8b7:  mov    -0xb8(%rbp),%rax
    0.00 :   5b8be:  mov    %r13d,-0xa4(%rbp)
    0.00 :   5b8c5:  lea    0x17ce57(%rip),%r14        # 1d8723 <not_available+0x1a5>
    0.00 :   5b8cc:  movslq 0x8(%rax),%rcx
    0.00 :   5b8d0:  mov    0x1bd521(%rip),%rax        # 218df8 <_DYNAMIC+0x238>
    0.00 :   5b8d7:  mov    %fs:(%rax),%rax
    0.00 :   5b8db:  testb  $0x1,0x1(%rax,%rcx,2)
    0.00 :   5b8e0:  lea    0x187139(%rip),%rax        # 1e2a20 <default_rwlockattr+0x348>
    0.00 :   5b8e7:  lea    0x187112(%rip),%rcx        # 1e2a00 <default_rwlockattr+0x328>
    0.00 :   5b8ee:  cmove  %rax,%rcx
    0.00 :   5b8f2:  lea    0x17ccfb(%rip),%rax        # 1d85f4 <not_available+0x76>
    0.00 :   5b8f9:  cmove  %rax,%r14
    0.00 :   5b8fd:  jmp    5aadc <__GI___printf_fp_l+0x1ac>
         : 1197  ./stdio-common/printf_fp.c:437
    0.00 :   5b902:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   5b908:  jmp    5b047 <__GI___printf_fp_l+0x717>
         : 1200  ./stdio-common/printf_fp.c:416 (discriminator 2)
    0.00 :   5b90d:  mov    0x28(%r12),%rax
    0.00 :   5b912:  cmp    0x30(%r12),%rax
    0.00 :   5b917:  jae    5d406 <__GI___printf_fp_l+0x2ad6>
         : 1204  ./stdio-common/printf_fp.c:416 (discriminator 11)
    0.00 :   5b91d:  lea    0x1(%rax),%rdx
    0.00 :   5b921:  mov    %rdx,0x28(%r12)
    0.00 :   5b926:  movb   $0x20,(%rax)
    0.00 :   5b929:  jmp    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5b92e:  xchg   %ax,%ax
         : 1210  ./stdio-common/printf_fp.c:502
    0.00 :   5b930:  mov    0x8(%r15),%rax
         : 1212  ./stdio-common/printf_fp.c:504
    0.00 :   5b934:  lea    0x171585(%rip),%rcx        # 1ccec0 <__tens>
         : 1214  ./stdio-common/printf_fp.c:503
    0.00 :   5b93b:  add    $0x8,%rdi
         : 1216  ./stdio-common/printf_fp.c:502
    0.00 :   5b93f:  lea    0x1(%rax),%rdx
         : 1218  ./stdio-common/printf_fp.c:504
    0.00 :   5b943:  mov    (%r15),%rax
         : 1220  ./stdio-common/printf_fp.c:502
    0.00 :   5b946:  mov    %rdx,-0x68(%rbp)
         : 1222  ./stdio-common/printf_fp.c:503
    0.00 :   5b94a:  shl    $0x3,%rdx
         : 1224  ./stdio-common/printf_fp.c:504
    0.00 :   5b94e:  lea    (%rcx,%rax,8),%rsi
         : 1226  ./stdio-common/printf_fp.c:503
    0.00 :   5b952:  call   28620 <*ABS*+0xa9c10@plt>
         : 1228  ./stdio-common/printf_fp.c:506
    0.00 :   5b957:  mov    -0x70(%rbp),%rax
    0.00 :   5b95b:  movq   $0x0,(%rax)
         : 1231  ./stdio-common/printf_fp.c:551
    0.00 :   5b962:  mov    -0x68(%rbp),%rdx
         : 1233  ./stdio-common/printf_fp.c:509
    0.00 :   5b966:  addl   $0x40,-0x98(%rbp)
    0.00 :   5b96d:  jmp    5b1e4 <__GI___printf_fp_l+0x8b4>
    0.00 :   5b972:  nopw   0x0(%rax,%rax,1)
         : 1237  ./stdio-common/printf_fp.c:548
    0.00 :   5b978:  sub    $0x2,%rdx
    0.00 :   5b97c:  mov    %rdx,-0x68(%rbp)
    0.00 :   5b980:  jmp    5b1e4 <__GI___printf_fp_l+0x8b4>
    0.00 :   5b985:  nopl   (%rax)
         : 1242  ./stdio-common/printf_fp.c:963 (discriminator 3)
    0.00 :   5b988:  mov    -0x90(%rbp),%rax
    0.00 :   5b98f:  cmpq   $0x0,(%rax)
    0.00 :   5b993:  jne    5b64c <__GI___printf_fp_l+0xd1c>
    0.00 :   5b999:  mov    %r13d,%ebx
    0.00 :   5b99c:  mov    %r12,%r13
    0.00 :   5b99f:  mov    -0x148(%rbp),%r12
         : 1249  ./stdio-common/printf_fp.c:978
    0.00 :   5b9a6:  mov    -0x4(%r15),%edx
    0.00 :   5b9aa:  cmp    -0xc0(%rbp),%edx
    0.00 :   5b9b0:  jne    5b9b6 <__GI___printf_fp_l+0x1086>
         : 1253  ./stdio-common/printf_fp.c:978 (discriminator 2)
    0.00 :   5b9b2:  mov    -0x8(%r15),%edx
         : 1255  ./stdio-common/printf_fp.c:979 (discriminator 4)
    0.00 :   5b9b6:  mov    %r13,%rdi
    0.00 :   5b9b9:  mov    %edx,-0xe0(%rbp)
    0.00 :   5b9bf:  mov    %r9d,-0xd0(%rbp)
    0.00 :   5b9c6:  call   5a4d0 <hack_digit>
         : 1260  ./stdio-common/printf_fp.c:981 (discriminator 4)
    0.00 :   5b9cb:  mov    -0xd0(%rbp),%r9d
    0.00 :   5b9d2:  mov    -0xe0(%rbp),%edx
    0.00 :   5b9d8:  cmp    $0x30,%eax
         : 1264  ./stdio-common/printf_fp.c:979 (discriminator 4)
    0.00 :   5b9db:  mov    %eax,%esi
         : 1266  ./stdio-common/printf_fp.c:981 (discriminator 4)
    0.00 :   5b9dd:  setne  %dil
    0.00 :   5b9e1:  cmp    $0x35,%eax
    0.00 :   5b9e4:  setne  %al
    0.00 :   5b9e7:  and    %al,%dil
    0.00 :   5b9ea:  jne    5ba2b <__GI___printf_fp_l+0x10fb>
         : 1272  ./stdio-common/printf_fp.c:983
    0.00 :   5b9ec:  mov    -0x88(%rbp),%rax
    0.00 :   5b9f3:  cmp    $0x1,%rax
    0.00 :   5b9f7:  je     5ca21 <__GI___printf_fp_l+0x20f1>
         : 1276  ./stdio-common/printf_fp.c:986
    0.00 :   5b9fd:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   5ba02:  jne    5ba26 <__GI___printf_fp_l+0x10f6>
         : 1279  ./stdio-common/printf_fp.c:983
    0.00 :   5ba04:  mov    -0x90(%rbp),%r10
         : 1281  ./stdio-common/printf_fp.c:991
    0.00 :   5ba0b:  test   %rax,%rax
    0.00 :   5ba0e:  jne    5ba1e <__GI___printf_fp_l+0x10ee>
    0.00 :   5ba10:  jmp    5ba2b <__GI___printf_fp_l+0x10fb>
    0.00 :   5ba12:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ba18:  sub    $0x1,%rax
    0.00 :   5ba1c:  je     5ba2b <__GI___printf_fp_l+0x10fb>
         : 1288  ./stdio-common/printf_fp.c:991 (discriminator 1)
    0.00 :   5ba1e:  cmpq   $0x0,-0x8(%r10,%rax,8)
    0.00 :   5ba24:  je     5ba18 <__GI___printf_fp_l+0x10e8>
         : 1291  ./stdio-common/printf_fp.c:982
    0.00 :   5ba26:  mov    $0x1,%edi
         : 1293  get_rounding_mode():
         : 1294  ./stdio-common/../sysdeps/generic/get-rounding-mode.h:94
    0.00 :   5ba2b:  fnstcw -0xa6(%rbp)
         : 1296  ./stdio-common/../sysdeps/generic/get-rounding-mode.h:95
    0.00 :   5ba31:  movzwl -0xa6(%rbp),%eax
    0.00 :   5ba38:  and    $0xc00,%ax
    0.00 :   5ba3c:  cmp    $0x800,%ax
    0.00 :   5ba40:  je     5c75c <__GI___printf_fp_l+0x1e2c>
    0.00 :   5ba46:  ja     5c060 <__GI___printf_fp_l+0x1730>
    0.00 :   5ba4c:  test   %ax,%ax
    0.00 :   5ba4f:  jne    5c070 <__GI___printf_fp_l+0x1740>
         : 1304  round_away():
         : 1305  ./stdio-common/../include/rounding-mode.h:52
    0.00 :   5ba55:  cmp    $0x34,%esi
    0.00 :   5ba58:  jle    5ba70 <__GI___printf_fp_l+0x1140>
    0.00 :   5ba5a:  and    $0x1,%edx
    0.00 :   5ba5d:  jne    5c093 <__GI___printf_fp_l+0x1763>
         : 1310  ./stdio-common/../include/rounding-mode.h:58
    0.00 :   5ba63:  test   %dil,%dil
    0.00 :   5ba66:  jne    5c093 <__GI___printf_fp_l+0x1763>
    0.00 :   5ba6c:  nopl   0x0(%rax)
         : 1314  __GI___printf_fp_l():
         : 1315  ./stdio-common/printf_fp.c:1097
    0.00 :   5ba70:  cmp    %r9d,%ebx
    0.00 :   5ba73:  jg     5ba8c <__GI___printf_fp_l+0x115c>
    0.00 :   5ba75:  jmp    5ba93 <__GI___printf_fp_l+0x1163>
    0.00 :   5ba77:  nopw   0x0(%rax,%rax,1)
         : 1320  ./stdio-common/printf_fp.c:1100
    0.00 :   5ba80:  sub    $0x1,%ebx
         : 1322  ./stdio-common/printf_fp.c:1099
    0.00 :   5ba83:  sub    $0x4,%r15
         : 1324  ./stdio-common/printf_fp.c:1097
    0.00 :   5ba87:  cmp    %r9d,%ebx
    0.00 :   5ba8a:  jle    5ba93 <__GI___printf_fp_l+0x1163>
         : 1327  ./stdio-common/printf_fp.c:1097 (discriminator 1)
    0.00 :   5ba8c:  cmpl   $0x30,-0x4(%r15)
    0.00 :   5ba91:  je     5ba80 <__GI___printf_fp_l+0x1150>
         : 1330  ./stdio-common/printf_fp.c:1104
    0.00 :   5ba93:  test   %ebx,%ebx
    0.00 :   5ba95:  jne    5bab8 <__GI___printf_fp_l+0x1188>
         : 1333  ./stdio-common/printf_fp.c:1104 (discriminator 1)
    0.00 :   5ba97:  mov    -0xb8(%rbp),%rax
    0.00 :   5ba9e:  testb  $0x8,0xc(%rax)
    0.00 :   5baa2:  jne    5bab8 <__GI___printf_fp_l+0x1188>
         : 1337  ./stdio-common/printf_fp.c:1104 (discriminator 2)
    0.00 :   5baa4:  mov    -0xc0(%rbp),%eax
    0.00 :   5baaa:  cmp    %eax,-0x4(%r15)
    0.00 :   5baae:  jne    5bab8 <__GI___printf_fp_l+0x1188>
         : 1341  ./stdio-common/printf_fp.c:1105
    0.00 :   5bab0:  sub    $0x4,%r15
    0.00 :   5bab4:  nopl   0x0(%rax)
         : 1344  ./stdio-common/printf_fp.c:1107
    0.00 :   5bab8:  mov    -0xe8(%rbp),%rcx
    0.00 :   5babf:  test   %rcx,%rcx
    0.00 :   5bac2:  je     5bc1a <__GI___printf_fp_l+0x12ea>
         : 1348  ./stdio-common/printf_fp.c:1112
    0.00 :   5bac8:  mov    -0x134(%rbp),%edx
         : 1350  ./stdio-common/printf_fp.c:1111
    0.00 :   5bace:  mov    -0x118(%rbp),%eax
         : 1352  ./stdio-common/printf_fp.c:1112
    0.00 :   5bad4:  mov    %edx,%ebx
         : 1354  ./stdio-common/printf_fp.c:1111
    0.00 :   5bad6:  cmp    %eax,%edx
    0.00 :   5bad8:  je     5bb27 <__GI___printf_fp_l+0x11f7>
         : 1357  __guess_grouping():
         : 1358  ./stdio-common/printf_fp.c:1295
    0.00 :   5bada:  movl   $0x0,-0x124(%rbp)
    0.00 :   5bae4:  movzbl (%rcx),%eax
    0.00 :   5bae7:  mov    %al,-0xd0(%rbp)
    0.00 :   5baed:  sub    $0x1,%eax
    0.00 :   5baf0:  cmp    $0x7d,%al
    0.00 :   5baf2:  ja     5bc1a <__GI___printf_fp_l+0x12ea>
    0.00 :   5baf8:  mov    %rcx,%rax
         : 1366  ./stdio-common/printf_fp.c:1299
    0.00 :   5bafb:  xor    %esi,%esi
    0.00 :   5bafd:  jmp    5bb1a <__GI___printf_fp_l+0x11ea>
    0.00 :   5baff:  nop
         : 1370  ./stdio-common/printf_fp.c:1305
    0.00 :   5bb00:  movzbl 0x1(%rax),%ecx
         : 1372  ./stdio-common/printf_fp.c:1303
    0.00 :   5bb04:  add    $0x1,%rax
         : 1374  ./stdio-common/printf_fp.c:1302
    0.00 :   5bb08:  add    $0x1,%esi
         : 1376  ./stdio-common/printf_fp.c:1303
    0.00 :   5bb0b:  sub    %edi,%edx
         : 1378  ./stdio-common/printf_fp.c:1305
    0.00 :   5bb0d:  cmp    $0x7e,%cl
    0.00 :   5bb10:  ja     5bb21 <__GI___printf_fp_l+0x11f1>
         : 1381  ./stdio-common/printf_fp.c:1312
    0.00 :   5bb12:  test   %cl,%cl
    0.00 :   5bb14:  je     5ce02 <__GI___printf_fp_l+0x24d2>
         : 1384  ./stdio-common/printf_fp.c:1300
    0.00 :   5bb1a:  movsbl (%rax),%edi
    0.00 :   5bb1d:  cmp    %edi,%edx
    0.00 :   5bb1f:  ja     5bb00 <__GI___printf_fp_l+0x11d0>
         : 1388  __GI___printf_fp_l():
         : 1389  ./stdio-common/printf_fp.c:1112
    0.00 :   5bb21:  mov    %esi,-0x124(%rbp)
         : 1391  group_number():
         : 1392  ./stdio-common/printf_fp.c:1333
    0.00 :   5bb27:  mov    -0x124(%rbp),%edi
    0.00 :   5bb2d:  test   %edi,%edi
    0.00 :   5bb2f:  je     5bc1a <__GI___printf_fp_l+0x12ea>
         : 1396  ./stdio-common/printf_fp.c:1338
    0.00 :   5bb35:  movslq -0x134(%rbp),%rax
         : 1398  ./stdio-common/printf_fp.c:1337
    0.00 :   5bb3c:  movslq %edi,%r13
         : 1400  ./stdio-common/printf_fp.c:1338
    0.00 :   5bb3f:  mov    %r15,%rdx
    0.00 :   5bb42:  lea    (%r14,%rax,4),%rsi
         : 1403  ./stdio-common/printf_fp.c:1337
    0.00 :   5bb46:  add    %r13,%rax
    0.00 :   5bb49:  lea    0x0(,%rax,4),%rcx
         : 1406  ./stdio-common/printf_fp.c:1338
    0.00 :   5bb51:  sub    %rsi,%rdx
         : 1408  ./stdio-common/printf_fp.c:1337
    0.00 :   5bb54:  lea    (%r14,%rcx,1),%rdi
         : 1410  ./stdio-common/printf_fp.c:1338
    0.00 :   5bb58:  sar    $0x2,%rdx
         : 1412  ./stdio-common/printf_fp.c:1337
    0.00 :   5bb5c:  mov    %rcx,-0xd0(%rbp)
    0.00 :   5bb63:  call   c5af0 <wmemmove>
         : 1415  ./stdio-common/printf_fp.c:1340
    0.00 :   5bb68:  mov    -0xd0(%rbp),%rcx
    0.00 :   5bb6f:  mov    -0x114(%rbp),%r8d
    0.00 :   5bb76:  lea    -0x4(%r14,%rcx,1),%rdi
    0.00 :   5bb7b:  mov    -0xe8(%rbp),%rcx
    0.00 :   5bb82:  movsbl (%rcx),%r9d
    0.00 :   5bb86:  cs nopw 0x0(%rax,%rax,1)
         : 1422  ./stdio-common/printf_fp.c:1343
    0.00 :   5bb90:  mov    %ebx,%esi
    0.00 :   5bb92:  mov    %rdi,%rax
    0.00 :   5bb95:  sub    %r9d,%esi
    0.00 :   5bb98:  nopl   0x0(%rax,%rax,1)
         : 1427  ./stdio-common/printf_fp.c:1345
    0.00 :   5bba0:  lea    -0x1(%rbx),%edx
    0.00 :   5bba3:  sub    $0x4,%rax
    0.00 :   5bba7:  mov    %rdx,%rbx
    0.00 :   5bbaa:  mov    (%r14,%rdx,4),%edx
    0.00 :   5bbae:  mov    %edx,0x4(%rax)
         : 1433  ./stdio-common/printf_fp.c:1346
    0.00 :   5bbb1:  cmp    %esi,%ebx
    0.00 :   5bbb3:  jne    5bba0 <__GI___printf_fp_l+0x1270>
    0.00 :   5bbb5:  lea    -0x1(%r9),%eax
    0.00 :   5bbb9:  neg    %rax
    0.00 :   5bbbc:  shl    $0x2,%rax
         : 1439  ./stdio-common/printf_fp.c:1345
    0.00 :   5bbc0:  lea    -0x4(%rdi,%rax,1),%rdx
         : 1441  ./stdio-common/printf_fp.c:1347
    0.00 :   5bbc5:  lea    -0x8(%rdi,%rax,1),%rdi
    0.00 :   5bbca:  mov    %r8d,(%rdx)
         : 1444  ./stdio-common/printf_fp.c:1349
    0.00 :   5bbcd:  movsbl 0x1(%rcx),%r9d
    0.00 :   5bbd2:  cmp    $0x7e,%r9b
    0.00 :   5bbd6:  ja     5bc00 <__GI___printf_fp_l+0x12d0>
         : 1448  ./stdio-common/printf_fp.c:1356
    0.00 :   5bbd8:  test   %r9b,%r9b
    0.00 :   5bbdb:  je     5bbf0 <__GI___printf_fp_l+0x12c0>
         : 1451  ./stdio-common/printf_fp.c:1343
    0.00 :   5bbdd:  add    $0x1,%rcx
         : 1453  ./stdio-common/printf_fp.c:1359
    0.00 :   5bbe1:  cmp    %esi,%r9d
    0.00 :   5bbe4:  jae    5bc00 <__GI___printf_fp_l+0x12d0>
         : 1456  __guess_grouping():
         : 1457  ./stdio-common/printf_fp.c:1299
    0.00 :   5bbe6:  mov    %esi,%ebx
    0.00 :   5bbe8:  jmp    5bb90 <__GI___printf_fp_l+0x1260>
    0.00 :   5bbea:  nopw   0x0(%rax,%rax,1)
         : 1461  group_number():
         : 1462  ./stdio-common/printf_fp.c:1359
    0.00 :   5bbf0:  movsbl (%rcx),%r9d
    0.00 :   5bbf4:  cmp    %esi,%r9d
    0.00 :   5bbf7:  jb     5bbe6 <__GI___printf_fp_l+0x12b6>
    0.00 :   5bbf9:  nopl   0x0(%rax)
         : 1467  ./stdio-common/printf_fp.c:1363
    0.00 :   5bc00:  lea    -0x1(%rsi),%eax
    0.00 :   5bc03:  sub    $0x4,%rdi
    0.00 :   5bc07:  mov    %rax,%rsi
    0.00 :   5bc0a:  mov    (%r14,%rax,4),%eax
    0.00 :   5bc0e:  mov    %eax,0x4(%rdi)
         : 1473  ./stdio-common/printf_fp.c:1364
    0.00 :   5bc11:  cmp    %r14,%rdi
    0.00 :   5bc14:  ja     5bc00 <__GI___printf_fp_l+0x12d0>
         : 1476  ./stdio-common/printf_fp.c:1366
    0.00 :   5bc16:  lea    (%r15,%r13,4),%r15
         : 1478  __GI___printf_fp_l():
         : 1479  ./stdio-common/printf_fp.c:1120
    0.00 :   5bc1a:  mov    -0x9c(%rbp),%edx
    0.00 :   5bc20:  cmp    $0x66,%edx
    0.00 :   5bc23:  je     5bcb3 <__GI___printf_fp_l+0x1383>
         : 1483  ./stdio-common/printf_fp.c:1122
    0.00 :   5bc29:  mov    -0xa0(%rbp),%ecx
    0.00 :   5bc2f:  mov    -0x98(%rbp),%eax
         : 1486  ./stdio-common/printf_fp.c:1142
    0.00 :   5bc35:  mov    $0x2b,%edi
         : 1488  ./stdio-common/printf_fp.c:1122
    0.00 :   5bc3a:  test   %ecx,%ecx
    0.00 :   5bc3c:  jne    5d037 <__GI___printf_fp_l+0x2707>
         : 1491  ./stdio-common/printf_fp.c:1141 (discriminator 4)
    0.00 :   5bc42:  movd   %edx,%xmm0
    0.00 :   5bc46:  movd   %edi,%xmm3
         : 1494  ./stdio-common/printf_fp.c:1142 (discriminator 4)
    0.00 :   5bc4a:  lea    0x8(%r15),%rsi
         : 1496  ./stdio-common/printf_fp.c:1141 (discriminator 4)
    0.00 :   5bc4e:  punpckldq %xmm3,%xmm0
    0.00 :   5bc52:  movq   %xmm0,(%r15)
         : 1499  ./stdio-common/printf_fp.c:1146 (discriminator 4)
    0.00 :   5bc57:  cmp    $0x9,%eax
    0.00 :   5bc5a:  jle    5c33d <__GI___printf_fp_l+0x1a0d>
         : 1502  ./stdio-common/printf_fp.c:1145
    0.00 :   5bc60:  mov    $0xa,%ecx
    0.00 :   5bc65:  nopl   (%rax)
         : 1505  ./stdio-common/printf_fp.c:1147
    0.00 :   5bc68:  lea    (%rcx,%rcx,4),%ecx
    0.00 :   5bc6b:  add    %ecx,%ecx
         : 1508  ./stdio-common/printf_fp.c:1146
    0.00 :   5bc6d:  cmp    %eax,%ecx
    0.00 :   5bc6f:  jle    5bc68 <__GI___printf_fp_l+0x1338>
    0.00 :   5bc71:  nopl   0x0(%rax)
         : 1512  ./stdio-common/printf_fp.c:1155 (discriminator 1)
    0.00 :   5bc78:  movslq %ecx,%rcx
         : 1514  ./stdio-common/printf_fp.c:1156 (discriminator 1)
    0.00 :   5bc7b:  add    $0x4,%rsi
    0.00 :   5bc7f:  mov    %rcx,%rdi
         : 1517  ./stdio-common/printf_fp.c:1155 (discriminator 1)
    0.00 :   5bc82:  imul   $0x66666667,%rcx,%rcx
    0.00 :   5bc89:  mov    %edi,%edx
    0.00 :   5bc8b:  sar    $0x1f,%edx
    0.00 :   5bc8e:  sar    $0x22,%rcx
    0.00 :   5bc92:  sub    %edx,%ecx
         : 1523  ./stdio-common/printf_fp.c:1156 (discriminator 1)
    0.00 :   5bc94:  cltd
    0.00 :   5bc95:  idiv   %ecx
    0.00 :   5bc97:  add    $0x30,%eax
    0.00 :   5bc9a:  mov    %eax,-0x4(%rsi)
         : 1528  ./stdio-common/printf_fp.c:1157 (discriminator 1)
    0.00 :   5bc9d:  mov    %edx,%eax
         : 1530  ./stdio-common/printf_fp.c:1159 (discriminator 1)
    0.00 :   5bc9f:  cmp    $0x6d,%edi
    0.00 :   5bca2:  jg     5bc78 <__GI___printf_fp_l+0x1348>
    0.00 :   5bca4:  mov    %edx,-0x98(%rbp)
         : 1534  ./stdio-common/printf_fp.c:1160
    0.00 :   5bcaa:  add    $0x30,%eax
    0.00 :   5bcad:  lea    0x4(%rsi),%r15
    0.00 :   5bcb1:  mov    %eax,(%rsi)
         : 1538  ./stdio-common/printf_fp.c:1166
    0.00 :   5bcb3:  mov    -0xb8(%rbp),%rcx
    0.00 :   5bcba:  mov    -0xa4(%rbp),%eax
         : 1541  ./stdio-common/printf_fp.c:1168
    0.00 :   5bcc0:  mov    %r15,%rbx
    0.00 :   5bcc3:  sub    %r14,%rbx
         : 1544  ./stdio-common/printf_fp.c:1166
    0.00 :   5bcc6:  movzbl 0xc(%rcx),%edx
    0.00 :   5bcca:  test   %eax,%eax
    0.00 :   5bccc:  jne    5c138 <__GI___printf_fp_l+0x1808>
         : 1548  ./stdio-common/printf_fp.c:1166 (discriminator 1)
    0.00 :   5bcd2:  test   $0x50,%dl
    0.00 :   5bcd5:  jne    5c138 <__GI___printf_fp_l+0x1808>
         : 1551  ./stdio-common/printf_fp.c:1168
    0.00 :   5bcdb:  mov    -0x138(%rbp),%edi
    0.00 :   5bce1:  mov    %rbx,%rax
    0.00 :   5bce4:  sar    $0x2,%rax
    0.00 :   5bce8:  sub    %eax,%edi
    0.00 :   5bcea:  mov    %edi,-0xd0(%rbp)
         : 1557  ./stdio-common/printf_fp.c:1170
    0.00 :   5bcf0:  test   $0x20,%dl
    0.00 :   5bcf3:  jne    5c903 <__GI___printf_fp_l+0x1fd3>
    0.00 :   5bcf9:  mov    0x10(%rcx),%esi
    0.00 :   5bcfc:  cmp    $0x30,%esi
    0.00 :   5bcff:  je     5c903 <__GI___printf_fp_l+0x1fd3>
    0.00 :   5bd05:  mov    -0xd0(%rbp),%eax
    0.00 :   5bd0b:  test   %eax,%eax
    0.00 :   5bd0d:  jle    5c903 <__GI___printf_fp_l+0x1fd3>
         : 1566  ./stdio-common/printf_fp.c:1171
    0.00 :   5bd13:  movslq -0xd0(%rbp),%r13
    0.00 :   5bd1a:  mov    -0xbc(%rbp),%eax
    0.00 :   5bd20:  mov    %r12,%rdi
    0.00 :   5bd23:  mov    %r13,%rdx
    0.00 :   5bd26:  test   %eax,%eax
    0.00 :   5bd28:  je     5ce9b <__GI___printf_fp_l+0x256b>
         : 1573  ./stdio-common/printf_fp.c:1171 (discriminator 1)
    0.00 :   5bd2e:  call   824e0 <_IO_wpadn>
         : 1575  ./stdio-common/printf_fp.c:1171 (discriminator 4)
    0.00 :   5bd33:  cmp    %r13,%rax
    0.00 :   5bd36:  jne    5b6ec <__GI___printf_fp_l+0xdbc>
         : 1578  ./stdio-common/printf_fp.c:1173
    0.00 :   5bd3c:  mov    -0xa4(%rbp),%eax
    0.00 :   5bd42:  mov    -0xd0(%rbp),%r9d
         : 1581  ./stdio-common/printf_fp.c:1173 (discriminator 10)
    0.00 :   5bd49:  test   %eax,%eax
    0.00 :   5bd4b:  je     5c360 <__GI___printf_fp_l+0x1a30>
         : 1584  ./stdio-common/printf_fp.c:1174
    0.00 :   5bd51:  mov    -0xbc(%rbp),%r11d
    0.00 :   5bd58:  test   %r11d,%r11d
    0.00 :   5bd5b:  je     5c6f0 <__GI___printf_fp_l+0x1dc0>
         : 1588  ./stdio-common/printf_fp.c:1174 (discriminator 1)
    0.00 :   5bd61:  mov    0xa0(%r12),%rax
    0.00 :   5bd69:  test   %rax,%rax
    0.00 :   5bd6c:  je     5b6c3 <__GI___printf_fp_l+0xd93>
         : 1592  ./stdio-common/printf_fp.c:1174 (discriminator 4)
    0.00 :   5bd72:  mov    0x20(%rax),%rdx
    0.00 :   5bd76:  cmp    0x28(%rax),%rdx
    0.00 :   5bd7a:  jae    5b6c3 <__GI___printf_fp_l+0xd93>
         : 1596  ./stdio-common/printf_fp.c:1174 (discriminator 6)
    0.00 :   5bd80:  lea    0x4(%rdx),%rsi
    0.00 :   5bd84:  mov    %rsi,0x20(%rax)
    0.00 :   5bd88:  movl   $0x2d,(%rdx)
         : 1600  ./stdio-common/printf_fp.c:1180 (discriminator 16)
    0.00 :   5bd8e:  mov    -0xb8(%rbp),%rax
         : 1602  ./stdio-common/printf_fp.c:1178 (discriminator 16)
    0.00 :   5bd95:  add    $0x1,%r9d
         : 1604  ./stdio-common/printf_fp.c:1180 (discriminator 16)
    0.00 :   5bd99:  movzbl 0xc(%rax),%eax
         : 1606  ./stdio-common/printf_fp.c:1180 (discriminator 20)
    0.00 :   5bd9d:  test   $0x20,%al
    0.00 :   5bd9f:  jne    5bdbc <__GI___printf_fp_l+0x148c>
         : 1609  ./stdio-common/printf_fp.c:1180 (discriminator 1)
    0.00 :   5bda1:  mov    -0xb8(%rbp),%rax
    0.00 :   5bda8:  cmpl   $0x30,0x10(%rax)
    0.00 :   5bdac:  jne    5bdbc <__GI___printf_fp_l+0x148c>
    0.00 :   5bdae:  mov    -0xd0(%rbp),%edi
    0.00 :   5bdb4:  test   %edi,%edi
    0.00 :   5bdb6:  jg     5ce16 <__GI___printf_fp_l+0x24e6>
         : 1616  ./stdio-common/printf_fp.c:1188 (discriminator 10)
    0.00 :   5bdbc:  mov    -0xbc(%rbp),%ecx
         : 1618  ./stdio-common/printf_fp.c:1195 (discriminator 10)
    0.00 :   5bdc2:  mov    -0xb8(%rbp),%rax
         : 1620  ./stdio-common/printf_fp.c:1188 (discriminator 10)
    0.00 :   5bdc9:  test   %ecx,%ecx
    0.00 :   5bdcb:  jne    5c208 <__GI___printf_fp_l+0x18d8>
         : 1623  ./stdio-common/printf_fp.c:1195
    0.00 :   5bdd1:  testb  $0x8,0xd(%rax)
    0.00 :   5bdd5:  je     5bdf6 <__GI___printf_fp_l+0x14c6>
         : 1626  _nl_lookup_word():
         : 1627  ./stdio-common/../include/../locale/localeinfo.h:330
    0.00 :   5bdd7:  mov    -0xf8(%rbp),%rax
    0.00 :   5bdde:  mov    (%rax),%rax
         : 1630  __GI___printf_fp_l():
         : 1631  ./stdio-common/printf_fp.c:1196
    0.00 :   5bde1:  mov    0xa8(%rax),%eax
         : 1633  ./stdio-common/printf_fp.c:1207
    0.00 :   5bde7:  imul   -0x120(%rbp),%rax
    0.00 :   5bdef:  mov    %rax,-0x120(%rbp)
         : 1636  ./stdio-common/printf_fp.c:1200
    0.00 :   5bdf6:  mov    -0x108(%rbp),%rdi
    0.00 :   5bdfd:  mov    %r9d,-0xe0(%rbp)
    0.00 :   5be04:  call   28490 <*ABS*+0xa86a0@plt>
         : 1640  ./stdio-common/printf_fp.c:1202
    0.00 :   5be09:  mov    -0x110(%rbp),%rdi
    0.00 :   5be10:  mov    -0xe0(%rbp),%r9d
         : 1643  ./stdio-common/printf_fp.c:1200
    0.00 :   5be17:  mov    %rax,%rbx
         : 1645  ./stdio-common/printf_fp.c:1202
    0.00 :   5be1a:  test   %rdi,%rdi
    0.00 :   5be1d:  je     5cba8 <__GI___printf_fp_l+0x2278>
         : 1648  ./stdio-common/printf_fp.c:1205
    0.00 :   5be23:  call   28490 <*ABS*+0xa86a0@plt>
    0.00 :   5be28:  mov    -0xe0(%rbp),%r9d
    0.00 :   5be2f:  mov    %rax,%r13
         : 1652  ./stdio-common/printf_fp.c:1208
    0.00 :   5be32:  movslq -0x124(%rbp),%rax
    0.00 :   5be39:  imul   %r13,%rax
         : 1655  ./stdio-common/printf_fp.c:1207
    0.00 :   5be3d:  mov    -0x120(%rbp),%rdi
    0.00 :   5be44:  lea    0x2(%rdi,%rbx,1),%rdx
    0.00 :   5be49:  add    %rdx,%rax
         : 1659  ./stdio-common/printf_fp.c:1209
    0.00 :   5be4c:  mov    -0x140(%rbp),%edx
         : 1661  ./stdio-common/printf_fp.c:1207
    0.00 :   5be52:  mov    %rax,-0xf0(%rbp)
         : 1663  ./stdio-common/printf_fp.c:1209
    0.00 :   5be59:  test   %edx,%edx
    0.00 :   5be5b:  jne    5d14c <__GI___printf_fp_l+0x281c>
         : 1666  ./stdio-common/printf_fp.c:1220
    0.00 :   5be61:  add    $0x17,%rax
    0.00 :   5be65:  mov    %rsp,%rsi
    0.00 :   5be68:  mov    %rax,%rdx
    0.00 :   5be6b:  and    $0xfffffffffffff000,%rax
    0.00 :   5be71:  sub    %rax,%rsi
    0.00 :   5be74:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5be78:  cmp    %rsi,%rsp
    0.00 :   5be7b:  je     5be92 <__GI___printf_fp_l+0x1562>
    0.00 :   5be7d:  sub    $0x1000,%rsp
    0.00 :   5be84:  orq    $0x0,0xff8(%rsp)
    0.00 :   5be8d:  cmp    %rsi,%rsp
    0.00 :   5be90:  jne    5be7d <__GI___printf_fp_l+0x154d>
    0.00 :   5be92:  and    $0xfff,%edx
    0.00 :   5be98:  sub    %rdx,%rsp
    0.00 :   5be9b:  test   %rdx,%rdx
    0.00 :   5be9e:  je     5bea6 <__GI___printf_fp_l+0x1576>
    0.00 :   5bea0:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   5bea6:  lea    0xf(%rsp),%rax
    0.00 :   5beab:  and    $0xfffffffffffffff0,%rax
    0.00 :   5beaf:  mov    %rax,-0xe0(%rbp)
         : 1687  ./stdio-common/printf_fp.c:1227
    0.00 :   5beb6:  cmp    %r14,%r15
    0.00 :   5beb9:  jbe    5d0b5 <__GI___printf_fp_l+0x2785>
    0.00 :   5bebf:  mov    %r13,-0xe8(%rbp)
    0.00 :   5bec6:  mov    -0xe0(%rbp),%rdi
    0.00 :   5becd:  mov    %r12,-0x100(%rbp)
    0.00 :   5bed4:  mov    -0x114(%rbp),%r13d
    0.00 :   5bedb:  mov    %r15,%r12
    0.00 :   5bede:  mov    %r14,%r15
    0.00 :   5bee1:  mov    %r9d,-0xf8(%rbp)
    0.00 :   5bee8:  mov    %rbx,%r14
    0.00 :   5beeb:  mov    -0xc0(%rbp),%ebx
    0.00 :   5bef1:  jmp    5bf10 <__GI___printf_fp_l+0x15e0>
    0.00 :   5bef3:  nopl   0x0(%rax,%rax,1)
         : 1701  ./stdio-common/printf_fp.c:1230
    0.00 :   5bef8:  cmp    %edx,%r13d
    0.00 :   5befb:  je     5c180 <__GI___printf_fp_l+0x1850>
         : 1704  ./stdio-common/printf_fp.c:1233
    0.00 :   5bf01:  mov    %dl,(%rdi)
    0.00 :   5bf03:  add    $0x1,%rdi
         : 1707  ./stdio-common/printf_fp.c:1227 (discriminator 2)
    0.00 :   5bf07:  add    $0x4,%r15
    0.00 :   5bf0b:  cmp    %r15,%r12
    0.00 :   5bf0e:  jbe    5bf32 <__GI___printf_fp_l+0x1602>
         : 1711  ./stdio-common/printf_fp.c:1228
    0.00 :   5bf10:  mov    (%r15),%edx
    0.00 :   5bf13:  cmp    %ebx,%edx
    0.00 :   5bf15:  jne    5bef8 <__GI___printf_fp_l+0x15c8>
         : 1715  ./stdio-common/printf_fp.c:1229
    0.00 :   5bf17:  mov    -0x108(%rbp),%rsi
    0.00 :   5bf1e:  mov    %r14,%rdx
         : 1718  ./stdio-common/printf_fp.c:1227
    0.00 :   5bf21:  add    $0x4,%r15
         : 1720  ./stdio-common/printf_fp.c:1229
    0.00 :   5bf25:  call   283e0 <*ABS*+0xa97d0@plt>
    0.00 :   5bf2a:  mov    %rax,%rdi
         : 1723  ./stdio-common/printf_fp.c:1227
    0.00 :   5bf2d:  cmp    %r15,%r12
    0.00 :   5bf30:  ja     5bf10 <__GI___printf_fp_l+0x15e0>
         : 1726  ./stdio-common/printf_fp.c:1237
    0.00 :   5bf32:  mov    -0xb8(%rbp),%rax
    0.00 :   5bf39:  mov    -0xf8(%rbp),%r9d
    0.00 :   5bf40:  mov    -0x100(%rbp),%r12
    0.00 :   5bf47:  testb  $0x8,0xd(%rax)
    0.00 :   5bf4b:  jne    5d0e5 <__GI___printf_fp_l+0x27b5>
    0.00 :   5bf51:  mov    -0xe0(%rbp),%r14
         : 1733  ./stdio-common/printf_fp.c:1254 (discriminator 2)
    0.00 :   5bf58:  sub    %r14,%rdi
    0.00 :   5bf5b:  mov    %rdi,%rbx
    0.00 :   5bf5e:  mov    %rdi,%r8
    0.00 :   5bf61:  cmp    $0x14,%rdi
    0.00 :   5bf65:  jle    5c7ad <__GI___printf_fp_l+0x1e7d>
         : 1739  ./stdio-common/printf_fp.c:1254
    0.00 :   5bf6b:  mov    0xd8(%r12),%rbx
         : 1741  IO_validate_vtable():
         : 1742  ./stdio-common/../libio/libioP.h:940
    0.00 :   5bf73:  lea    0x1b9a86(%rip),%rdx        # 215a00 <_IO_helper_jumps>
    0.00 :   5bf7a:  lea    0x1ba7e7(%rip),%rax        # 216768 <__stop___libc_IO_vtables>
    0.00 :   5bf81:  sub    %rdx,%rax
         : 1746  ./stdio-common/../libio/libioP.h:942
    0.00 :   5bf84:  mov    %rbx,%rcx
    0.00 :   5bf87:  sub    %rdx,%rcx
         : 1749  ./stdio-common/../libio/libioP.h:943
    0.00 :   5bf8a:  cmp    %rcx,%rax
    0.00 :   5bf8d:  jbe    5d2f0 <__GI___printf_fp_l+0x29c0>
         : 1752  __GI___printf_fp_l():
         : 1753  ./stdio-common/printf_fp.c:1254
    0.00 :   5bf93:  mov    0x38(%rbx),%rax
    0.00 :   5bf97:  mov    %r9d,-0xf0(%rbp)
         : 1756  ./stdio-common/printf_fp.c:1254 (discriminator 14)
    0.00 :   5bf9e:  mov    %r8,%rdx
    0.00 :   5bfa1:  mov    %r14,%rsi
    0.00 :   5bfa4:  mov    %r12,%rdi
    0.00 :   5bfa7:  mov    %r8,-0xe8(%rbp)
    0.00 :   5bfae:  call   *%rax
    0.00 :   5bfb0:  mov    -0xe8(%rbp),%r8
    0.00 :   5bfb7:  mov    -0xf0(%rbp),%r9d
    0.00 :   5bfbe:  cmp    %r8,%rax
    0.00 :   5bfc1:  jne    5d443 <__GI___printf_fp_l+0x2b13>
         : 1766  ./stdio-common/printf_fp.c:1254
    0.00 :   5bfc7:  lea    (%r9,%r8,1),%r13d
         : 1768  ./stdio-common/printf_fp.c:1257 (discriminator 65)
    0.00 :   5bfcb:  mov    -0x140(%rbp),%r14d
    0.00 :   5bfd2:  test   %r14d,%r14d
    0.00 :   5bfd5:  jne    5cfc3 <__GI___printf_fp_l+0x2693>
         : 1772  ./stdio-common/printf_fp.c:1268
    0.00 :   5bfdb:  mov    -0xb8(%rbp),%rax
    0.00 :   5bfe2:  testb  $0x20,0xc(%rax)
    0.00 :   5bfe6:  je     5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5bfec:  mov    -0xd0(%rbp),%ecx
    0.00 :   5bff2:  test   %ecx,%ecx
    0.00 :   5bff4:  jle    5aed8 <__GI___printf_fp_l+0x5a8>
         : 1779  ./stdio-common/printf_fp.c:1269
    0.00 :   5bffa:  mov    %r12,%rdi
    0.00 :   5bffd:  mov    -0xbc(%rbp),%r12d
         : 1782  ./stdio-common/printf_fp.c:1171
    0.00 :   5c004:  movslq %ecx,%rbx
         : 1784  ./stdio-common/printf_fp.c:1269
    0.00 :   5c007:  mov    0x10(%rax),%esi
    0.00 :   5c00a:  mov    %rbx,%rdx
    0.00 :   5c00d:  test   %r12d,%r12d
    0.00 :   5c010:  je     5cd61 <__GI___printf_fp_l+0x2431>
         : 1789  ./stdio-common/printf_fp.c:1269 (discriminator 1)
    0.00 :   5c016:  call   824e0 <_IO_wpadn>
         : 1791  ./stdio-common/printf_fp.c:1269 (discriminator 4)
    0.00 :   5c01b:  cmp    %rbx,%rax
    0.00 :   5c01e:  jne    5d443 <__GI___printf_fp_l+0x2b13>
         : 1794  ./stdio-common/printf_fp.c:1269 (discriminator 6)
    0.00 :   5c024:  add    -0xd0(%rbp),%r13d
    0.00 :   5c02b:  jmp    5aed8 <__GI___printf_fp_l+0x5a8>
         : 1797  ./stdio-common/printf_fp.c:972
    0.00 :   5c030:  mov    -0xf0(%rbp),%eax
         : 1799  ./stdio-common/printf_fp.c:971
    0.00 :   5c036:  addl   $0x1,-0xe0(%rbp)
         : 1801  ./stdio-common/printf_fp.c:972
    0.00 :   5c03d:  test   %eax,%eax
    0.00 :   5c03f:  jle    5b623 <__GI___printf_fp_l+0xcf3>
         : 1804  ./stdio-common/printf_fp.c:973
    0.00 :   5c045:  addl   $0x1,-0x100(%rbp)
    0.00 :   5c04c:  mov    -0x100(%rbp),%edi
    0.00 :   5c052:  add    %edi,%eax
    0.00 :   5c054:  mov    %eax,-0xd0(%rbp)
    0.00 :   5c05a:  jmp    5b623 <__GI___printf_fp_l+0xcf3>
    0.00 :   5c05f:  nop
         : 1811  get_rounding_mode():
         : 1812  ./stdio-common/../sysdeps/generic/get-rounding-mode.h:95
    0.00 :   5c060:  cmp    $0xc00,%ax
    0.00 :   5c064:  je     5ba70 <__GI___printf_fp_l+0x1140>
    0.00 :   5c06a:  jmp    28961 <__GI___printf_fp_l.cold>
    0.00 :   5c06f:  nop
    0.00 :   5c070:  cmp    $0x400,%ax
    0.00 :   5c074:  jne    5d51a <__GI___printf_fp_l+0x2bea>
         : 1819  round_away():
         : 1820  ./stdio-common/../include/rounding-mode.h:49
    0.00 :   5c07a:  mov    -0xa4(%rbp),%r8d
    0.00 :   5c081:  test   %r8d,%r8d
    0.00 :   5c084:  je     5ba70 <__GI___printf_fp_l+0x1140>
         : 1824  ./stdio-common/../include/rounding-mode.h:58
    0.00 :   5c08a:  cmp    $0x34,%esi
    0.00 :   5c08d:  jle    5ba63 <__GI___printf_fp_l+0x1133>
         : 1827  __GI___printf_fp_l():
         : 1828  ./stdio-common/printf_fp.c:1008
    0.00 :   5c093:  mov    -0x4(%r15),%esi
         : 1830  ./stdio-common/printf_fp.c:1003
    0.00 :   5c097:  test   %ebx,%ebx
    0.00 :   5c099:  je     5c2ee <__GI___printf_fp_l+0x19be>
    0.00 :   5c09f:  mov    -0xc0(%rbp),%edx
         : 1834  ./stdio-common/printf_fp.c:1008
    0.00 :   5c0a5:  lea    -0x4(%r15),%rax
         : 1836  ./stdio-common/printf_fp.c:1007
    0.00 :   5c0a9:  xor    %edi,%edi
         : 1838  ./stdio-common/printf_fp.c:1008
    0.00 :   5c0ab:  cmp    %esi,-0xc0(%rbp)
    0.00 :   5c0b1:  jne    5c0d8 <__GI___printf_fp_l+0x17a8>
    0.00 :   5c0b3:  jmp    5cca9 <__GI___printf_fp_l+0x2379>
    0.00 :   5c0b8:  nopl   0x0(%rax,%rax,1)
         : 1843  ./stdio-common/printf_fp.c:1010
    0.00 :   5c0c0:  movl   $0x30,(%rax)
         : 1845  ./stdio-common/printf_fp.c:1008
    0.00 :   5c0c6:  mov    -0x4(%rax),%esi
    0.00 :   5c0c9:  sub    $0x4,%rax
         : 1848  ./stdio-common/printf_fp.c:1011
    0.00 :   5c0cd:  add    $0x1,%edi
         : 1850  ./stdio-common/printf_fp.c:1008
    0.00 :   5c0d0:  cmp    %edx,%esi
    0.00 :   5c0d2:  je     5cca9 <__GI___printf_fp_l+0x2379>
         : 1853  ./stdio-common/printf_fp.c:1008 (discriminator 1)
    0.00 :   5c0d8:  cmp    $0x39,%esi
    0.00 :   5c0db:  je     5c0c0 <__GI___printf_fp_l+0x1790>
         : 1856  ./stdio-common/printf_fp.c:1013
    0.00 :   5c0dd:  cmp    -0xf0(%rbp),%edi
    0.00 :   5c0e3:  jne    5c113 <__GI___printf_fp_l+0x17e3>
    0.00 :   5c0e5:  mov    -0x100(%rbp),%r10d
    0.00 :   5c0ec:  test   %r10d,%r10d
    0.00 :   5c0ef:  jle    5c113 <__GI___printf_fp_l+0x17e3>
         : 1862  ./stdio-common/printf_fp.c:1014
    0.00 :   5c0f1:  subl   $0x1,-0x100(%rbp)
    0.00 :   5c0f8:  mov    -0x100(%rbp),%edi
         : 1865  ./stdio-common/printf_fp.c:1015
    0.00 :   5c0fe:  cmp    -0xc0(%rbp),%esi
    0.00 :   5c104:  je     5ccc1 <__GI___printf_fp_l+0x2391>
         : 1868  ./stdio-common/printf_fp.c:1097
    0.00 :   5c10a:  add    -0xf0(%rbp),%edi
    0.00 :   5c110:  mov    %edi,%r9d
         : 1871  ./stdio-common/printf_fp.c:1017
    0.00 :   5c113:  add    $0x1,%esi
    0.00 :   5c116:  mov    %esi,(%rax)
         : 1874  ./stdio-common/printf_fp.c:1028
    0.00 :   5c118:  cmp    %esi,-0xc0(%rbp)
    0.00 :   5c11e:  je     5c2f1 <__GI___printf_fp_l+0x19c1>
         : 1877  ./stdio-common/printf_fp.c:1097
    0.00 :   5c124:  cmp    %r9d,%ebx
    0.00 :   5c127:  jg     5ba8c <__GI___printf_fp_l+0x115c>
    0.00 :   5c12d:  jmp    5bab8 <__GI___printf_fp_l+0x1188>
    0.00 :   5c132:  nopw   0x0(%rax,%rax,1)
         : 1882  ./stdio-common/printf_fp.c:1167
    0.00 :   5c138:  mov    -0x138(%rbp),%edi
         : 1884  ./stdio-common/printf_fp.c:1168
    0.00 :   5c13e:  mov    %rbx,%rsi
    0.00 :   5c141:  sar    $0x2,%rsi
         : 1887  ./stdio-common/printf_fp.c:1167
    0.00 :   5c145:  sub    $0x1,%edi
         : 1889  ./stdio-common/printf_fp.c:1168
    0.00 :   5c148:  sub    %esi,%edi
         : 1891  ./stdio-common/printf_fp.c:1170
    0.00 :   5c14a:  and    $0x20,%edx
         : 1893  ./stdio-common/printf_fp.c:1168
    0.00 :   5c14d:  mov    %edi,-0xd0(%rbp)
         : 1895  ./stdio-common/printf_fp.c:1170
    0.00 :   5c153:  jne    5c170 <__GI___printf_fp_l+0x1840>
         : 1897  ./stdio-common/printf_fp.c:1170 (discriminator 1)
    0.00 :   5c155:  mov    -0xb8(%rbp),%rsi
    0.00 :   5c15c:  mov    0x10(%rsi),%esi
    0.00 :   5c15f:  test   %edi,%edi
    0.00 :   5c161:  jle    5c170 <__GI___printf_fp_l+0x1840>
    0.00 :   5c163:  cmp    $0x30,%esi
    0.00 :   5c166:  jne    5bd13 <__GI___printf_fp_l+0x13e3>
    0.00 :   5c16c:  nopl   0x0(%rax)
         : 1905  ./stdio-common/printf_fp.c:260
    0.00 :   5c170:  xor    %r9d,%r9d
    0.00 :   5c173:  jmp    5bd49 <__GI___printf_fp_l+0x1419>
    0.00 :   5c178:  nopl   0x0(%rax,%rax,1)
         : 1909  ./stdio-common/printf_fp.c:1231
    0.00 :   5c180:  mov    -0xe8(%rbp),%rdx
    0.00 :   5c187:  mov    -0x110(%rbp),%rsi
    0.00 :   5c18e:  call   283e0 <*ABS*+0xa97d0@plt>
    0.00 :   5c193:  mov    %rax,%rdi
    0.00 :   5c196:  jmp    5bf07 <__GI___printf_fp_l+0x15d7>
         : 1915  ./stdio-common/printf_fp.c:649
    0.00 :   5c19b:  test   %ecx,%ecx
    0.00 :   5c19d:  js     5c47a <__GI___printf_fp_l+0x1b4a>
         : 1918  ./stdio-common/printf_fp.c:825
    0.00 :   5c1a3:  mov    %r13,%rdx
    0.00 :   5c1a6:  add    %r14d,%ecx
    0.00 :   5c1a9:  mov    %r15,%rsi
    0.00 :   5c1ac:  call   54d10 <__mpn_lshift>
    0.00 :   5c1b1:  mov    %rax,%r8
         : 1924  ./stdio-common/printf_fp.c:826
    0.00 :   5c1b4:  mov    -0x88(%rbp),%rax
    0.00 :   5c1bb:  lea    0x1(%rax),%rdx
    0.00 :   5c1bf:  mov    %rdx,-0x88(%rbp)
    0.00 :   5c1c6:  mov    -0x90(%rbp),%rdx
    0.00 :   5c1cd:  mov    %r8,(%rdx,%rax,8)
         : 1930  ./stdio-common/printf_fp.c:827
    0.00 :   5c1d1:  movl   $0x0,-0x98(%rbp)
    0.00 :   5c1db:  jmp    5b348 <__GI___printf_fp_l+0xa18>
         : 1933  ./stdio-common/printf_fp.c:551 (discriminator 2)
    0.00 :   5c1e0:  mov    -0x70(%rbp),%rsi
    0.00 :   5c1e4:  mov    -0x90(%rbp),%rdi
    0.00 :   5c1eb:  call   54620 <__mpn_cmp>
         : 1937  ./stdio-common/printf_fp.c:554 (discriminator 2)
    0.00 :   5c1f0:  mov    -0x68(%rbp),%rdx
         : 1939  ./stdio-common/printf_fp.c:551 (discriminator 2)
    0.00 :   5c1f4:  test   %eax,%eax
    0.00 :   5c1f6:  jns    5b270 <__GI___printf_fp_l+0x940>
    0.00 :   5c1fc:  jmp    5b1f7 <__GI___printf_fp_l+0x8c7>
    0.00 :   5c201:  nopl   0x0(%rax)
         : 1944  ./stdio-common/printf_fp.c:1237
    0.00 :   5c208:  testb  $0x8,0xd(%rax)
    0.00 :   5c20c:  jne    5d12e <__GI___printf_fp_l+0x27fe>
         : 1947  ./stdio-common/printf_fp.c:1254 (discriminator 1)
    0.00 :   5c212:  sar    $0x2,%rbx
    0.00 :   5c216:  mov    %rbx,%r8
    0.00 :   5c219:  cmp    %r14,%r15
    0.00 :   5c21c:  jne    5c771 <__GI___printf_fp_l+0x1e41>
         : 1952  ./stdio-common/printf_fp.c:1254
    0.00 :   5c222:  lea    0x1(%rbx),%r15d
    0.00 :   5c226:  test   %rbx,%rbx
    0.00 :   5c229:  je     5d430 <__GI___printf_fp_l+0x2b00>
    0.00 :   5c22f:  mov    %r12,%rdi
    0.00 :   5c232:  mov    %r15d,%r12d
    0.00 :   5c235:  mov    %r9d,%r15d
    0.00 :   5c238:  jmp    5c273 <__GI___printf_fp_l+0x1943>
    0.00 :   5c23a:  nopw   0x0(%rax,%rax,1)
         : 1961  ./stdio-common/printf_fp.c:1254 (discriminator 26)
    0.00 :   5c240:  mov    0x20(%rax),%rdx
    0.00 :   5c244:  cmp    0x28(%rax),%rdx
    0.00 :   5c248:  jae    5c287 <__GI___printf_fp_l+0x1957>
         : 1965  ./stdio-common/printf_fp.c:1254 (discriminator 28)
    0.00 :   5c24a:  lea    0x4(%rdx),%rcx
    0.00 :   5c24e:  cmp    $0xffffffff,%esi
    0.00 :   5c251:  mov    %rcx,0x20(%rax)
    0.00 :   5c255:  sete   %al
    0.00 :   5c258:  mov    %esi,(%rdx)
         : 1971  ./stdio-common/printf_fp.c:1254
    0.00 :   5c25a:  test   %al,%al
    0.00 :   5c25c:  jne    5b6ec <__GI___printf_fp_l+0xdbc>
         : 1974  ./stdio-common/printf_fp.c:1254 (discriminator 38)
    0.00 :   5c262:  lea    (%r12,%r15,1),%r13d
    0.00 :   5c266:  sub    %ebx,%r13d
    0.00 :   5c269:  sub    $0x1,%rbx
    0.00 :   5c26d:  je     5cd6b <__GI___printf_fp_l+0x243b>
         : 1979  ./stdio-common/printf_fp.c:1254 (discriminator 43)
    0.00 :   5c273:  mov    0xa0(%rdi),%rax
    0.00 :   5c27a:  add    $0x4,%r14
    0.00 :   5c27e:  mov    -0x4(%r14),%esi
    0.00 :   5c282:  test   %rax,%rax
    0.00 :   5c285:  jne    5c240 <__GI___printf_fp_l+0x1910>
         : 1985  ./stdio-common/printf_fp.c:1254 (discriminator 27)
    0.00 :   5c287:  mov    %rdi,-0xe0(%rbp)
    0.00 :   5c28e:  call   838b0 <__woverflow>
    0.00 :   5c293:  mov    -0xe0(%rbp),%rdi
    0.00 :   5c29a:  cmp    $0xffffffff,%eax
    0.00 :   5c29d:  sete   %al
    0.00 :   5c2a0:  jmp    5c25a <__GI___printf_fp_l+0x192a>
    0.00 :   5c2a2:  nopw   0x0(%rax,%rax,1)
         : 1993  ./stdio-common/printf_fp.c:845
    0.00 :   5c2a8:  mov    %eax,-0x9c(%rbp)
         : 1995  ./stdio-common/printf_fp.c:847
    0.00 :   5c2ae:  movslq %edi,%rax
    0.00 :   5c2b1:  test   %eax,%eax
    0.00 :   5c2b3:  js     5c99a <__GI___printf_fp_l+0x206a>
         : 1999  ./stdio-common/printf_fp.c:848
    0.00 :   5c2b9:  add    $0x8,%rax
    0.00 :   5c2bd:  mov    %rax,-0x120(%rbp)
         : 2002  ./stdio-common/printf_fp.c:856
    0.00 :   5c2c4:  mov    -0xf0(%rbp),%eax
         : 2004  ./stdio-common/printf_fp.c:858
    0.00 :   5c2ca:  mov    $0x1,%esi
         : 2006  ./stdio-common/printf_fp.c:857
    0.00 :   5c2cf:  movl   $0x7fffffff,-0x128(%rbp)
         : 2008  ./stdio-common/printf_fp.c:867
    0.00 :   5c2d9:  movl   $0x1,-0x118(%rbp)
         : 2010  ./stdio-common/printf_fp.c:856
    0.00 :   5c2e3:  mov    %eax,-0xe0(%rbp)
    0.00 :   5c2e9:  jmp    5b41a <__GI___printf_fp_l+0xaea>
    0.00 :   5c2ee:  mov    %r15,%rax
         : 2014  ./stdio-common/printf_fp.c:1031
    0.00 :   5c2f1:  mov    -0xc0(%rbp),%edi
    0.00 :   5c2f7:  cmp    %edi,-0x4(%rax)
    0.00 :   5c2fa:  jne    5c300 <__GI___printf_fp_l+0x19d0>
         : 2018  ./stdio-common/printf_fp.c:1032
    0.00 :   5c2fc:  sub    $0x4,%rax
         : 2020  ./stdio-common/printf_fp.c:1034
    0.00 :   5c300:  sub    $0x4,%rax
    0.00 :   5c304:  cmp    %r14,%rax
    0.00 :   5c307:  jae    5c323 <__GI___printf_fp_l+0x19f3>
    0.00 :   5c309:  jmp    5c935 <__GI___printf_fp_l+0x2005>
    0.00 :   5c30e:  xchg   %ax,%ax
         : 2026  ./stdio-common/printf_fp.c:1035
    0.00 :   5c310:  movl   $0x30,(%rax)
         : 2028  ./stdio-common/printf_fp.c:1034
    0.00 :   5c316:  sub    $0x4,%rax
    0.00 :   5c31a:  cmp    %rax,%r14
    0.00 :   5c31d:  ja     5c935 <__GI___printf_fp_l+0x2005>
         : 2032  ./stdio-common/printf_fp.c:1034 (discriminator 1)
    0.00 :   5c323:  mov    (%rax),%esi
    0.00 :   5c325:  cmp    $0x39,%esi
    0.00 :   5c328:  je     5c310 <__GI___printf_fp_l+0x19e0>
         : 2036  ./stdio-common/printf_fp.c:1037
    0.00 :   5c32a:  cmp    %r14,%rax
    0.00 :   5c32d:  jb     5c935 <__GI___printf_fp_l+0x2005>
         : 2039  ./stdio-common/printf_fp.c:1039
    0.00 :   5c333:  add    $0x1,%esi
    0.00 :   5c336:  mov    %esi,(%rax)
    0.00 :   5c338:  jmp    5ba70 <__GI___printf_fp_l+0x1140>
         : 2043  ./stdio-common/printf_fp.c:1151
    0.00 :   5c33d:  movl   $0x30,0x8(%r15)
    0.00 :   5c345:  lea    0xc(%r15),%rsi
    0.00 :   5c349:  jmp    5bcaa <__GI___printf_fp_l+0x137a>
    0.00 :   5c34e:  xchg   %ax,%ax
         : 2048  ./stdio-common/printf_fp.c:840
    0.00 :   5c350:  movl   $0x0,-0x124(%rbp)
    0.00 :   5c35a:  jmp    5b4b1 <__GI___printf_fp_l+0xb81>
    0.00 :   5c35f:  nop
    0.00 :   5c360:  mov    -0xb8(%rbp),%rax
    0.00 :   5c367:  movzbl 0xc(%rax),%edx
         : 2054  ./stdio-common/printf_fp.c:1175
    0.00 :   5c36b:  mov    %edx,%eax
    0.00 :   5c36d:  test   $0x40,%dl
    0.00 :   5c370:  je     5c711 <__GI___printf_fp_l+0x1de1>
         : 2058  ./stdio-common/printf_fp.c:1176
    0.00 :   5c376:  mov    -0xbc(%rbp),%r10d
    0.00 :   5c37d:  test   %r10d,%r10d
    0.00 :   5c380:  je     5cd40 <__GI___printf_fp_l+0x2410>
         : 2062  ./stdio-common/printf_fp.c:1176 (discriminator 1)
    0.00 :   5c386:  mov    0xa0(%r12),%rax
    0.00 :   5c38e:  test   %rax,%rax
    0.00 :   5c391:  je     5d31a <__GI___printf_fp_l+0x29ea>
         : 2066  ./stdio-common/printf_fp.c:1176 (discriminator 4)
    0.00 :   5c397:  mov    0x20(%rax),%rdx
    0.00 :   5c39b:  cmp    0x28(%rax),%rdx
    0.00 :   5c39f:  jae    5d31a <__GI___printf_fp_l+0x29ea>
         : 2070  ./stdio-common/printf_fp.c:1176 (discriminator 6)
    0.00 :   5c3a5:  lea    0x4(%rdx),%rsi
    0.00 :   5c3a9:  mov    %rsi,0x20(%rax)
    0.00 :   5c3ad:  movl   $0x2b,(%rdx)
    0.00 :   5c3b3:  jmp    5bd8e <__GI___printf_fp_l+0x145e>
    0.00 :   5c3b8:  nopl   0x0(%rax,%rax,1)
         : 2076  __guess_grouping():
         : 2077  ./stdio-common/printf_fp.c:1176 (discriminator 6)
    0.00 :   5c3c0:  movl   $0x0,-0x124(%rbp)
    0.00 :   5c3ca:  mov    $0x1,%eax
    0.00 :   5c3cf:  jmp    5b493 <__GI___printf_fp_l+0xb63>
         : 2081  __GI___printf_fp_l():
         : 2082  ./stdio-common/printf_fp.c:855
    0.00 :   5c3d4:  movl   $0x66,-0x9c(%rbp)
         : 2084  ./stdio-common/printf_fp.c:848
    0.00 :   5c3de:  movslq %edi,%rdx
         : 2086  ./stdio-common/printf_fp.c:856
    0.00 :   5c3e1:  test   %edi,%edi
    0.00 :   5c3e3:  jns    5c3f4 <__GI___printf_fp_l+0x1ac4>
    0.00 :   5c3e5:  movl   $0x6,-0xf0(%rbp)
    0.00 :   5c3ef:  mov    $0x6,%edx
         : 2091  ./stdio-common/printf_fp.c:859 (discriminator 4)
    0.00 :   5c3f4:  mov    -0xa0(%rbp),%eax
    0.00 :   5c3fa:  mov    %eax,-0x124(%rbp)
    0.00 :   5c400:  test   %eax,%eax
    0.00 :   5c402:  jne    5cc10 <__GI___printf_fp_l+0x22e0>
         : 2096  ./stdio-common/printf_fp.c:861
    0.00 :   5c408:  movslq -0x98(%rbp),%rax
         : 2098  ./stdio-common/printf_fp.c:901
    0.00 :   5c40f:  cmpq   $0x0,-0xe8(%rbp)
         : 2100  ./stdio-common/printf_fp.c:858
    0.00 :   5c417:  mov    $0x1,%esi
         : 2102  ./stdio-common/printf_fp.c:857
    0.00 :   5c41c:  movl   $0x7fffffff,-0x128(%rbp)
         : 2104  ./stdio-common/printf_fp.c:861
    0.00 :   5c426:  lea    0x1(%rax),%edi
         : 2106  ./stdio-common/printf_fp.c:863
    0.00 :   5c429:  lea    0x2(%rdx,%rax,1),%rax
    0.00 :   5c42e:  mov    %rax,-0x120(%rbp)
         : 2109  ./stdio-common/printf_fp.c:856
    0.00 :   5c435:  mov    -0xf0(%rbp),%eax
         : 2111  ./stdio-common/printf_fp.c:861
    0.00 :   5c43b:  mov    %edi,-0x118(%rbp)
         : 2113  ./stdio-common/printf_fp.c:856
    0.00 :   5c441:  mov    %eax,-0xe0(%rbp)
         : 2115  ./stdio-common/printf_fp.c:901
    0.00 :   5c447:  jne    5b428 <__GI___printf_fp_l+0xaf8>
    0.00 :   5c44d:  jmp    5b49a <__GI___printf_fp_l+0xb6a>
         : 2118  ./stdio-common/printf_fp.c:874 (discriminator 1)
    0.00 :   5c452:  cmp    %edx,-0x128(%rbp)
    0.00 :   5c458:  jle    5c859 <__GI___printf_fp_l+0x1f29>
         : 2121  ./stdio-common/printf_fp.c:889
    0.00 :   5c45e:  mov    -0x128(%rbp),%esi
         : 2123  ./stdio-common/printf_fp.c:888
    0.00 :   5c464:  lea    0x1(%rdx),%eax
    0.00 :   5c467:  mov    %eax,-0x118(%rbp)
         : 2126  ./stdio-common/printf_fp.c:889
    0.00 :   5c46d:  sub    %eax,%esi
    0.00 :   5c46f:  mov    %esi,-0xe0(%rbp)
    0.00 :   5c475:  jmp    5b3e2 <__GI___printf_fp_l+0xab2>
         : 2130  ./stdio-common/printf_fp.c:665
    0.00 :   5c47a:  mov    %r15,%rsi
    0.00 :   5c47d:  mov    %r13,%rdx
    0.00 :   5c480:  mov    %r14d,%ecx
         : 2134  ./stdio-common/printf_fp.c:670
    0.00 :   5c483:  mov    $0xc,%r15d
         : 2136  ./stdio-common/printf_fp.c:665
    0.00 :   5c489:  call   54d10 <__mpn_lshift>
         : 2138  ./stdio-common/printf_fp.c:670
    0.00 :   5c48e:  mov    -0x98(%rbp),%esi
         : 2140  ./stdio-common/printf_fp.c:652
    0.00 :   5c494:  movl   $0x0,-0xd0(%rbp)
         : 2142  ./stdio-common/printf_fp.c:662
    0.00 :   5c49e:  lea    0x1709d3(%rip),%rbx        # 1cce78 <_fpioconst_pow10+0x138>
         : 2144  ./stdio-common/printf_fp.c:665
    0.00 :   5c4a5:  mov    %rax,%r8
         : 2146  ./stdio-common/printf_fp.c:666
    0.00 :   5c4a8:  mov    -0x88(%rbp),%rax
         : 2148  ./stdio-common/printf_fp.c:690
    0.00 :   5c4af:  mov    %r12,-0xe0(%rbp)
         : 2150  ./stdio-common/printf_fp.c:670
    0.00 :   5c4b6:  neg    %esi
         : 2152  ./stdio-common/printf_fp.c:666
    0.00 :   5c4b8:  lea    0x1(%rax),%rdx
    0.00 :   5c4bc:  mov    %rdx,-0x88(%rbp)
    0.00 :   5c4c3:  mov    -0x90(%rbp),%rdx
    0.00 :   5c4ca:  mov    %r8,(%rdx,%rax,8)
         : 2157  ./stdio-common/printf_fp.c:669
    0.00 :   5c4ce:  movl   $0x1,-0xa0(%rbp)
         : 2159  ./stdio-common/printf_fp.c:670
    0.00 :   5c4d8:  mov    %esi,-0x98(%rbp)
    0.00 :   5c4de:  jmp    5c585 <__GI___printf_fp_l+0x1c55>
    0.00 :   5c4e3:  nopl   0x0(%rax,%rax,1)
         : 2163  ./stdio-common/printf_fp.c:685
    0.00 :   5c4e8:  lea    0x8(%rcx,%rax,8),%r10
    0.00 :   5c4ed:  mov    %r9,%r8
    0.00 :   5c4f0:  mov    %rsi,%rcx
    0.00 :   5c4f3:  mov    %r10,%rsi
    0.00 :   5c4f6:  call   54f90 <__mpn_mul>
         : 2169  ./stdio-common/printf_fp.c:693
    0.00 :   5c4fb:  mov    -0x88(%rbp),%rsi
    0.00 :   5c502:  mov    0x8(%rbx),%r8
    0.00 :   5c506:  add    %rsi,%r8
         : 2173  ./stdio-common/printf_fp.c:694
    0.00 :   5c509:  test   %rax,%rax
    0.00 :   5c50c:  je     5c5d0 <__GI___printf_fp_l+0x1ca0>
         : 2176  ./stdio-common/printf_fp.c:693
    0.00 :   5c512:  sub    $0x1,%r8
    0.00 :   5c516:  mov    %r8,-0x68(%rbp)
         : 2179  ./stdio-common/printf_fp.c:697
    0.00 :   5c51a:  mov    -0x70(%rbp),%r10
    0.00 :   5c51e:  lea    0x0(,%r8,8),%rdx
         : 2182  ./stdio-common/printf_fp.c:698
    0.00 :   5c526:  mov    %r8,%r13
         : 2184  ./stdio-common/printf_fp.c:697
    0.00 :   5c529:  lea    -0x8(%r10,%rdx,1),%rax
    0.00 :   5c52e:  bsr    (%rax),%rcx
         : 2187  ./stdio-common/printf_fp.c:698
    0.00 :   5c532:  sub    %rsi,%r13
         : 2189  ./stdio-common/printf_fp.c:706
    0.00 :   5c535:  mov    -0x98(%rbp),%esi
         : 2191  ./stdio-common/printf_fp.c:699
    0.00 :   5c53b:  add    $0x1,%r13
    0.00 :   5c53f:  shl    $0x6,%r13d
         : 2194  ./stdio-common/printf_fp.c:706
    0.00 :   5c543:  lea    0x3(%rsi),%edi
         : 2196  ./stdio-common/printf_fp.c:697
    0.00 :   5c546:  xor    $0x3f,%rcx
         : 2198  ./stdio-common/printf_fp.c:699
    0.00 :   5c54a:  sub    %ecx,%r13d
         : 2200  ./stdio-common/printf_fp.c:697
    0.00 :   5c54d:  mov    %ecx,%r12d
         : 2202  ./stdio-common/printf_fp.c:699
    0.00 :   5c550:  sub    $0x1,%r13d
         : 2204  ./stdio-common/printf_fp.c:706
    0.00 :   5c554:  cmp    %r13d,%edi
    0.00 :   5c557:  je     5c698 <__GI___printf_fp_l+0x1d68>
         : 2207  ./stdio-common/printf_fp.c:728
    0.00 :   5c55d:  lea    0x2(%rsi),%eax
    0.00 :   5c560:  cmp    %eax,%r13d
    0.00 :   5c563:  jle    5c5e8 <__GI___printf_fp_l+0x1cb8>
         : 2211  ./stdio-common/printf_fp.c:789
    0.00 :   5c569:  lea    0x1707e8(%rip),%rax        # 1ccd58 <_fpioconst_pow10+0x18>
         : 2213  ./stdio-common/printf_fp.c:787
    0.00 :   5c570:  sub    $0x1,%r15d
         : 2215  ./stdio-common/printf_fp.c:789
    0.00 :   5c574:  cmp    %rax,%rbx
    0.00 :   5c577:  je     5caf3 <__GI___printf_fp_l+0x21c3>
         : 2218  ./stdio-common/printf_fp.c:789 (discriminator 1)
    0.00 :   5c57d:  test   %esi,%esi
    0.00 :   5c57f:  jle    5cea5 <__GI___printf_fp_l+0x2575>
         : 2221  ./stdio-common/printf_fp.c:675
    0.00 :   5c585:  sub    $0x18,%rbx
         : 2223  ./stdio-common/printf_fp.c:677
    0.00 :   5c589:  cmp    %esi,0x14(%rbx)
    0.00 :   5c58c:  jg     5c569 <__GI___printf_fp_l+0x1c39>
         : 2226  ./stdio-common/printf_fp.c:684
    0.00 :   5c58e:  mov    0x8(%rbx),%rax
         : 2228  ./stdio-common/printf_fp.c:685
    0.00 :   5c592:  mov    -0x70(%rbp),%rdi
    0.00 :   5c596:  lea    0x170923(%rip),%rcx        # 1ccec0 <__tens>
         : 2231  ./stdio-common/printf_fp.c:684
    0.00 :   5c59d:  mov    -0x88(%rbp),%r9
         : 2233  ./stdio-common/printf_fp.c:688
    0.00 :   5c5a4:  mov    -0x90(%rbp),%rsi
         : 2235  ./stdio-common/printf_fp.c:684
    0.00 :   5c5ab:  lea    -0x1(%rax),%rdx
         : 2237  ./stdio-common/printf_fp.c:686
    0.00 :   5c5af:  mov    (%rbx),%rax
         : 2239  ./stdio-common/printf_fp.c:684
    0.00 :   5c5b2:  cmp    %rdx,%r9
    0.00 :   5c5b5:  jl     5c4e8 <__GI___printf_fp_l+0x1bb8>
         : 2242  ./stdio-common/printf_fp.c:690
    0.00 :   5c5bb:  mov    %rdx,%r8
    0.00 :   5c5be:  lea    0x8(%rcx,%rax,8),%rcx
    0.00 :   5c5c3:  mov    %r9,%rdx
    0.00 :   5c5c6:  call   54f90 <__mpn_mul>
    0.00 :   5c5cb:  jmp    5c4fb <__GI___printf_fp_l+0x1bcb>
         : 2248  ./stdio-common/printf_fp.c:695
    0.00 :   5c5d0:  sub    $0x2,%r8
    0.00 :   5c5d4:  mov    %r8,-0x68(%rbp)
    0.00 :   5c5d8:  jmp    5c51a <__GI___printf_fp_l+0x1bea>
         : 2252  ./stdio-common/printf_fp.c:745
    0.00 :   5c5dd:  mov    -0x70(%rbp),%r10
         : 2254  ./stdio-common/printf_fp.c:748
    0.00 :   5c5e1:  mov    -0x68(%rbp),%r8
    0.00 :   5c5e5:  nopl   (%rax)
         : 2257  ./stdio-common/printf_fp.c:737
    0.00 :   5c5e8:  mov    $0x1,%eax
    0.00 :   5c5ed:  mov    %r15d,%ecx
         : 2260  ./stdio-common/printf_fp.c:736
    0.00 :   5c5f0:  sub    %r13d,%esi
         : 2262  ./stdio-common/printf_fp.c:737
    0.00 :   5c5f3:  shl    %cl,%eax
    0.00 :   5c5f5:  or     %eax,-0xd0(%rbp)
         : 2265  ./stdio-common/printf_fp.c:742
    0.00 :   5c5fb:  mov    %r12d,%eax
    0.00 :   5c5fe:  sub    %esi,%eax
    0.00 :   5c600:  test   %esi,%esi
         : 2269  ./stdio-common/printf_fp.c:736
    0.00 :   5c602:  mov    %esi,-0x98(%rbp)
         : 2271  ./stdio-common/printf_fp.c:742
    0.00 :   5c608:  cmovs  %eax,%r12d
         : 2273  ./stdio-common/printf_fp.c:745
    0.00 :   5c60c:  mov    (%r10),%rax
    0.00 :   5c60f:  test   %rax,%rax
    0.00 :   5c612:  jne    5d18e <__GI___printf_fp_l+0x285e>
    0.00 :   5c618:  lea    0x8(%r10),%rdx
    0.00 :   5c61c:  mov    $0x1,%eax
    0.00 :   5c621:  nopl   0x0(%rax)
         : 2280  ./stdio-common/printf_fp.c:745 (discriminator 3)
    0.00 :   5c628:  mov    (%rdx),%rcx
    0.00 :   5c62b:  lea    -0x1(%rax),%r9d
    0.00 :   5c62f:  movslq %eax,%rdi
    0.00 :   5c632:  mov    %rdx,%r14
    0.00 :   5c635:  lea    0x0(,%rax,8),%r11
    0.00 :   5c63d:  mov    %rax,%r13
    0.00 :   5c640:  add    $0x8,%rdx
    0.00 :   5c644:  add    $0x1,%rax
    0.00 :   5c648:  test   %rcx,%rcx
    0.00 :   5c64b:  je     5c628 <__GI___printf_fp_l+0x1cf8>
         : 2291  ./stdio-common/printf_fp.c:746
    0.00 :   5c64d:  cmp    $0x3f,%r12d
    0.00 :   5c651:  jne    5cc20 <__GI___printf_fp_l+0x22f0>
         : 2294  ./stdio-common/printf_fp.c:748
    0.00 :   5c657:  sub    %rdi,%r8
    0.00 :   5c65a:  test   %r8,%r8
    0.00 :   5c65d:  jle    5c688 <__GI___printf_fp_l+0x1d58>
    0.00 :   5c65f:  mov    -0x90(%rbp),%r9
    0.00 :   5c666:  lea    (%r10,%r13,8),%rcx
    0.00 :   5c66a:  xor    %eax,%eax
    0.00 :   5c66c:  nopl   0x0(%rax)
         : 2302  ./stdio-common/printf_fp.c:748 (discriminator 3)
    0.00 :   5c670:  mov    (%rcx,%rax,8),%rdx
    0.00 :   5c674:  mov    %rdx,(%r9,%rax,8)
    0.00 :   5c678:  mov    -0x68(%rbp),%r8
    0.00 :   5c67c:  add    $0x1,%rax
    0.00 :   5c680:  sub    %rdi,%r8
    0.00 :   5c683:  cmp    %rax,%r8
    0.00 :   5c686:  jg     5c670 <__GI___printf_fp_l+0x1d40>
         : 2310  ./stdio-common/printf_fp.c:749 (discriminator 4)
    0.00 :   5c688:  mov    %r8,-0x88(%rbp)
    0.00 :   5c68f:  jmp    5c569 <__GI___printf_fp_l+0x1c39>
    0.00 :   5c694:  nopl   0x0(%rax)
         : 2314  ./stdio-common/printf_fp.c:708
    0.00 :   5c698:  cmp    $0x3c,%ecx
    0.00 :   5c69b:  jg     5cd7e <__GI___printf_fp_l+0x244e>
         : 2317  ./stdio-common/printf_fp.c:712
    0.00 :   5c6a1:  mov    $0x3c,%ecx
    0.00 :   5c6a6:  mov    $0xa,%edi
         : 2320  ./stdio-common/printf_fp.c:710
    0.00 :   5c6ab:  movq   $0x0,-0x50(%rbp)
         : 2322  ./stdio-common/printf_fp.c:712
    0.00 :   5c6b3:  sub    %r12d,%ecx
    0.00 :   5c6b6:  shl    %cl,%rdi
    0.00 :   5c6b9:  mov    %rdi,-0x48(%rbp)
    0.00 :   5c6bd:  mov    %rdi,%rcx
         : 2327  ./stdio-common/printf_fp.c:728
    0.00 :   5c6c0:  lea    0x2(%rsi),%edi
    0.00 :   5c6c3:  cmp    %edi,%r13d
    0.00 :   5c6c6:  jle    5c5e8 <__GI___printf_fp_l+0x1cb8>
         : 2331  ./stdio-common/printf_fp.c:730
    0.00 :   5c6cc:  cmp    %rcx,(%rax)
    0.00 :   5c6cf:  jb     5c5e8 <__GI___printf_fp_l+0x1cb8>
         : 2334  ./stdio-common/printf_fp.c:731
    0.00 :   5c6d5:  jne    5c569 <__GI___printf_fp_l+0x1c39>
         : 2336  ./stdio-common/printf_fp.c:732
    0.00 :   5c6db:  mov    -0x50(%rbp),%rax
    0.00 :   5c6df:  cmp    %rax,-0x10(%r10,%rdx,1)
    0.00 :   5c6e4:  jae    5c569 <__GI___printf_fp_l+0x1c39>
    0.00 :   5c6ea:  jmp    5c5e8 <__GI___printf_fp_l+0x1cb8>
    0.00 :   5c6ef:  nop
         : 2342  ./stdio-common/printf_fp.c:1174 (discriminator 2)
    0.00 :   5c6f0:  mov    0x28(%r12),%rax
    0.00 :   5c6f5:  cmp    0x30(%r12),%rax
    0.00 :   5c6fa:  jae    5d2ca <__GI___printf_fp_l+0x299a>
         : 2346  ./stdio-common/printf_fp.c:1174 (discriminator 11)
    0.00 :   5c700:  lea    0x1(%rax),%rdx
    0.00 :   5c704:  mov    %rdx,0x28(%r12)
    0.00 :   5c709:  movb   $0x2d,(%rax)
    0.00 :   5c70c:  jmp    5bd8e <__GI___printf_fp_l+0x145e>
         : 2351  ./stdio-common/printf_fp.c:1177
    0.00 :   5c711:  and    $0x10,%edx
    0.00 :   5c714:  je     5bd9d <__GI___printf_fp_l+0x146d>
         : 2354  ./stdio-common/printf_fp.c:1178
    0.00 :   5c71a:  mov    -0xbc(%rbp),%r8d
    0.00 :   5c721:  test   %r8d,%r8d
    0.00 :   5c724:  je     5d064 <__GI___printf_fp_l+0x2734>
         : 2358  ./stdio-common/printf_fp.c:1178 (discriminator 1)
    0.00 :   5c72a:  mov    0xa0(%r12),%rax
    0.00 :   5c732:  test   %rax,%rax
    0.00 :   5c735:  je     5d475 <__GI___printf_fp_l+0x2b45>
         : 2362  ./stdio-common/printf_fp.c:1178 (discriminator 4)
    0.00 :   5c73b:  mov    0x20(%rax),%rdx
    0.00 :   5c73f:  cmp    0x28(%rax),%rdx
    0.00 :   5c743:  jae    5d475 <__GI___printf_fp_l+0x2b45>
         : 2366  ./stdio-common/printf_fp.c:1178 (discriminator 6)
    0.00 :   5c749:  lea    0x4(%rdx),%rsi
    0.00 :   5c74d:  mov    %rsi,0x20(%rax)
    0.00 :   5c751:  movl   $0x20,(%rdx)
    0.00 :   5c757:  jmp    5bd8e <__GI___printf_fp_l+0x145e>
         : 2371  round_away():
         : 2372  ./stdio-common/../include/rounding-mode.h:58
    0.00 :   5c75c:  mov    -0xa4(%rbp),%r10d
    0.00 :   5c763:  test   %r10d,%r10d
    0.00 :   5c766:  jne    5ba70 <__GI___printf_fp_l+0x1140>
    0.00 :   5c76c:  jmp    5c08a <__GI___printf_fp_l+0x175a>
         : 2377  __GI___printf_fp_l():
         : 2378  ./stdio-common/printf_fp.c:1254
    0.00 :   5c771:  mov    0xd8(%r12),%rbx
         : 2380  IO_validate_vtable():
         : 2381  ./stdio-common/../libio/libioP.h:940
    0.00 :   5c779:  lea    0x1b9280(%rip),%rdx        # 215a00 <_IO_helper_jumps>
    0.00 :   5c780:  lea    0x1b9fe1(%rip),%rax        # 216768 <__stop___libc_IO_vtables>
    0.00 :   5c787:  sub    %rdx,%rax
         : 2385  ./stdio-common/../libio/libioP.h:942
    0.00 :   5c78a:  mov    %rbx,%rcx
    0.00 :   5c78d:  sub    %rdx,%rcx
         : 2388  ./stdio-common/../libio/libioP.h:943
    0.00 :   5c790:  cmp    %rcx,%rax
    0.00 :   5c793:  jbe    5d295 <__GI___printf_fp_l+0x2965>
         : 2391  __GI___printf_fp_l():
         : 2392  ./stdio-common/printf_fp.c:1254
    0.00 :   5c799:  movq   $0x0,-0xe0(%rbp)
    0.00 :   5c7a4:  mov    0x38(%rbx),%rax
    0.00 :   5c7a8:  jmp    5bf97 <__GI___printf_fp_l+0x1667>
    0.00 :   5c7ad:  mov    %r14,%r15
    0.00 :   5c7b0:  mov    %r9d,%r13d
    0.00 :   5c7b3:  test   %rdi,%rdi
    0.00 :   5c7b6:  jne    5c7e2 <__GI___printf_fp_l+0x1eb2>
    0.00 :   5c7b8:  jmp    5d0c2 <__GI___printf_fp_l+0x2792>
    0.00 :   5c7bd:  nopl   (%rax)
         : 2402  ./stdio-common/printf_fp.c:1254 (discriminator 54)
    0.00 :   5c7c0:  lea    0x1(%rax),%rcx
    0.00 :   5c7c4:  mov    %rcx,0x28(%r12)
    0.00 :   5c7c9:  mov    %dl,(%rax)
         : 2406  ./stdio-common/printf_fp.c:1254 (discriminator 59)
    0.00 :   5c7cb:  mov    %r14,%rdx
    0.00 :   5c7ce:  lea    0x0(%r13,%r15,1),%eax
    0.00 :   5c7d3:  sub    %r15,%rdx
    0.00 :   5c7d6:  sub    %r14d,%eax
    0.00 :   5c7d9:  add    %rbx,%rdx
    0.00 :   5c7dc:  je     5c88d <__GI___printf_fp_l+0x1f5d>
         : 2413  ./stdio-common/printf_fp.c:1254 (discriminator 64)
    0.00 :   5c7e2:  add    $0x1,%r15
    0.00 :   5c7e6:  mov    0x28(%r12),%rax
    0.00 :   5c7eb:  movzbl -0x1(%r15),%edx
    0.00 :   5c7f0:  cmp    0x30(%r12),%rax
    0.00 :   5c7f5:  jb     5c7c0 <__GI___printf_fp_l+0x1e90>
         : 2419  ./stdio-common/printf_fp.c:1254 (discriminator 53)
    0.00 :   5c7f7:  movzbl %dl,%esi
    0.00 :   5c7fa:  mov    %r12,%rdi
    0.00 :   5c7fd:  call   8d800 <__overflow>
    0.00 :   5c802:  cmp    $0xffffffff,%eax
    0.00 :   5c805:  jne    5c7cb <__GI___printf_fp_l+0x1e9b>
         : 2425  ./stdio-common/printf_fp.c:1254
    0.00 :   5c807:  mov    -0x14c(%rbp),%r15d
    0.00 :   5c80e:  mov    %eax,%r13d
    0.00 :   5c811:  test   %r15d,%r15d
    0.00 :   5c814:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 2430  ./stdio-common/printf_fp.c:1254 (discriminator 60)
    0.00 :   5c81a:  mov    -0xe0(%rbp),%rdi
    0.00 :   5c821:  call   28370 <free@plt>
    0.00 :   5c826:  mov    -0x130(%rbp),%rdi
    0.00 :   5c82d:  call   28370 <free@plt>
    0.00 :   5c832:  jmp    5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5c837:  nopw   0x0(%rax,%rax,1)
         : 2437  ./stdio-common/printf_fp.c:919
    0.00 :   5c840:  mov    0x1bc5c9(%rip),%rax        # 218e10 <_DYNAMIC+0x250>
         : 2439  ./stdio-common/printf_fp.c:920
    0.00 :   5c847:  mov    $0xffffffff,%r13d
         : 2441  ./stdio-common/printf_fp.c:919
    0.00 :   5c84d:  movl   $0x22,%fs:(%rax)
         : 2443  ./stdio-common/printf_fp.c:920
    0.00 :   5c854:  jmp    5aed8 <__GI___printf_fp_l+0x5a8>
         : 2445  ./stdio-common/printf_fp.c:882
    0.00 :   5c859:  movl   $0x1,-0x118(%rbp)
         : 2447  ./stdio-common/printf_fp.c:878
    0.00 :   5c863:  sub    $0x2,%eax
    0.00 :   5c866:  mov    %eax,-0x9c(%rbp)
         : 2450  ./stdio-common/printf_fp.c:881
    0.00 :   5c86c:  mov    -0x128(%rbp),%eax
    0.00 :   5c872:  sub    $0x1,%eax
    0.00 :   5c875:  mov    %eax,-0xe0(%rbp)
         : 2454  ./stdio-common/printf_fp.c:883
    0.00 :   5c87b:  cltq
    0.00 :   5c87d:  add    $0x8,%rax
    0.00 :   5c881:  mov    %rax,-0x120(%rbp)
    0.00 :   5c888:  jmp    5b3fe <__GI___printf_fp_l+0xace>
    0.00 :   5c88d:  mov    %eax,%r13d
    0.00 :   5c890:  jmp    5bfcb <__GI___printf_fp_l+0x169b>
         : 2461  ./stdio-common/printf_fp.c:474
    0.00 :   5c895:  mov    %esi,%eax
         : 2463  ./stdio-common/printf_fp.c:472
    0.00 :   5c897:  movslq %edx,%rdx
         : 2465  ./stdio-common/printf_fp.c:474
    0.00 :   5c89a:  sar    $0x1f,%eax
         : 2467  ./stdio-common/printf_fp.c:471
    0.00 :   5c89d:  lea    (%rdi,%rdx,8),%rdi
    0.00 :   5c8a1:  mov    %r13,%rdx
         : 2470  ./stdio-common/printf_fp.c:474
    0.00 :   5c8a4:  shr    $0x1a,%eax
    0.00 :   5c8a7:  lea    (%rsi,%rax,1),%ecx
         : 2473  ./stdio-common/printf_fp.c:471
    0.00 :   5c8aa:  mov    %r15,%rsi
         : 2475  ./stdio-common/printf_fp.c:474
    0.00 :   5c8ad:  and    $0x3f,%ecx
    0.00 :   5c8b0:  sub    %eax,%ecx
         : 2478  ./stdio-common/printf_fp.c:471
    0.00 :   5c8b2:  call   54d10 <__mpn_lshift>
         : 2480  ./stdio-common/printf_fp.c:475
    0.00 :   5c8b7:  mov    -0x98(%rbp),%ecx
    0.00 :   5c8bd:  mov    -0x88(%rbp),%rsi
    0.00 :   5c8c4:  add    %ecx,%r14d
    0.00 :   5c8c7:  lea    0x3f(%r14),%edx
    0.00 :   5c8cb:  cmovns %r14d,%edx
    0.00 :   5c8cf:  sar    $0x6,%edx
    0.00 :   5c8d2:  movslq %edx,%rdx
    0.00 :   5c8d5:  add    %rdx,%rsi
    0.00 :   5c8d8:  mov    %rsi,-0x88(%rbp)
         : 2490  ./stdio-common/printf_fp.c:476
    0.00 :   5c8df:  test   %rax,%rax
    0.00 :   5c8e2:  je     5b15c <__GI___printf_fp_l+0x82c>
         : 2493  ./stdio-common/printf_fp.c:477
    0.00 :   5c8e8:  lea    0x1(%rsi),%rdi
    0.00 :   5c8ec:  mov    %rdi,-0x88(%rbp)
    0.00 :   5c8f3:  mov    -0x90(%rbp),%rdi
    0.00 :   5c8fa:  mov    %rax,(%rdi,%rsi,8)
    0.00 :   5c8fe:  jmp    5b15c <__GI___printf_fp_l+0x82c>
         : 2499  ./stdio-common/printf_fp.c:260
    0.00 :   5c903:  xor    %r9d,%r9d
    0.00 :   5c906:  jmp    5c36b <__GI___printf_fp_l+0x1a3b>
         : 2502  ./stdio-common/printf_fp.c:908
    0.00 :   5c90b:  lea    0x2(%r9),%eax
         : 2504  ./stdio-common/printf_fp.c:905
    0.00 :   5c90f:  mov    %edi,-0x124(%rbp)
         : 2506  ./stdio-common/printf_fp.c:908
    0.00 :   5c915:  cltq
    0.00 :   5c917:  jmp    5b493 <__GI___printf_fp_l+0xb63>
         : 2509  __guess_grouping():
         : 2510  ./stdio-common/printf_fp.c:1315
    0.00 :   5c91c:  lea    -0x1(%rdx),%eax
    0.00 :   5c91f:  xor    %edx,%edx
    0.00 :   5c921:  div    %ecx
    0.00 :   5c923:  add    %edi,%eax
    0.00 :   5c925:  mov    %eax,-0x124(%rbp)
         : 2516  __GI___printf_fp_l():
         : 2517  ./stdio-common/printf_fp.c:908
    0.00 :   5c92b:  add    $0x1,%eax
    0.00 :   5c92e:  cltq
         : 2520  __guess_grouping():
         : 2521  ./stdio-common/printf_fp.c:1316
    0.00 :   5c930:  jmp    5b493 <__GI___printf_fp_l+0xb63>
         : 2523  __GI___printf_fp_l():
         : 2524  ./stdio-common/printf_fp.c:1043
    0.00 :   5c935:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   5c93c:  je     5d085 <__GI___printf_fp_l+0x2755>
         : 2527  ./stdio-common/printf_fp.c:1045
    0.00 :   5c942:  mov    -0x130(%rbp),%rax
         : 2529  ./stdio-common/printf_fp.c:1046
    0.00 :   5c949:  cmpl   $0x1,-0xa0(%rbp)
         : 2531  ./stdio-common/printf_fp.c:1045
    0.00 :   5c950:  movl   $0x31,0x8(%rax)
         : 2533  ./stdio-common/printf_fp.c:1046
    0.00 :   5c957:  sbb    %eax,%eax
    0.00 :   5c959:  and    $0x2,%eax
    0.00 :   5c95c:  sub    $0x1,%eax
    0.00 :   5c95f:  add    %eax,-0x98(%rbp)
         : 2538  ./stdio-common/printf_fp.c:1051
    0.00 :   5c965:  jne    5c971 <__GI___printf_fp_l+0x2041>
         : 2540  ./stdio-common/printf_fp.c:1052
    0.00 :   5c967:  movl   $0x0,-0xa0(%rbp)
         : 2542  ./stdio-common/printf_fp.c:1087
    0.00 :   5c971:  mov    -0x134(%rbp),%eax
    0.00 :   5c977:  mov    -0x128(%rbp),%ecx
    0.00 :   5c97d:  add    %ebx,%eax
    0.00 :   5c97f:  cmp    %ecx,%eax
    0.00 :   5c981:  jle    5ba70 <__GI___printf_fp_l+0x1140>
         : 2548  ./stdio-common/printf_fp.c:1089
    0.00 :   5c987:  sub    %ecx,%eax
    0.00 :   5c989:  movslq %eax,%rsi
         : 2551  ./stdio-common/printf_fp.c:1090
    0.00 :   5c98c:  sub    %eax,%ebx
         : 2553  ./stdio-common/printf_fp.c:1089
    0.00 :   5c98e:  shl    $0x2,%rsi
    0.00 :   5c992:  sub    %rsi,%r15
         : 2556  ./stdio-common/printf_fp.c:1090
    0.00 :   5c995:  jmp    5ba70 <__GI___printf_fp_l+0x1140>
    0.00 :   5c99a:  movq   $0xe,-0x120(%rbp)
         : 2559  ./stdio-common/printf_fp.c:847
    0.00 :   5c9a5:  movl   $0x6,-0xf0(%rbp)
         : 2561  ./stdio-common/printf_fp.c:851
    0.00 :   5c9af:  jmp    5c2c4 <__GI___printf_fp_l+0x1994>
         : 2563  ./stdio-common/printf_fp.c:947
    0.00 :   5c9b4:  mov    -0xe0(%rbp),%r11d
    0.00 :   5c9bb:  test   %r11d,%r11d
    0.00 :   5c9be:  jle    5d01c <__GI___printf_fp_l+0x26ec>
         : 2567  ./stdio-common/printf_fp.c:947 (discriminator 1)
    0.00 :   5c9c4:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   5c9cc:  jg     5b5eb <__GI___printf_fp_l+0xcbb>
         : 2570  ./stdio-common/printf_fp.c:947 (discriminator 2)
    0.00 :   5c9d2:  mov    -0x90(%rbp),%rdx
    0.00 :   5c9d9:  cmpq   $0x0,(%rdx)
    0.00 :   5c9dd:  jne    5b5eb <__GI___printf_fp_l+0xcbb>
    0.00 :   5c9e3:  mov    %rax,%r15
         : 2575  ./stdio-common/printf_fp.c:944
    0.00 :   5c9e6:  mov    $0x1,%esi
    0.00 :   5c9eb:  jmp    5b5fc <__GI___printf_fp_l+0xccc>
         : 2578  ./stdio-common/printf_fp.c:956
    0.00 :   5c9f0:  mov    -0xc0(%rbp),%ebx
    0.00 :   5c9f6:  lea    0x10(%rax),%r15
         : 2581  ./stdio-common/printf_fp.c:955
    0.00 :   5c9fa:  subl   $0x1,-0x98(%rbp)
    0.00 :   5ca01:  lea    -0xa0(%rbp),%r13
         : 2584  ./stdio-common/printf_fp.c:954
    0.00 :   5ca08:  movl   $0x30,0x8(%rax)
         : 2586  ./stdio-common/printf_fp.c:956
    0.00 :   5ca0f:  mov    %ebx,0xc(%rax)
         : 2588  ./stdio-common/printf_fp.c:835
    0.00 :   5ca12:  movl   $0x0,-0x134(%rbp)
    0.00 :   5ca1c:  jmp    5b5fc <__GI___printf_fp_l+0xccc>
         : 2591  ./stdio-common/printf_fp.c:983 (discriminator 1)
    0.00 :   5ca21:  mov    -0x90(%rbp),%r10
    0.00 :   5ca28:  cmpq   $0x0,(%r10)
    0.00 :   5ca2c:  je     5ba2b <__GI___printf_fp_l+0x10fb>
         : 2595  ./stdio-common/printf_fp.c:986
    0.00 :   5ca32:  cmpq   $0x0,-0x78(%rbp)
         : 2597  ./stdio-common/printf_fp.c:990
    0.00 :   5ca37:  mov    $0x1,%eax
         : 2599  ./stdio-common/printf_fp.c:986
    0.00 :   5ca3c:  je     5ba1e <__GI___printf_fp_l+0x10ee>
    0.00 :   5ca42:  jmp    5ba26 <__GI___printf_fp_l+0x10f6>
         : 2602  ./stdio-common/printf_fp.c:579
    0.00 :   5ca47:  test   %ecx,%ecx
    0.00 :   5ca49:  je     5ceb1 <__GI___printf_fp_l+0x2581>
         : 2605  ./stdio-common/printf_fp.c:595
    0.00 :   5ca4f:  xor    %eax,%eax
         : 2607  ./stdio-common/printf_fp.c:596
    0.00 :   5ca51:  mov    (%r9,%r13,1),%r9
         : 2609  ./stdio-common/printf_fp.c:595
    0.00 :   5ca55:  tzcnt  %r8,%rax
    0.00 :   5ca5a:  mov    %eax,%r8d
         : 2612  ./stdio-common/printf_fp.c:596
    0.00 :   5ca5d:  test   %r9,%r9
    0.00 :   5ca60:  je     5d180 <__GI___printf_fp_l+0x2850>
         : 2615  ./stdio-common/printf_fp.c:599
    0.00 :   5ca66:  xor    %r8d,%r8d
         : 2617  ./stdio-common/printf_fp.c:608
    0.00 :   5ca69:  mov    $0x40,%r15d
         : 2619  ./stdio-common/printf_fp.c:599
    0.00 :   5ca6f:  tzcnt  %r9,%r8
         : 2621  ./stdio-common/printf_fp.c:600
    0.00 :   5ca74:  cmp    %r8d,%eax
    0.00 :   5ca77:  cmovle %eax,%r8d
         : 2624  ./stdio-common/printf_fp.c:608
    0.00 :   5ca7b:  sub    %ecx,%r15d
         : 2626  ./stdio-common/printf_fp.c:639
    0.00 :   5ca7e:  movslq %r14d,%rbx
         : 2628  ./stdio-common/printf_fp.c:618
    0.00 :   5ca81:  cmp    %r8d,%r15d
    0.00 :   5ca84:  jle    5cf4c <__GI___printf_fp_l+0x261c>
         : 2631  ./stdio-common/printf_fp.c:637
    0.00 :   5ca8a:  sub    $0x1,%r14d
         : 2633  ./stdio-common/printf_fp.c:636
    0.00 :   5ca8e:  sub    $0x8,%r13
    0.00 :   5ca92:  mov    %r15d,%ecx
         : 2636  ./stdio-common/printf_fp.c:637
    0.00 :   5ca95:  movslq %r14d,%r14
         : 2638  ./stdio-common/printf_fp.c:636
    0.00 :   5ca98:  lea    (%rdi,%r13,1),%rsi
    0.00 :   5ca9c:  sub    %r14,%rdx
    0.00 :   5ca9f:  call   54e30 <__mpn_rshift>
         : 2642  ./stdio-common/printf_fp.c:640
    0.00 :   5caa4:  mov    -0x90(%rbp),%rdi
    0.00 :   5caab:  mov    %r15d,%ecx
         : 2645  ./stdio-common/printf_fp.c:639
    0.00 :   5caae:  sub    %rbx,-0x78(%rbp)
         : 2647  ./stdio-common/printf_fp.c:640
    0.00 :   5cab2:  mov    -0x88(%rbp),%rdx
    0.00 :   5cab9:  lea    (%rdi,%r13,1),%rsi
    0.00 :   5cabd:  sub    %r14,%rdx
    0.00 :   5cac0:  call   54e30 <__mpn_rshift>
         : 2652  ./stdio-common/printf_fp.c:643
    0.00 :   5cac5:  mov    -0x88(%rbp),%rdx
         : 2654  ./stdio-common/printf_fp.c:644
    0.00 :   5cacc:  mov    -0x90(%rbp),%rcx
    0.00 :   5cad3:  mov    %rdx,%rax
    0.00 :   5cad6:  sub    %r14,%rax
    0.00 :   5cad9:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   5cadf:  jne    5cae7 <__GI___printf_fp_l+0x21b7>
         : 2660  ./stdio-common/printf_fp.c:643
    0.00 :   5cae1:  mov    %rdx,%rax
    0.00 :   5cae4:  sub    %rbx,%rax
    0.00 :   5cae7:  mov    %rax,-0x88(%rbp)
    0.00 :   5caee:  jmp    5b348 <__GI___printf_fp_l+0xa18>
         : 2665  ./stdio-common/printf_fp.c:791
    0.00 :   5caf3:  mov    -0xe0(%rbp),%r12
    0.00 :   5cafa:  test   %esi,%esi
    0.00 :   5cafc:  jle    5cb97 <__GI___printf_fp_l+0x2267>
         : 2669  ./stdio-common/printf_fp.c:795
    0.00 :   5cb02:  mov    -0x88(%rbp),%rdx
    0.00 :   5cb09:  mov    -0x70(%rbp),%rdi
    0.00 :   5cb0d:  mov    $0xa,%ecx
    0.00 :   5cb12:  mov    -0x90(%rbp),%rsi
    0.00 :   5cb19:  call   55420 <__mpn_mul_1>
         : 2675  ./stdio-common/printf_fp.c:799
    0.00 :   5cb1e:  mov    -0x70(%rbp),%rsi
    0.00 :   5cb22:  xor    %edi,%edi
         : 2678  ./stdio-common/printf_fp.c:800
    0.00 :   5cb24:  mov    $0x4,%edx
         : 2680  ./stdio-common/printf_fp.c:796
    0.00 :   5cb29:  mov    -0x88(%rbp),%r8
         : 2682  ./stdio-common/printf_fp.c:800
    0.00 :   5cb30:  mov    -0x98(%rbp),%eax
    0.00 :   5cb36:  mov    %edx,%ecx
         : 2685  ./stdio-common/printf_fp.c:796
    0.00 :   5cb38:  mov    %r8,-0x68(%rbp)
         : 2687  ./stdio-common/printf_fp.c:799
    0.00 :   5cb3c:  tzcnt  (%rsi),%rdi
         : 2689  ./stdio-common/printf_fp.c:800
    0.00 :   5cb41:  cmp    %edx,%eax
    0.00 :   5cb43:  cmovle %eax,%ecx
    0.00 :   5cb46:  cmp    %edi,%ecx
    0.00 :   5cb48:  jle    5d0ca <__GI___printf_fp_l+0x279a>
         : 2694  ./stdio-common/printf_fp.c:803
    0.00 :   5cb4e:  mov    $0x40,%r9d
         : 2696  ./stdio-common/printf_fp.c:802
    0.00 :   5cb54:  mov    -0x90(%rbp),%rdi
    0.00 :   5cb5b:  mov    %r8,%rdx
         : 2699  ./stdio-common/printf_fp.c:803
    0.00 :   5cb5e:  sub    %ecx,%r9d
         : 2701  ./stdio-common/printf_fp.c:802
    0.00 :   5cb61:  mov    %r9d,%ecx
    0.00 :   5cb64:  call   54d10 <__mpn_lshift>
         : 2704  ./stdio-common/printf_fp.c:804
    0.00 :   5cb69:  test   %rax,%rax
    0.00 :   5cb6c:  je     5cb85 <__GI___printf_fp_l+0x2255>
         : 2707  ./stdio-common/printf_fp.c:805
    0.00 :   5cb6e:  mov    -0x68(%rbp),%rdx
    0.00 :   5cb72:  lea    0x1(%rdx),%rcx
    0.00 :   5cb76:  mov    %rcx,-0x68(%rbp)
    0.00 :   5cb7a:  mov    -0x90(%rbp),%rcx
    0.00 :   5cb81:  mov    %rax,(%rcx,%rdx,8)
         : 2713  ./stdio-common/printf_fp.c:809
    0.00 :   5cb85:  mov    -0x68(%rbp),%rax
         : 2715  ./stdio-common/printf_fp.c:810
    0.00 :   5cb89:  orl    $0x1,-0xd0(%rbp)
         : 2717  ./stdio-common/printf_fp.c:809
    0.00 :   5cb90:  mov    %rax,-0x88(%rbp)
         : 2719  ./stdio-common/printf_fp.c:813
    0.00 :   5cb97:  mov    -0xd0(%rbp),%eax
    0.00 :   5cb9d:  mov    %eax,-0x98(%rbp)
    0.00 :   5cba3:  jmp    5b348 <__GI___printf_fp_l+0xa18>
    0.00 :   5cba8:  xor    %eax,%eax
         : 2724  ./stdio-common/printf_fp.c:1203
    0.00 :   5cbaa:  xor    %r13d,%r13d
    0.00 :   5cbad:  jmp    5be3d <__GI___printf_fp_l+0x150d>
         : 2727  ./stdio-common/printf_fp.c:418 (discriminator 45)
    0.00 :   5cbb2:  movzbl %dl,%esi
    0.00 :   5cbb5:  mov    %r12,%rdi
    0.00 :   5cbb8:  call   8d800 <__overflow>
    0.00 :   5cbbd:  cmp    $0xffffffff,%eax
    0.00 :   5cbc0:  jne    5b76f <__GI___printf_fp_l+0xe3f>
    0.00 :   5cbc6:  jmp    5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5cbcb:  nopl   0x0(%rax,%rax,1)
         : 2735  ./stdio-common/printf_fp.c:418
    0.00 :   5cbd0:  movzbl %dl,%esi
    0.00 :   5cbd3:  mov    %r12,%rdi
    0.00 :   5cbd6:  call   8d800 <__overflow>
    0.00 :   5cbdb:  cmp    $0xffffffff,%eax
    0.00 :   5cbde:  jne    5b74f <__GI___printf_fp_l+0xe1f>
    0.00 :   5cbe4:  jmp    5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5cbe9:  nopl   0x0(%rax)
    0.00 :   5cbf0:  movzbl %dl,%esi
    0.00 :   5cbf3:  mov    %r12,%rdi
    0.00 :   5cbf6:  call   8d800 <__overflow>
    0.00 :   5cbfb:  cmp    $0xffffffff,%eax
    0.00 :   5cbfe:  jne    5b72f <__GI___printf_fp_l+0xdff>
    0.00 :   5cc04:  jmp    5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5cc09:  nopl   0x0(%rax)
         : 2750  ./stdio-common/printf_fp.c:868
    0.00 :   5cc10:  lea    0x2(%rdx),%rax
    0.00 :   5cc14:  mov    %rax,-0x120(%rbp)
    0.00 :   5cc1b:  jmp    5c2c4 <__GI___printf_fp_l+0x1994>
         : 2754  ./stdio-common/printf_fp.c:753
    0.00 :   5cc20:  xor    %eax,%eax
    0.00 :   5cc22:  tzcnt  %rcx,%rax
         : 2757  ./stdio-common/printf_fp.c:767
    0.00 :   5cc27:  mov    $0x3f,%ecx
    0.00 :   5cc2c:  sub    %r12d,%ecx
         : 2760  ./stdio-common/printf_fp.c:748
    0.00 :   5cc2f:  mov    -0x90(%rbp),%r12
         : 2762  ./stdio-common/printf_fp.c:767
    0.00 :   5cc36:  cmp    %ecx,%eax
    0.00 :   5cc38:  jge    5d32b <__GI___printf_fp_l+0x29fb>
         : 2765  ./stdio-common/printf_fp.c:780
    0.00 :   5cc3e:  movslq %r9d,%r13
         : 2767  ./stdio-common/printf_fp.c:779
    0.00 :   5cc41:  mov    %r8,%rdx
    0.00 :   5cc44:  lea    -0x8(%r10,%r11,1),%rsi
    0.00 :   5cc49:  sub    %r13,%rdx
    0.00 :   5cc4c:  mov    %r12,%rdi
    0.00 :   5cc4f:  call   54e30 <__mpn_rshift>
         : 2773  ./stdio-common/printf_fp.c:782
    0.00 :   5cc54:  mov    -0x68(%rbp),%rax
         : 2775  ./stdio-common/printf_fp.c:789
    0.00 :   5cc58:  mov    -0x98(%rbp),%esi
         : 2777  ./stdio-common/printf_fp.c:782
    0.00 :   5cc5e:  sub    %r13,%rax
    0.00 :   5cc61:  mov    %rax,-0x88(%rbp)
    0.00 :   5cc68:  jmp    5c569 <__GI___printf_fp_l+0x1c39>
    0.00 :   5cc6d:  mov    %rcx,-0xd0(%rbp)
         : 2782  ./stdio-common/printf_fp.c:412 (discriminator 5)
    0.00 :   5cc74:  mov    $0x2d,%esi
         : 2784  ./stdio-common/printf_fp.c:414 (discriminator 5)
    0.00 :   5cc79:  mov    %r12,%rdi
    0.00 :   5cc7c:  call   838b0 <__woverflow>
    0.00 :   5cc81:  mov    -0xd0(%rbp),%rcx
    0.00 :   5cc88:  cmp    $0xffffffff,%eax
    0.00 :   5cc8b:  sete   %al
         : 2790  ./stdio-common/printf_fp.c:414
    0.00 :   5cc8e:  test   %al,%al
    0.00 :   5cc90:  je     5ae04 <__GI___printf_fp_l+0x4d4>
         : 2793  ./stdio-common/printf_fp.c:1269
    0.00 :   5cc96:  mov    $0xffffffff,%r13d
    0.00 :   5cc9c:  jmp    5aed8 <__GI___printf_fp_l+0x5a8>
    0.00 :   5cca1:  movslq %edx,%rbx
    0.00 :   5cca4:  jmp    5b14f <__GI___printf_fp_l+0x81f>
         : 2798  ./stdio-common/printf_fp.c:1013
    0.00 :   5cca9:  cmp    -0xf0(%rbp),%edi
    0.00 :   5ccaf:  jne    5ccc1 <__GI___printf_fp_l+0x2391>
    0.00 :   5ccb1:  mov    -0x100(%rbp),%r8d
    0.00 :   5ccb8:  test   %r8d,%r8d
    0.00 :   5ccbb:  jg     5c0f1 <__GI___printf_fp_l+0x17c1>
         : 2804  ./stdio-common/printf_fp.c:1097
    0.00 :   5ccc1:  mov    -0xf0(%rbp),%r9d
    0.00 :   5ccc8:  add    -0x100(%rbp),%r9d
         : 2807  ./stdio-common/printf_fp.c:1018
    0.00 :   5cccf:  cmpb   $0x67,-0x13c(%rbp)
         : 2809  ./stdio-common/printf_fp.c:1028
    0.00 :   5ccd6:  mov    (%rax),%esi
         : 2811  ./stdio-common/printf_fp.c:1018
    0.00 :   5ccd8:  jne    5c118 <__GI___printf_fp_l+0x17e8>
         : 2813  ./stdio-common/printf_fp.c:1018 (discriminator 1)
    0.00 :   5ccde:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   5cce5:  jne    5c118 <__GI___printf_fp_l+0x17e8>
         : 2816  ./stdio-common/printf_fp.c:1018
    0.00 :   5cceb:  mov    -0xb8(%rbp),%rdi
    0.00 :   5ccf2:  testb  $0x8,0xc(%rdi)
    0.00 :   5ccf6:  je     5c118 <__GI___printf_fp_l+0x17e8>
         : 2820  ./stdio-common/printf_fp.c:1019
    0.00 :   5ccfc:  mov    -0x130(%rbp),%rdi
    0.00 :   5cd03:  add    $0xc,%rdi
         : 2823  ./stdio-common/printf_fp.c:1018
    0.00 :   5cd07:  cmp    %rdi,%rax
    0.00 :   5cd0a:  jne    5c118 <__GI___printf_fp_l+0x17e8>
    0.00 :   5cd10:  mov    -0x130(%rbp),%rdi
    0.00 :   5cd17:  cmpl   $0x30,0x8(%rdi)
    0.00 :   5cd1b:  jne    5c118 <__GI___printf_fp_l+0x17e8>
         : 2829  ./stdio-common/printf_fp.c:1097
    0.00 :   5cd21:  mov    -0x100(%rbp),%edi
    0.00 :   5cd27:  mov    -0xf0(%rbp),%ecx
    0.00 :   5cd2d:  lea    -0x1(%rdi,%rcx,1),%r9d
    0.00 :   5cd32:  jmp    5c118 <__GI___printf_fp_l+0x17e8>
    0.00 :   5cd37:  nopw   0x0(%rax,%rax,1)
         : 2835  ./stdio-common/printf_fp.c:1176 (discriminator 2)
    0.00 :   5cd40:  mov    0x28(%r12),%rax
    0.00 :   5cd45:  cmp    0x30(%r12),%rax
    0.00 :   5cd4a:  jae    5d464 <__GI___printf_fp_l+0x2b34>
         : 2839  ./stdio-common/printf_fp.c:1176 (discriminator 11)
    0.00 :   5cd50:  lea    0x1(%rax),%rdx
    0.00 :   5cd54:  mov    %rdx,0x28(%r12)
    0.00 :   5cd59:  movb   $0x2b,(%rax)
    0.00 :   5cd5c:  jmp    5bd8e <__GI___printf_fp_l+0x145e>
         : 2844  ./stdio-common/printf_fp.c:1269 (discriminator 2)
    0.00 :   5cd61:  call   806a0 <_IO_padn>
    0.00 :   5cd66:  jmp    5c01b <__GI___printf_fp_l+0x16eb>
    0.00 :   5cd6b:  movq   $0x0,-0xe0(%rbp)
    0.00 :   5cd76:  mov    %rdi,%r12
    0.00 :   5cd79:  jmp    5bfcb <__GI___printf_fp_l+0x169b>
         : 2850  ./stdio-common/printf_fp.c:718
    0.00 :   5cd7e:  lea    -0x50(%rbp),%rdi
         : 2852  ./stdio-common/printf_fp.c:719
    0.00 :   5cd82:  mov    $0x40,%ecx
         : 2854  ./stdio-common/printf_fp.c:718
    0.00 :   5cd87:  mov    $0x2,%edx
         : 2856  ./stdio-common/printf_fp.c:716
    0.00 :   5cd8c:  movdqa 0x1854bc(%rip),%xmm4        # 1e2250 <othermask+0x1c0>
         : 2858  ./stdio-common/printf_fp.c:718
    0.00 :   5cd94:  mov    %rdi,%rsi
         : 2860  ./stdio-common/printf_fp.c:719
    0.00 :   5cd97:  sub    %r12d,%ecx
         : 2862  ./stdio-common/printf_fp.c:716
    0.00 :   5cd9a:  movaps %xmm4,-0x50(%rbp)
         : 2864  ./stdio-common/printf_fp.c:718
    0.00 :   5cd9e:  call   54d10 <__mpn_lshift>
         : 2866  ./stdio-common/printf_fp.c:728
    0.00 :   5cda3:  mov    -0x98(%rbp),%esi
    0.00 :   5cda9:  lea    0x2(%rsi),%eax
    0.00 :   5cdac:  cmp    %r13d,%eax
    0.00 :   5cdaf:  jge    5c5dd <__GI___printf_fp_l+0x1cad>
         : 2871  ./stdio-common/printf_fp.c:729
    0.00 :   5cdb5:  lea    0x3(%rsi),%eax
    0.00 :   5cdb8:  cmp    %r13d,%eax
    0.00 :   5cdbb:  jne    5c569 <__GI___printf_fp_l+0x1c39>
         : 2875  ./stdio-common/printf_fp.c:748
    0.00 :   5cdc1:  mov    -0x68(%rbp),%r8
         : 2877  ./stdio-common/printf_fp.c:745
    0.00 :   5cdc5:  mov    -0x70(%rbp),%r10
         : 2879  ./stdio-common/printf_fp.c:730
    0.00 :   5cdc9:  mov    -0x48(%rbp),%rcx
    0.00 :   5cdcd:  lea    0x0(,%r8,8),%rdx
    0.00 :   5cdd5:  lea    -0x8(%r10,%rdx,1),%rax
    0.00 :   5cdda:  jmp    5c6cc <__GI___printf_fp_l+0x1d9c>
         : 2884  ./stdio-common/printf_fp.c:393 (discriminator 1)
    0.00 :   5cddf:  fxam
    0.00 :   5cde1:  fnstsw %ax
    0.00 :   5cde3:  fstp   %st(0)
    0.00 :   5cde5:  mov    %eax,%r13d
    0.00 :   5cde8:  and    $0x200,%r13d
    0.00 :   5cdef:  jmp    5b8b7 <__GI___printf_fp_l+0xf87>
         : 2891  ./stdio-common/printf_fp.c:396 (discriminator 1)
    0.00 :   5cdf4:  movmskpd %xmm0,%r13d
    0.00 :   5cdf9:  and    $0x1,%r13d
    0.00 :   5cdfd:  jmp    5b8b7 <__GI___printf_fp_l+0xf87>
         : 2895  __guess_grouping():
         : 2896  ./stdio-common/printf_fp.c:1315
    0.00 :   5ce02:  lea    -0x1(%rdx),%eax
    0.00 :   5ce05:  xor    %edx,%edx
    0.00 :   5ce07:  div    %edi
    0.00 :   5ce09:  add    %esi,%eax
    0.00 :   5ce0b:  mov    %eax,-0x124(%rbp)
         : 2902  ./stdio-common/printf_fp.c:1316
    0.00 :   5ce11:  jmp    5bb27 <__GI___printf_fp_l+0x11f7>
         : 2904  __GI___printf_fp_l():
         : 2905  ./stdio-common/printf_fp.c:1181
    0.00 :   5ce16:  mov    -0xbc(%rbp),%esi
         : 2907  ./stdio-common/printf_fp.c:1171
    0.00 :   5ce1c:  movslq -0xd0(%rbp),%r13
    0.00 :   5ce23:  mov    %r9d,-0xe0(%rbp)
         : 2910  ./stdio-common/printf_fp.c:1181
    0.00 :   5ce2a:  mov    %r12,%rdi
    0.00 :   5ce2d:  test   %esi,%esi
    0.00 :   5ce2f:  mov    %r13,%rdx
    0.00 :   5ce32:  mov    $0x30,%esi
    0.00 :   5ce37:  je     5d11d <__GI___printf_fp_l+0x27ed>
         : 2916  ./stdio-common/printf_fp.c:1181 (discriminator 1)
    0.00 :   5ce3d:  call   824e0 <_IO_wpadn>
    0.00 :   5ce42:  mov    -0xe0(%rbp),%r9d
         : 2919  ./stdio-common/printf_fp.c:1181 (discriminator 4)
    0.00 :   5ce49:  cmp    %r13,%rax
    0.00 :   5ce4c:  jne    5b6ec <__GI___printf_fp_l+0xdbc>
         : 2922  ./stdio-common/printf_fp.c:1181 (discriminator 6)
    0.00 :   5ce52:  add    -0xd0(%rbp),%r9d
    0.00 :   5ce59:  jmp    5bdbc <__GI___printf_fp_l+0x148c>
         : 2925  ./stdio-common/printf_fp.c:926
    0.00 :   5ce5e:  mov    %r15,%rdi
    0.00 :   5ce61:  mov    %esi,-0xd0(%rbp)
    0.00 :   5ce67:  call   28380 <malloc@plt>
    0.00 :   5ce6c:  mov    %rax,-0x130(%rbp)
         : 2930  ./stdio-common/printf_fp.c:927
    0.00 :   5ce73:  test   %rax,%rax
    0.00 :   5ce76:  je     5b702 <__GI___printf_fp_l+0xdd2>
         : 2933  __libc_use_alloca():
         : 2934  ./stdio-common/../sysdeps/pthread/allocalim.h:29
    0.00 :   5ce7c:  movl   $0x0,-0x14c(%rbp)
    0.00 :   5ce86:  mov    -0xd0(%rbp),%esi
         : 2937  __GI___printf_fp_l():
         : 2938  ./stdio-common/../sysdeps/pthread/allocalim.h:29
    0.00 :   5ce8c:  movl   $0x1,-0x140(%rbp)
    0.00 :   5ce96:  jmp    5b55e <__GI___printf_fp_l+0xc2e>
         : 2941  ./stdio-common/printf_fp.c:1171 (discriminator 2)
    0.00 :   5ce9b:  call   806a0 <_IO_padn>
    0.00 :   5cea0:  jmp    5bd33 <__GI___printf_fp_l+0x1403>
    0.00 :   5cea5:  mov    -0xe0(%rbp),%r12
    0.00 :   5ceac:  jmp    5cb97 <__GI___printf_fp_l+0x2267>
         : 2946  ./stdio-common/printf_fp.c:585
    0.00 :   5ceb1:  movslq %r14d,%r14
    0.00 :   5ceb4:  sub    %r14,%rdx
    0.00 :   5ceb7:  test   %rdx,%rdx
    0.00 :   5ceba:  jle    5cee0 <__GI___printf_fp_l+0x25b0>
    0.00 :   5cebc:  lea    (%rdi,%rax,8),%rsi
    0.00 :   5cec0:  xor    %ecx,%ecx
    0.00 :   5cec2:  nopw   0x0(%rax,%rax,1)
         : 2954  ./stdio-common/printf_fp.c:585 (discriminator 3)
    0.00 :   5cec8:  mov    (%rsi,%rcx,8),%rdx
    0.00 :   5cecc:  mov    %rdx,(%rdi,%rcx,8)
    0.00 :   5ced0:  mov    -0x78(%rbp),%rdx
    0.00 :   5ced4:  add    $0x1,%rcx
    0.00 :   5ced8:  sub    %r14,%rdx
    0.00 :   5cedb:  cmp    %rcx,%rdx
    0.00 :   5cede:  jg     5cec8 <__GI___printf_fp_l+0x2598>
         : 2962  ./stdio-common/printf_fp.c:586 (discriminator 4)
    0.00 :   5cee0:  mov    %rdx,-0x78(%rbp)
         : 2964  ./stdio-common/printf_fp.c:587 (discriminator 4)
    0.00 :   5cee4:  mov    -0x88(%rbp),%rdx
    0.00 :   5ceeb:  sub    %r14,%rdx
    0.00 :   5ceee:  test   %rdx,%rdx
    0.00 :   5cef1:  jle    5cf1b <__GI___printf_fp_l+0x25eb>
    0.00 :   5cef3:  lea    (%r9,%rax,8),%rcx
         : 2970  ./stdio-common/printf_fp.c:587
    0.00 :   5cef7:  xor    %eax,%eax
    0.00 :   5cef9:  nopl   0x0(%rax)
         : 2973  ./stdio-common/printf_fp.c:587 (discriminator 3)
    0.00 :   5cf00:  mov    (%rcx,%rax,8),%rdx
    0.00 :   5cf04:  mov    %rdx,(%r9,%rax,8)
    0.00 :   5cf08:  mov    -0x88(%rbp),%rdx
    0.00 :   5cf0f:  add    $0x1,%rax
    0.00 :   5cf13:  sub    %r14,%rdx
    0.00 :   5cf16:  cmp    %rax,%rdx
    0.00 :   5cf19:  jg     5cf00 <__GI___printf_fp_l+0x25d0>
         : 2981  ./stdio-common/printf_fp.c:588 (discriminator 4)
    0.00 :   5cf1b:  mov    %rdx,-0x88(%rbp)
    0.00 :   5cf22:  jmp    5b348 <__GI___printf_fp_l+0xa18>
         : 2984  ./stdio-common/printf_fp.c:608
    0.00 :   5cf27:  mov    $0x40,%r15d
         : 2986  ./stdio-common/printf_fp.c:605
    0.00 :   5cf2d:  tzcnt  %r8,%r8
         : 2988  ./stdio-common/printf_fp.c:608
    0.00 :   5cf32:  sub    %ecx,%r15d
    0.00 :   5cf35:  test   %r14d,%r14d
    0.00 :   5cf38:  jne    5ca7e <__GI___printf_fp_l+0x214e>
    0.00 :   5cf3e:  xor    %r14d,%r14d
    0.00 :   5cf41:  xor    %ebx,%ebx
         : 2994  ./stdio-common/printf_fp.c:608 (discriminator 1)
    0.00 :   5cf43:  cmp    %r8d,%r15d
    0.00 :   5cf46:  jg     5d240 <__GI___printf_fp_l+0x2910>
         : 2997  ./stdio-common/printf_fp.c:624
    0.00 :   5cf4c:  sub    %rbx,%rdx
    0.00 :   5cf4f:  mov    %r15d,%ecx
         : 3000  ./stdio-common/printf_fp.c:626
    0.00 :   5cf52:  add    $0x1,%r14d
         : 3002  ./stdio-common/printf_fp.c:624
    0.00 :   5cf56:  call   54e30 <__mpn_rshift>
         : 3004  ./stdio-common/printf_fp.c:627
    0.00 :   5cf5b:  mov    -0x90(%rbp),%rdi
    0.00 :   5cf62:  mov    %r15d,%ecx
         : 3007  ./stdio-common/printf_fp.c:626
    0.00 :   5cf65:  movslq %r14d,%r14
         : 3009  ./stdio-common/printf_fp.c:627
    0.00 :   5cf68:  mov    -0x88(%rbp),%rdx
         : 3011  ./stdio-common/printf_fp.c:626
    0.00 :   5cf6f:  sub    %r14,-0x78(%rbp)
         : 3013  ./stdio-common/printf_fp.c:627
    0.00 :   5cf73:  lea    (%rdi,%r13,1),%rsi
    0.00 :   5cf77:  sub    %rbx,%rdx
    0.00 :   5cf7a:  call   54e30 <__mpn_rshift>
         : 3017  ./stdio-common/printf_fp.c:629
    0.00 :   5cf7f:  mov    -0x88(%rbp),%rdx
    0.00 :   5cf86:  mov    -0x90(%rbp),%rcx
    0.00 :   5cf8d:  mov    %rdx,%rax
    0.00 :   5cf90:  sub    %rbx,%rax
    0.00 :   5cf93:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   5cf99:  jne    5cae7 <__GI___printf_fp_l+0x21b7>
    0.00 :   5cf9f:  mov    %rdx,%rax
    0.00 :   5cfa2:  sub    %r14,%rax
    0.00 :   5cfa5:  jmp    5cae7 <__GI___printf_fp_l+0x21b7>
         : 3027  ./stdio-common/printf_fp.c:939
    0.00 :   5cfaa:  movl   $0x0,-0x134(%rbp)
         : 3029  ./stdio-common/printf_fp.c:933
    0.00 :   5cfb4:  mov    %r14,%rax
    0.00 :   5cfb7:  lea    -0xa0(%rbp),%r13
    0.00 :   5cfbe:  jmp    5b5d0 <__GI___printf_fp_l+0xca0>
         : 3033  ./stdio-common/printf_fp.c:1259
    0.00 :   5cfc3:  mov    -0xe0(%rbp),%rdi
    0.00 :   5cfca:  call   28370 <free@plt>
         : 3036  ./stdio-common/printf_fp.c:1260
    0.00 :   5cfcf:  mov    -0x130(%rbp),%rdi
    0.00 :   5cfd6:  call   28370 <free@plt>
         : 3039  ./stdio-common/printf_fp.c:1263
    0.00 :   5cfdb:  movq   $0x0,-0xe0(%rbp)
         : 3041  ./stdio-common/printf_fp.c:1264
    0.00 :   5cfe6:  movq   $0x0,-0x130(%rbp)
    0.00 :   5cff1:  jmp    5bfdb <__GI___printf_fp_l+0x16ab>
    0.00 :   5cff6:  mov    %rcx,-0xd0(%rbp)
         : 3045  ./stdio-common/printf_fp.c:412 (discriminator 10)
    0.00 :   5cffd:  mov    $0x2d,%esi
         : 3047  ./stdio-common/printf_fp.c:414 (discriminator 10)
    0.00 :   5d002:  mov    %r12,%rdi
    0.00 :   5d005:  call   8d800 <__overflow>
    0.00 :   5d00a:  mov    -0xd0(%rbp),%rcx
    0.00 :   5d011:  cmp    $0xffffffff,%eax
    0.00 :   5d014:  sete   %al
    0.00 :   5d017:  jmp    5cc8e <__GI___printf_fp_l+0x235e>
         : 3054  ./stdio-common/printf_fp.c:961
    0.00 :   5d01c:  movl   $0x0,-0x100(%rbp)
    0.00 :   5d026:  mov    -0xf0(%rbp),%r9d
    0.00 :   5d02d:  mov    %rax,%r15
         : 3058  ./stdio-common/printf_fp.c:960
    0.00 :   5d030:  xor    %ebx,%ebx
    0.00 :   5d032:  jmp    5b9a6 <__GI___printf_fp_l+0x1076>
         : 3061  ./stdio-common/printf_fp.c:1122 (discriminator 1)
    0.00 :   5d037:  cmpb   $0x67,-0x13c(%rbp)
    0.00 :   5d03e:  jne    5d049 <__GI___printf_fp_l+0x2719>
    0.00 :   5d040:  cmp    $0x4,%eax
    0.00 :   5d043:  je     5d4bf <__GI___printf_fp_l+0x2b8f>
         : 3066  ./stdio-common/printf_fp.c:1142
    0.00 :   5d049:  mov    $0x2d,%edi
    0.00 :   5d04e:  jmp    5bc42 <__GI___printf_fp_l+0x1312>
    0.00 :   5d053:  mov    %rcx,-0xd0(%rbp)
         : 3070  ./stdio-common/printf_fp.c:414 (discriminator 5)
    0.00 :   5d05a:  mov    $0x2b,%esi
    0.00 :   5d05f:  jmp    5cc79 <__GI___printf_fp_l+0x2349>
         : 3073  ./stdio-common/printf_fp.c:1178 (discriminator 2)
    0.00 :   5d064:  mov    0x28(%r12),%rax
    0.00 :   5d069:  cmp    0x30(%r12),%rax
    0.00 :   5d06e:  jae    5d4a9 <__GI___printf_fp_l+0x2b79>
         : 3077  ./stdio-common/printf_fp.c:1178 (discriminator 11)
    0.00 :   5d074:  lea    0x1(%rax),%rdx
    0.00 :   5d078:  mov    %rdx,0x28(%r12)
    0.00 :   5d07d:  movb   $0x20,(%rax)
    0.00 :   5d080:  jmp    5bd8e <__GI___printf_fp_l+0x145e>
         : 3082  ./stdio-common/printf_fp.c:1054
    0.00 :   5d085:  mov    -0x128(%rbp),%esi
         : 3084  ./stdio-common/printf_fp.c:1059
    0.00 :   5d08b:  mov    -0x130(%rbp),%rax
         : 3086  ./stdio-common/printf_fp.c:1054
    0.00 :   5d092:  cmp    %esi,-0x134(%rbp)
    0.00 :   5d098:  je     5d339 <__GI___printf_fp_l+0x2a09>
         : 3089  ./stdio-common/printf_fp.c:1081
    0.00 :   5d09e:  addl   $0x1,-0x134(%rbp)
         : 3091  ./stdio-common/printf_fp.c:1080
    0.00 :   5d0a5:  lea    0x4(%rax),%r14
    0.00 :   5d0a9:  movl   $0x31,0x4(%rax)
         : 3094  ./stdio-common/printf_fp.c:1081
    0.00 :   5d0b0:  jmp    5c971 <__GI___printf_fp_l+0x2041>
         : 3096  ./stdio-common/printf_fp.c:1237
    0.00 :   5d0b5:  mov    -0xb8(%rbp),%rax
    0.00 :   5d0bc:  testb  $0x8,0xd(%rax)
    0.00 :   5d0c0:  jne    5d0de <__GI___printf_fp_l+0x27ae>
         : 3100  ./stdio-common/printf_fp.c:1254
    0.00 :   5d0c2:  mov    %r9d,%r13d
    0.00 :   5d0c5:  jmp    5bfcb <__GI___printf_fp_l+0x169b>
         : 3103  ./stdio-common/printf_fp.c:808
    0.00 :   5d0ca:  mov    -0x90(%rbp),%rdi
    0.00 :   5d0d1:  mov    %r8,%rdx
    0.00 :   5d0d4:  call   54e30 <__mpn_rshift>
    0.00 :   5d0d9:  jmp    5cb85 <__GI___printf_fp_l+0x2255>
         : 3108  ./stdio-common/printf_fp.c:1227
    0.00 :   5d0de:  mov    -0xe0(%rbp),%rdi
         : 3110  ./stdio-common/printf_fp.c:1221
    0.00 :   5d0e5:  mov    -0xe0(%rbp),%rax
    0.00 :   5d0ec:  mov    -0xf0(%rbp),%rbx
         : 3113  ./stdio-common/printf_fp.c:1247
    0.00 :   5d0f3:  mov    %rdi,%rsi
    0.00 :   5d0f6:  mov    %r9d,-0xe8(%rbp)
         : 3116  ./stdio-common/printf_fp.c:1221
    0.00 :   5d0fd:  add    %rax,%rbx
         : 3118  ./stdio-common/printf_fp.c:1247
    0.00 :   5d100:  mov    %rax,%rdi
    0.00 :   5d103:  mov    %rbx,%rdx
    0.00 :   5d106:  call   5a620 <_i18n_number_rewrite>
    0.00 :   5d10b:  mov    -0xe8(%rbp),%r9d
         : 3123  ./stdio-common/printf_fp.c:1221
    0.00 :   5d112:  mov    %rbx,%rdi
         : 3125  ./stdio-common/printf_fp.c:1247
    0.00 :   5d115:  mov    %rax,%r14
         : 3127  ./stdio-common/printf_fp.c:1254
    0.00 :   5d118:  jmp    5bf58 <__GI___printf_fp_l+0x1628>
         : 3129  ./stdio-common/printf_fp.c:1181 (discriminator 2)
    0.00 :   5d11d:  call   806a0 <_IO_padn>
    0.00 :   5d122:  mov    -0xe0(%rbp),%r9d
    0.00 :   5d129:  jmp    5ce49 <__GI___printf_fp_l+0x2519>
         : 3133  ./stdio-common/printf_fp.c:1247
    0.00 :   5d12e:  xor    %edx,%edx
    0.00 :   5d130:  xor    %esi,%esi
    0.00 :   5d132:  xor    %edi,%edi
    0.00 :   5d134:  mov    %r9d,-0xe0(%rbp)
    0.00 :   5d13b:  call   5a620 <_i18n_number_rewrite>
         : 3139  ./stdio-common/printf_fp.c:1254
    0.00 :   5d140:  mov    -0xe0(%rbp),%r9d
    0.00 :   5d147:  jmp    5c212 <__GI___printf_fp_l+0x18e2>
         : 3142  ./stdio-common/printf_fp.c:1211
    0.00 :   5d14c:  mov    %rax,%rdi
    0.00 :   5d14f:  mov    %r9d,-0xe8(%rbp)
    0.00 :   5d156:  call   28380 <malloc@plt>
         : 3146  ./stdio-common/printf_fp.c:1212
    0.00 :   5d15b:  mov    -0xe8(%rbp),%r9d
    0.00 :   5d162:  test   %rax,%rax
         : 3149  ./stdio-common/printf_fp.c:1211
    0.00 :   5d165:  mov    %rax,-0xe0(%rbp)
         : 3151  ./stdio-common/printf_fp.c:1212
    0.00 :   5d16c:  jne    5beb6 <__GI___printf_fp_l+0x1586>
    0.00 :   5d172:  jmp    5b6f6 <__GI___printf_fp_l+0xdc6>
    0.00 :   5d177:  nopw   0x0(%rax,%rax,1)
         : 3155  ./stdio-common/printf_fp.c:608
    0.00 :   5d180:  mov    $0x40,%r15d
    0.00 :   5d186:  sub    %ecx,%r15d
    0.00 :   5d189:  jmp    5ca7e <__GI___printf_fp_l+0x214e>
         : 3159  ./stdio-common/printf_fp.c:746
    0.00 :   5d18e:  cmp    $0x3f,%r12d
    0.00 :   5d192:  je     5d4ef <__GI___printf_fp_l+0x2bbf>
         : 3162  ./stdio-common/printf_fp.c:756
    0.00 :   5d198:  mov    $0x3f,%ecx
         : 3164  ./stdio-common/printf_fp.c:753
    0.00 :   5d19d:  tzcnt  %rax,%rax
         : 3166  ./stdio-common/printf_fp.c:756
    0.00 :   5d1a2:  sub    %r12d,%ecx
    0.00 :   5d1a5:  cmp    %ecx,%eax
    0.00 :   5d1a7:  jl     5d1be <__GI___printf_fp_l+0x288e>
    0.00 :   5d1a9:  mov    -0x90(%rbp),%r12
    0.00 :   5d1b0:  xor    %r13d,%r13d
         : 3172  ./stdio-common/printf_fp.c:769
    0.00 :   5d1b3:  mov    %r8,%rdx
    0.00 :   5d1b6:  mov    %r10,%rsi
    0.00 :   5d1b9:  jmp    5cc4c <__GI___printf_fp_l+0x231c>
         : 3176  ./stdio-common/printf_fp.c:762
    0.00 :   5d1be:  mov    -0x90(%rbp),%rdi
    0.00 :   5d1c5:  mov    %r8,%rdx
    0.00 :   5d1c8:  mov    %r10,%rsi
         : 3180  ./stdio-common/printf_fp.c:763
    0.00 :   5d1cb:  lea    0x1(%r12),%ecx
         : 3182  ./stdio-common/printf_fp.c:762
    0.00 :   5d1d0:  call   54d10 <__mpn_lshift>
         : 3184  ./stdio-common/printf_fp.c:765
    0.00 :   5d1d5:  mov    -0x90(%rbp),%rdx
         : 3186  ./stdio-common/printf_fp.c:789
    0.00 :   5d1dc:  mov    -0x98(%rbp),%esi
         : 3188  ./stdio-common/printf_fp.c:762
    0.00 :   5d1e2:  mov    %rax,%r8
         : 3190  ./stdio-common/printf_fp.c:764
    0.00 :   5d1e5:  mov    -0x68(%rbp),%rax
    0.00 :   5d1e9:  add    $0x1,%rax
    0.00 :   5d1ed:  mov    %rax,-0x88(%rbp)
         : 3194  ./stdio-common/printf_fp.c:765
    0.00 :   5d1f4:  mov    %r8,-0x8(%rdx,%rax,8)
    0.00 :   5d1f9:  jmp    5c569 <__GI___printf_fp_l+0x1c39>
    0.00 :   5d1fe:  mov    %rcx,-0xd0(%rbp)
         : 3198  ./stdio-common/printf_fp.c:414 (discriminator 10)
    0.00 :   5d205:  mov    $0x2b,%esi
    0.00 :   5d20a:  jmp    5d002 <__GI___printf_fp_l+0x26d2>
         : 3201  ./stdio-common/printf_fp.c:416 (discriminator 5)
    0.00 :   5d20f:  mov    $0x20,%esi
    0.00 :   5d214:  mov    %r12,%rdi
    0.00 :   5d217:  mov    %rcx,-0xd0(%rbp)
    0.00 :   5d21e:  call   838b0 <__woverflow>
    0.00 :   5d223:  mov    -0xd0(%rbp),%rcx
    0.00 :   5d22a:  cmp    $0xffffffff,%eax
    0.00 :   5d22d:  jne    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5d233:  jmp    5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5d238:  nopl   0x0(%rax,%rax,1)
         : 3211  ./stdio-common/printf_fp.c:613
    0.00 :   5d240:  mov    %rdi,%rsi
    0.00 :   5d243:  mov    %ecx,-0xd0(%rbp)
    0.00 :   5d249:  call   54d10 <__mpn_lshift>
         : 3215  ./stdio-common/printf_fp.c:614
    0.00 :   5d24e:  mov    -0x90(%rbp),%rdi
    0.00 :   5d255:  mov    -0xd0(%rbp),%ecx
    0.00 :   5d25b:  mov    -0x88(%rbp),%rdx
    0.00 :   5d262:  mov    %rdi,%rsi
    0.00 :   5d265:  call   54d10 <__mpn_lshift>
         : 3221  ./stdio-common/printf_fp.c:615
    0.00 :   5d26a:  test   %rax,%rax
    0.00 :   5d26d:  je     5b348 <__GI___printf_fp_l+0xa18>
         : 3224  ./stdio-common/printf_fp.c:616
    0.00 :   5d273:  mov    -0x88(%rbp),%rdx
    0.00 :   5d27a:  lea    0x1(%rdx),%rcx
    0.00 :   5d27e:  mov    %rcx,-0x88(%rbp)
    0.00 :   5d285:  mov    -0x90(%rbp),%rcx
    0.00 :   5d28c:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   5d290:  jmp    5b348 <__GI___printf_fp_l+0xa18>
    0.00 :   5d295:  mov    %r8,-0xf0(%rbp)
    0.00 :   5d29c:  mov    %r9d,-0xe8(%rbp)
         : 3233  IO_validate_vtable():
         : 3234  ./stdio-common/../libio/libioP.h:946
    0.00 :   5d2a3:  call   89ef0 <_IO_vtable_check>
         : 3236  __GI___printf_fp_l():
         : 3237  ./stdio-common/printf_fp.c:1254
    0.00 :   5d2a8:  mov    0x38(%rbx),%rax
    0.00 :   5d2ac:  movq   $0x0,-0xe0(%rbp)
    0.00 :   5d2b7:  mov    -0xe8(%rbp),%r9d
    0.00 :   5d2be:  mov    -0xf0(%rbp),%r8
    0.00 :   5d2c5:  jmp    5bf97 <__GI___printf_fp_l+0x1667>
    0.00 :   5d2ca:  mov    %r9d,-0xe0(%rbp)
         : 3244  ./stdio-common/printf_fp.c:1174 (discriminator 10)
    0.00 :   5d2d1:  mov    $0x2d,%esi
         : 3246  ./stdio-common/printf_fp.c:1178 (discriminator 10)
    0.00 :   5d2d6:  mov    %r12,%rdi
    0.00 :   5d2d9:  call   8d800 <__overflow>
    0.00 :   5d2de:  mov    -0xe0(%rbp),%r9d
    0.00 :   5d2e5:  cmp    $0xffffffff,%eax
    0.00 :   5d2e8:  sete   %al
    0.00 :   5d2eb:  jmp    5b6e4 <__GI___printf_fp_l+0xdb4>
    0.00 :   5d2f0:  mov    %r9d,-0xe8(%rbp)
         : 3254  IO_validate_vtable():
         : 3255  ./stdio-common/../libio/libioP.h:946
    0.00 :   5d2f7:  mov    %rdi,-0xf0(%rbp)
    0.00 :   5d2fe:  call   89ef0 <_IO_vtable_check>
         : 3258  __GI___printf_fp_l():
         : 3259  ./stdio-common/printf_fp.c:1254
    0.00 :   5d303:  mov    0x38(%rbx),%rax
    0.00 :   5d307:  mov    -0xe8(%rbp),%r9d
    0.00 :   5d30e:  mov    -0xf0(%rbp),%r8
    0.00 :   5d315:  jmp    5bf97 <__GI___printf_fp_l+0x1667>
    0.00 :   5d31a:  mov    %r9d,-0xe0(%rbp)
         : 3265  ./stdio-common/printf_fp.c:1176 (discriminator 5)
    0.00 :   5d321:  mov    $0x2b,%esi
    0.00 :   5d326:  jmp    5b6cf <__GI___printf_fp_l+0xd9f>
         : 3268  ./stdio-common/printf_fp.c:748
    0.00 :   5d32b:  movslq %edi,%r13
         : 3270  ./stdio-common/printf_fp.c:745
    0.00 :   5d32e:  mov    %r14,%r10
         : 3272  ./stdio-common/printf_fp.c:748
    0.00 :   5d331:  sub    %r13,%r8
    0.00 :   5d334:  jmp    5d1b3 <__GI___printf_fp_l+0x2883>
         : 3275  ./stdio-common/printf_fp.c:1059
    0.00 :   5d339:  mov    -0xc0(%rbp),%esi
         : 3277  ./stdio-common/printf_fp.c:1060
    0.00 :   5d33f:  movl   $0x31,(%rax)
         : 3279  ./stdio-common/printf_fp.c:1059
    0.00 :   5d345:  mov    %esi,0x4(%rax)
         : 3281  ./stdio-common/printf_fp.c:1062
    0.00 :   5d348:  mov    -0xb8(%rbp),%rax
    0.00 :   5d34f:  testb  $0x8,0xc(%rax)
    0.00 :   5d353:  jne    5d35d <__GI___printf_fp_l+0x2a2d>
    0.00 :   5d355:  test   %ebx,%ebx
    0.00 :   5d357:  je     5d486 <__GI___printf_fp_l+0x2b56>
         : 3287  ./stdio-common/printf_fp.c:1065
    0.00 :   5d35d:  movslq -0x134(%rbp),%rax
    0.00 :   5d364:  mov    -0x130(%rbp),%rdi
    0.00 :   5d36b:  movl   $0x30,0x8(%rdi,%rax,4)
         : 3291  ./stdio-common/printf_fp.c:1069
    0.00 :   5d373:  lea    0x1(%rbx,%rax,1),%ebx
    0.00 :   5d377:  mov    %rdi,%r14
         : 3294  ./stdio-common/printf_fp.c:1074
    0.00 :   5d37a:  mov    -0xb8(%rbp),%rax
         : 3296  ./stdio-common/printf_fp.c:1072
    0.00 :   5d381:  addl   $0x1,-0x98(%rbp)
         : 3298  ./stdio-common/printf_fp.c:1074
    0.00 :   5d388:  movslq 0x8(%rax),%rsi
    0.00 :   5d38c:  mov    0x1bba65(%rip),%rax        # 218df8 <_DYNAMIC+0x238>
    0.00 :   5d393:  mov    %fs:(%rax),%rax
         : 3302  ./stdio-common/printf_fp.c:1070
    0.00 :   5d397:  movl   $0x1,-0x134(%rbp)
         : 3304  ./stdio-common/printf_fp.c:1074
    0.00 :   5d3a1:  movzwl (%rax,%rsi,2),%eax
    0.00 :   5d3a5:  and    $0x100,%ax
    0.00 :   5d3a9:  cmp    $0x1,%ax
    0.00 :   5d3ad:  sbb    %eax,%eax
    0.00 :   5d3af:  and    $0x20,%eax
    0.00 :   5d3b2:  add    $0x45,%eax
    0.00 :   5d3b5:  mov    %eax,-0x9c(%rbp)
    0.00 :   5d3bb:  jmp    5c971 <__GI___printf_fp_l+0x2041>
         : 3313  ./stdio-common/printf_fp.c:579
    0.00 :   5d3c0:  test   %esi,%esi
    0.00 :   5d3c2:  je     5b348 <__GI___printf_fp_l+0xa18>
         : 3316  ./stdio-common/printf_fp.c:596
    0.00 :   5d3c8:  mov    -0x90(%rbp),%rsi
         : 3318  ./stdio-common/printf_fp.c:595
    0.00 :   5d3cf:  tzcnt  %rax,%rax
    0.00 :   5d3d4:  mov    %eax,%r8d
         : 3321  ./stdio-common/printf_fp.c:596
    0.00 :   5d3d7:  mov    (%rsi),%r13
    0.00 :   5d3da:  test   %r13,%r13
    0.00 :   5d3dd:  je     5d498 <__GI___printf_fp_l+0x2b68>
         : 3325  ./stdio-common/printf_fp.c:599
    0.00 :   5d3e3:  xor    %r8d,%r8d
         : 3327  ./stdio-common/printf_fp.c:608
    0.00 :   5d3e6:  mov    $0x40,%r15d
         : 3329  ./stdio-common/printf_fp.c:573
    0.00 :   5d3ec:  mov    %rdi,%rsi
         : 3331  ./stdio-common/printf_fp.c:599
    0.00 :   5d3ef:  tzcnt  %r13,%r8
         : 3333  ./stdio-common/printf_fp.c:600
    0.00 :   5d3f4:  cmp    %r8d,%eax
    0.00 :   5d3f7:  cmovle %eax,%r8d
         : 3336  ./stdio-common/printf_fp.c:608
    0.00 :   5d3fb:  sub    %ecx,%r15d
         : 3338  ./stdio-common/printf_fp.c:573
    0.00 :   5d3fe:  xor    %r13d,%r13d
    0.00 :   5d401:  jmp    5cf3e <__GI___printf_fp_l+0x260e>
         : 3341  ./stdio-common/printf_fp.c:416 (discriminator 10)
    0.00 :   5d406:  mov    $0x20,%esi
    0.00 :   5d40b:  mov    %r12,%rdi
    0.00 :   5d40e:  mov    %rcx,-0xd0(%rbp)
    0.00 :   5d415:  call   8d800 <__overflow>
    0.00 :   5d41a:  mov    -0xd0(%rbp),%rcx
    0.00 :   5d421:  cmp    $0xffffffff,%eax
    0.00 :   5d424:  jne    5ae04 <__GI___printf_fp_l+0x4d4>
    0.00 :   5d42a:  jmp    5b702 <__GI___printf_fp_l+0xdd2>
    0.00 :   5d42f:  nop
         : 3351  ./stdio-common/printf_fp.c:1254
    0.00 :   5d430:  movq   $0x0,-0xe0(%rbp)
    0.00 :   5d43b:  mov    %r9d,%r13d
    0.00 :   5d43e:  jmp    5bfcb <__GI___printf_fp_l+0x169b>
         : 3355  ./stdio-common/printf_fp.c:1269 (discriminator 5)
    0.00 :   5d443:  mov    -0x14c(%rbp),%r11d
    0.00 :   5d44a:  test   %r11d,%r11d
    0.00 :   5d44d:  jne    5b702 <__GI___printf_fp_l+0xdd2>
         : 3359  ./stdio-common/printf_fp.c:1269 (discriminator 7)
    0.00 :   5d453:  mov    -0xe0(%rbp),%rdi
    0.00 :   5d45a:  call   28370 <free@plt>
    0.00 :   5d45f:  jmp    5b6f6 <__GI___printf_fp_l+0xdc6>
    0.00 :   5d464:  mov    %r9d,-0xe0(%rbp)
         : 3364  ./stdio-common/printf_fp.c:1176 (discriminator 10)
    0.00 :   5d46b:  mov    $0x2b,%esi
    0.00 :   5d470:  jmp    5d2d6 <__GI___printf_fp_l+0x29a6>
    0.00 :   5d475:  mov    %r9d,-0xe0(%rbp)
         : 3368  ./stdio-common/printf_fp.c:1178 (discriminator 5)
    0.00 :   5d47c:  mov    $0x20,%esi
    0.00 :   5d481:  jmp    5b6cf <__GI___printf_fp_l+0xd9f>
    0.00 :   5d486:  mov    -0x128(%rbp),%ebx
    0.00 :   5d48c:  mov    -0x130(%rbp),%r14
    0.00 :   5d493:  jmp    5d37a <__GI___printf_fp_l+0x2a4a>
         : 3374  ./stdio-common/printf_fp.c:608
    0.00 :   5d498:  mov    $0x40,%r15d
         : 3376  ./stdio-common/printf_fp.c:573
    0.00 :   5d49e:  mov    %rdi,%rsi
         : 3378  ./stdio-common/printf_fp.c:608
    0.00 :   5d4a1:  sub    %ecx,%r15d
    0.00 :   5d4a4:  jmp    5cf3e <__GI___printf_fp_l+0x260e>
    0.00 :   5d4a9:  mov    %r9d,-0xe0(%rbp)
         : 3382  ./stdio-common/printf_fp.c:1178 (discriminator 10)
    0.00 :   5d4b0:  mov    $0x20,%esi
    0.00 :   5d4b5:  jmp    5d2d6 <__GI___printf_fp_l+0x29a6>
         : 3385  ./stdio-common/printf_fp.c:1272
    0.00 :   5d4ba:  call   136740 <__stack_chk_fail>
         : 3387  ./stdio-common/printf_fp.c:1129
    0.00 :   5d4bf:  mov    $0x6,%edx
    0.00 :   5d4c4:  lea    0x185575(%rip),%rsi        # 1e2a40 <default_rwlockattr+0x368>
    0.00 :   5d4cb:  mov    %r14,%rdi
    0.00 :   5d4ce:  call   c5ae0 <wmemcpy>
         : 3392  ./stdio-common/printf_fp.c:1130
    0.00 :   5d4d3:  mov    -0xc0(%rbp),%eax
    0.00 :   5d4d9:  mov    %eax,0x4(%r14)
         : 3395  ./stdio-common/printf_fp.c:1131
    0.00 :   5d4dd:  lea    0x8(%r14),%rax
    0.00 :   5d4e1:  cmp    %r15,%rax
    0.00 :   5d4e4:  jbe    5d4f9 <__GI___printf_fp_l+0x2bc9>
         : 3399  ./stdio-common/printf_fp.c:1137
    0.00 :   5d4e6:  add    $0x14,%r15
    0.00 :   5d4ea:  jmp    5bcb3 <__GI___printf_fp_l+0x1383>
         : 3402  ./stdio-common/printf_fp.c:745
    0.00 :   5d4ef:  xor    %r13d,%r13d
    0.00 :   5d4f2:  xor    %edi,%edi
    0.00 :   5d4f4:  jmp    5c657 <__GI___printf_fp_l+0x1d27>
         : 3406  ./stdio-common/printf_fp.c:1133
    0.00 :   5d4f9:  mov    %r15,%rdx
    0.00 :   5d4fc:  lea    0x18(%r14),%rdi
    0.00 :   5d500:  mov    $0x30,%esi
         : 3410  ./stdio-common/printf_fp.c:1134
    0.00 :   5d505:  add    $0x10,%r15
         : 3412  ./stdio-common/printf_fp.c:1133
    0.00 :   5d509:  sub    %rax,%rdx
    0.00 :   5d50c:  sar    $0x2,%rdx
    0.00 :   5d510:  call   283f0 <*ABS*+0xc5b00@plt>
         : 3416  ./stdio-common/printf_fp.c:1134
    0.00 :   5d515:  jmp    5bcb3 <__GI___printf_fp_l+0x1383>
    0.00 :   5d51a:  jmp    28961 <__GI___printf_fp_l.cold>
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89e50ab0 <load0>:
    0.00 :   ffffffff89e50ab0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89e50ab5:       push   %rbp
    0.00 :   ffffffff89e50ab6:       mov    %rsi,%rax
    0.00 :   ffffffff89e50ab9:       neg    %rax
    0.00 :   ffffffff89e50abc:       mov    %rsp,%rbp
    0.00 :   ffffffff89e50abf:       push   %r12
    0.00 :   ffffffff89e50ac1:       mov    %rdi,%r12
    0.00 :   ffffffff89e50ac4:       push   %rbx
    0.00 :   ffffffff89e50ac5:       sub    $0x10,%rsp
  100.00 :   ffffffff89e50ac9:       lock xadd %rax,(%rdi)
    0.00 :   ffffffff89e50ace:       sub    %rsi,%rax
    0.00 :   ffffffff89e50ad1:       js     0xffffffff89e50af3
    0.00 :   ffffffff89e50ad3:       mov    %rax,%rsi
    0.00 :   ffffffff89e50ad6:       mov    %r12,%rdi
    0.00 :   ffffffff89e50ad9:       call   0xffffffff89e50a10
    0.00 :   ffffffff89e50ade:       add    $0x10,%rsp
    0.00 :   ffffffff89e50ae2:       pop    %rbx
    0.00 :   ffffffff89e50ae3:       pop    %r12
    0.00 :   ffffffff89e50ae5:       pop    %rbp
    0.00 :   ffffffff89e50ae6:       xor    %eax,%eax
    0.00 :   ffffffff89e50ae8:       xor    %edx,%edx
    0.00 :   ffffffff89e50aea:       xor    %esi,%esi
    0.00 :   ffffffff89e50aec:       xor    %edi,%edi
    0.00 :   ffffffff89e50aee:       ret
    0.00 :   ffffffff89e50aef:       int3
    0.00 :   ffffffff89e50af0:       int3
    0.00 :   ffffffff89e50af1:       int3
    0.00 :   ffffffff89e50af2:       int3
    0.00 :   ffffffff89e50af3:       movzbl 0x216287e(%rip),%ebx        # 0xffffffff8bfb3378
    0.00 :   ffffffff89e50afa:       mov    %rsi,%rdx
    0.00 :   ffffffff89e50afd:       cmp    $0x1,%bl
    0.00 :   ffffffff89e50b00:       ja     0xffffffff8aa441e1
    0.00 :   ffffffff89e50b06:       and    $0x1,%ebx
    0.00 :   ffffffff89e50b09:       jne    0xffffffff89e50b23
    0.00 :   ffffffff89e50b0b:       mov    %rax,%rsi
    0.00 :   ffffffff89e50b0e:       mov    $0xffffffff8b364be0,%rdi
    0.00 :   ffffffff89e50b15:       movb   $0x1,0x216285c(%rip)        # 0xffffffff8bfb3378
    0.00 :   ffffffff89e50b1c:       call   0xffffffff89ae9890
    0.00 :   ffffffff89e50b21:       ud2
    0.00 :   ffffffff89e50b23:       movq   $0x0,(%r12)
    0.00 :   ffffffff89e50b2b:       xor    %esi,%esi
    0.00 :   ffffffff89e50b2d:       jmp    0xffffffff89e50ad6
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89b4f450 <load0>:
    0.00 :   ffffffff89b4f450:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f455:       push   %rbp
    0.00 :   ffffffff89b4f456:       mov    %rsp,%rbp
    0.00 :   ffffffff89b4f459:       push   %r15
    0.00 :   ffffffff89b4f45b:       xor    %r15d,%r15d
    0.00 :   ffffffff89b4f45e:       push   %r14
    0.00 :   ffffffff89b4f460:       mov    %rdi,%r14
    0.00 :   ffffffff89b4f463:       push   %r13
    0.00 :   ffffffff89b4f465:       push   %r12
    0.00 :   ffffffff89b4f467:       mov    %rsi,%r12
    0.00 :   ffffffff89b4f46a:       push   %rbx
    0.00 :   ffffffff89b4f46b:       lea    0x80(%rsi),%rbx
    0.00 :   ffffffff89b4f472:       sub    $0x18,%rsp
    0.00 :   ffffffff89b4f476:       cmpl   $0x5,0x40c(%rsi)
    0.00 :   ffffffff89b4f47d:       mov    %edx,-0x2c(%rbp)
    0.00 :   ffffffff89b4f480:       sete   %r15b
    0.00 :   ffffffff89b4f484:       xchg   %ax,%ax
    0.00 :   ffffffff89b4f486:       mov    0x178(%rsi),%rax
    0.00 :   ffffffff89b4f48d:       mov    %eax,%edx
    0.00 :   ffffffff89b4f48f:       shr    $0x20,%rax
    0.00 :   ffffffff89b4f493:       and    $0x7fffffff,%edx
    0.00 :   ffffffff89b4f499:       cmp    %eax,%edx
    0.00 :   ffffffff89b4f49b:       cmovb  %eax,%edx
    0.00 :   ffffffff89b4f49e:       add    0x1b8(%rdi),%edx
    0.00 :   ffffffff89b4f4a4:       mov    %edx,0x1b8(%rdi)
    0.00 :   ffffffff89b4f4aa:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f4af:       testb  $0x4,0x950(%r12)
    0.00 :   ffffffff89b4f4b8:       jne    0xffffffff89b4f7f0
    0.00 :   ffffffff89b4f4be:       test   %rbx,%rbx
    0.00 :   ffffffff89b4f4c1:       je     0xffffffff89b4f572
    0.00 :   ffffffff89b4f4c7:       mov    -0x2c(%rbp),%edx
    0.00 :   ffffffff89b4f4ca:       mov    $0x1,%r13d
    0.00 :   ffffffff89b4f4d0:       jmp    0xffffffff89b4f50d
    0.00 :   ffffffff89b4f4d2:       mov    0x78(%rbx),%r12
    0.00 :   ffffffff89b4f4d6:       mov    %rbx,%rsi
    0.00 :   ffffffff89b4f4d9:       mov    %r12,%rdi
    0.00 :   ffffffff89b4f4dc:       call   0xffffffff89b4eee0
    0.00 :   ffffffff89b4f4e1:       mov    0x158(%r12),%esi
    0.00 :   ffffffff89b4f4e9:       add    %r15d,0x1c(%r12)
    0.00 :   ffffffff89b4f4ee:       addl   $0x1,0x14(%r12)
    0.00 :   ffffffff89b4f4f4:       test   %esi,%esi
    0.00 :   ffffffff89b4f4f6:       cmovg  %r13d,%r15d
    0.00 :   ffffffff89b4f4fa:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f4ff:       mov    0x70(%rbx),%rbx
    0.00 :   ffffffff89b4f503:       mov    $0x1,%edx
    0.00 :   ffffffff89b4f508:       test   %rbx,%rbx
    0.00 :   ffffffff89b4f50b:       je     0xffffffff89b4f572
  100.00 :   ffffffff89b4f50d:       mov    0x38(%rbx),%edi
    0.00 :   ffffffff89b4f510:       test   %edi,%edi
    0.00 :   ffffffff89b4f512:       je     0xffffffff89b4f4d2
    0.00 :   ffffffff89b4f514:       mov    0x78(%rbx),%r12
    0.00 :   ffffffff89b4f518:       mov    $0x1,%edx
    0.00 :   ffffffff89b4f51d:       mov    %rbx,%rsi
    0.00 :   ffffffff89b4f520:       mov    %r12,%rdi
    0.00 :   ffffffff89b4f523:       call   0xffffffff89b47ab0
    0.00 :   ffffffff89b4f528:       mov    0x80(%rbx),%rax
    0.00 :   ffffffff89b4f52f:       test   %rax,%rax
    0.00 :   ffffffff89b4f532:       je     0xffffffff89b4f53e
    0.00 :   ffffffff89b4f534:       mov    0x14(%rax),%eax
    0.00 :   ffffffff89b4f537:       mov    %rax,0x88(%rbx)
    0.00 :   ffffffff89b4f53e:       mov    %rbx,%rdi
    0.00 :   ffffffff89b4f541:       call   0xffffffff89b4b050
    0.00 :   ffffffff89b4f546:       add    %r15d,0x1c(%r12)
    0.00 :   ffffffff89b4f54b:       mov    $0x1,%eax
    0.00 :   ffffffff89b4f550:       mov    0x158(%r12),%edx
    0.00 :   ffffffff89b4f558:       addl   $0x1,0x14(%r12)
    0.00 :   ffffffff89b4f55e:       test   %edx,%edx
    0.00 :   ffffffff89b4f560:       cmovg  %eax,%r15d
    0.00 :   ffffffff89b4f564:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f569:       mov    0x70(%rbx),%rbx
    0.00 :   ffffffff89b4f56d:       test   %rbx,%rbx
    0.00 :   ffffffff89b4f570:       jne    0xffffffff89b4f514
    0.00 :   ffffffff89b4f572:       mov    0x4(%r14),%ebx
    0.00 :   ffffffff89b4f576:       lea    0x1(%rbx),%eax
    0.00 :   ffffffff89b4f579:       mov    %eax,0x4(%r14)
    0.00 :   ffffffff89b4f57d:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f582:       cmp    $0x1,%ebx
    0.00 :   ffffffff89b4f585:       jbe    0xffffffff89b4f862
    0.00 :   ffffffff89b4f58b:       testb  $0x1,-0x2c(%rbp)
    0.00 :   ffffffff89b4f58f:       je     0xffffffff89b4f718
    0.00 :   ffffffff89b4f595:       mov    0xa80(%r14),%r15
    0.00 :   ffffffff89b4f59c:       mov    0x2c(%r15),%eax
    0.00 :   ffffffff89b4f5a0:       test   %eax,%eax
    0.00 :   ffffffff89b4f5a2:       jne    0xffffffff89b4f718
    0.00 :   ffffffff89b4f5a8:       movslq 0xaf8(%r14),%r12
    0.00 :   ffffffff89b4f5af:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f5b6:       mov    %rax,%rbx
    0.00 :   ffffffff89b4f5b9:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f5c0:       ja     0xffffffff89b4f942
    0.00 :   ffffffff89b4f5c6:       mov    -0x74b9e540(,%r12,8),%r13
    0.00 :   ffffffff89b4f5ce:       add    %r13,%rbx
    0.00 :   ffffffff89b4f5d1:       mov    0x80(%rbx),%ecx
    0.00 :   ffffffff89b4f5d7:       mov    %rax,%rbx
    0.00 :   ffffffff89b4f5da:       mov    %ecx,-0x2c(%rbp)
    0.00 :   ffffffff89b4f5dd:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f5e4:       ja     0xffffffff89b4f927
    0.00 :   ffffffff89b4f5ea:       add    %r13,%rbx
    0.00 :   ffffffff89b4f5ed:       mov    0xb0(%rbx),%ecx
    0.00 :   ffffffff89b4f5f3:       mov    %rax,%rbx
    0.00 :   ffffffff89b4f5f6:       mov    %ecx,-0x30(%rbp)
    0.00 :   ffffffff89b4f5f9:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f600:       ja     0xffffffff89b4f95d
    0.00 :   ffffffff89b4f606:       lea    0x0(%r13,%rbx,1),%rcx
    0.00 :   ffffffff89b4f60b:       mov    0x1b0(%rcx),%rbx
    0.00 :   ffffffff89b4f612:       xchg   %ax,%ax
    0.00 :   ffffffff89b4f614:       mov    0x1b8(%rcx),%ecx
    0.00 :   ffffffff89b4f61a:       cmp    %rcx,%rbx
    0.00 :   ffffffff89b4f61d:       cmovb  %rcx,%rbx
    0.00 :   ffffffff89b4f621:       mov    %rax,%rcx
    0.00 :   ffffffff89b4f624:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f62b:       ja     0xffffffff89b4f9be
    0.00 :   ffffffff89b4f631:       mov    0xa98(%r13,%rcx,1),%rcx
    0.00 :   ffffffff89b4f639:       cmp    %rcx,%rbx
    0.00 :   ffffffff89b4f63c:       cmova  %rcx,%rbx
    0.00 :   ffffffff89b4f640:       mov    %rax,%rcx
    0.00 :   ffffffff89b4f643:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f64a:       ja     0xffffffff89b4f99b
    0.00 :   ffffffff89b4f650:       mov    0xa90(%r13,%rcx,1),%rcx
    0.00 :   ffffffff89b4f658:       lea    (%rbx,%rbx,4),%rsi
    0.00 :   ffffffff89b4f65c:       shl    $0x8,%rsi
    0.00 :   ffffffff89b4f660:       shl    $0xa,%rcx
    0.00 :   ffffffff89b4f664:       cmp    %rcx,%rsi
    0.00 :   ffffffff89b4f667:       setb   %cl
    0.00 :   ffffffff89b4f66a:       jmp    0xffffffff89b4f90b
    0.00 :   ffffffff89b4f66f:       mov    %rax,%r9
    0.00 :   ffffffff89b4f672:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f679:       ja     0xffffffff89b4f9e1
    0.00 :   ffffffff89b4f67f:       mov    0xaa0(%r13,%r9,1),%rsi
    0.00 :   ffffffff89b4f687:       test   %rsi,%rsi
    0.00 :   ffffffff89b4f68a:       jne    0xffffffff89b4f6a1
    0.00 :   ffffffff89b4f68c:       cmp    $0x1fff,%r12
    0.00 :   ffffffff89b4f693:       ja     0xffffffff89b4f978
    0.00 :   ffffffff89b4f699:       mov    0xa98(%r13,%rax,1),%rsi
    0.00 :   ffffffff89b4f6a1:       mov    -0x30(%rbp),%edi
    0.00 :   ffffffff89b4f6a4:       cmp    $0x400,%rsi
    0.00 :   ffffffff89b4f6ab:       mov    -0x2c(%rbp),%r13d
    0.00 :   ffffffff89b4f6af:       sete   %al
    0.00 :   ffffffff89b4f6b2:       cmp    $0x400,%edi
    0.00 :   ffffffff89b4f6b8:       sete   %r8b
    0.00 :   ffffffff89b4f6bc:       and    %r8d,%eax
    0.00 :   ffffffff89b4f6bf:       xor    $0x1,%eax
    0.00 :   ffffffff89b4f6c2:       cmp    %rsi,%rdi
    0.00 :   ffffffff89b4f6c5:       setbe  %r8b
    0.00 :   ffffffff89b4f6c9:       and    %r8d,%eax
    0.00 :   ffffffff89b4f6cc:       or     %ecx,%eax
    0.00 :   ffffffff89b4f6ce:       cmp    %rdi,%r13
    0.00 :   ffffffff89b4f6d1:       cmova  %rdi,%r13
    0.00 :   ffffffff89b4f6d5:       cmp    %rbx,%r13
    0.00 :   ffffffff89b4f6d8:       jbe    0xffffffff89b4f6eb
    0.00 :   ffffffff89b4f6da:       cmp    $0x400,%rsi
    0.00 :   ffffffff89b4f6e1:       je     0xffffffff89b4f6eb
    0.00 :   ffffffff89b4f6e3:       cmp    %r13,%rsi
    0.00 :   ffffffff89b4f6e6:       setae  %cl
    0.00 :   ffffffff89b4f6e9:       and    %ecx,%eax
    0.00 :   ffffffff89b4f6eb:       movzbl %al,%eax
    0.00 :   ffffffff89b4f6ee:       test   %eax,%eax
    0.00 :   ffffffff89b4f6f0:       jne    0xffffffff89b4f718
    0.00 :   ffffffff89b4f6f2:       movl   $0x2,0x2c(%r15)
    0.00 :   ffffffff89b4f6fa:       mov    0xa80(%r14),%rsi
    0.00 :   ffffffff89b4f701:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f706:       jmp    0xffffffff89b4f718
    0.00 :   ffffffff89b4f708:       mov    0x188(%r12),%ecx
    0.00 :   ffffffff89b4f710:       test   %ecx,%ecx
    0.00 :   ffffffff89b4f712:       je     0xffffffff89b4f4ff
    0.00 :   ffffffff89b4f718:       lea    0x9c0(%r14),%rax
    0.00 :   ffffffff89b4f71f:       cmp    %rax,0x9d0(%r14)
    0.00 :   ffffffff89b4f726:       jne    0xffffffff89b4f773
    0.00 :   ffffffff89b4f728:       mov    %r14,%rdi
    0.00 :   ffffffff89b4f72b:       call   0xffffffff89b49270
    0.00 :   ffffffff89b4f730:       add    $0x18,%rsp
    0.00 :   ffffffff89b4f734:       pop    %rbx
    0.00 :   ffffffff89b4f735:       pop    %r12
    0.00 :   ffffffff89b4f737:       pop    %r13
    0.00 :   ffffffff89b4f739:       pop    %r14
    0.00 :   ffffffff89b4f73b:       pop    %r15
    0.00 :   ffffffff89b4f73d:       pop    %rbp
    0.00 :   ffffffff89b4f73e:       xor    %eax,%eax
    0.00 :   ffffffff89b4f740:       xor    %edx,%edx
    0.00 :   ffffffff89b4f742:       xor    %ecx,%ecx
    0.00 :   ffffffff89b4f744:       xor    %esi,%esi
    0.00 :   ffffffff89b4f746:       xor    %edi,%edi
    0.00 :   ffffffff89b4f748:       xor    %r8d,%r8d
    0.00 :   ffffffff89b4f74b:       xor    %r9d,%r9d
    0.00 :   ffffffff89b4f74e:       ret
    0.00 :   ffffffff89b4f74f:       int3
    0.00 :   ffffffff89b4f750:       int3
    0.00 :   ffffffff89b4f751:       int3
    0.00 :   ffffffff89b4f752:       int3
    0.00 :   ffffffff89b4f753:       mov    0x188(%r12),%eax
    0.00 :   ffffffff89b4f75b:       test   %eax,%eax
    0.00 :   ffffffff89b4f75d:       je     0xffffffff89b4f569
    0.00 :   ffffffff89b4f763:       lea    0x9c0(%r14),%rax
    0.00 :   ffffffff89b4f76a:       cmp    %rax,0x9d0(%r14)
    0.00 :   ffffffff89b4f771:       je     0xffffffff89b4f728
    0.00 :   ffffffff89b4f773:       movzbl 0x2463b61(%rip),%ebx        # 0xffffffff8bfb32db
    0.00 :   ffffffff89b4f77a:       cmp    $0x1,%bl
    0.00 :   ffffffff89b4f77d:       ja     0xffffffff8aa335bc
    0.00 :   ffffffff89b4f783:       and    $0x1,%ebx
    0.00 :   ffffffff89b4f786:       jne    0xffffffff89b4f728
    0.00 :   ffffffff89b4f788:       mov    $0xffffffff8b330bf0,%rdi
    0.00 :   ffffffff89b4f78f:       movb   $0x1,0x2463b45(%rip)        # 0xffffffff8bfb32db
    0.00 :   ffffffff89b4f796:       call   0xffffffff89ae9890
    0.00 :   ffffffff89b4f79b:       ud2
    0.00 :   ffffffff89b4f79d:       jmp    0xffffffff89b4f728
    0.00 :   ffffffff89b4f79f:       mov    %gs:0x764e20a6(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89b4f7a6:       mov    %eax,%eax
    0.00 :   ffffffff89b4f7a8:       bt     %rax,0x24b19f0(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89b4f7b0:       jae    0xffffffff89b4f4af
    0.00 :   ffffffff89b4f7b6:       incl   %gs:0x764e208b(%rip)        # 0x31848
    0.00 :   ffffffff89b4f7bd:       mov    0x246655c(%rip),%rax        # 0xffffffff8bfb5d20
    0.00 :   ffffffff89b4f7c4:       test   %rax,%rax
    0.00 :   ffffffff89b4f7c7:       je     0xffffffff89b4f7d9
    0.00 :   ffffffff89b4f7c9:       lea    0x100(%rdi),%rsi
    0.00 :   ffffffff89b4f7d0:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89b4f7d4:       call   0xffffffff89b2bf80
    0.00 :   ffffffff89b4f7d9:       decl   %gs:0x764e2068(%rip)        # 0x31848
    0.00 :   ffffffff89b4f7e0:       jne    0xffffffff89b4f4af
    0.00 :   ffffffff89b4f7e6:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f7eb:       jmp    0xffffffff89b4f4af
    0.00 :   ffffffff89b4f7f0:       movslq 0xaf8(%r14),%r13
    0.00 :   ffffffff89b4f7f7:       mov    $0x204d0,%r12
    0.00 :   ffffffff89b4f7fe:       cmp    $0x1fff,%r13
    0.00 :   ffffffff89b4f805:       ja     0xffffffff89b4f913
    0.00 :   ffffffff89b4f80b:       add    -0x74b9e540(,%r13,8),%r12
    0.00 :   ffffffff89b4f813:       mov    (%r12),%r12
    0.00 :   ffffffff89b4f817:       test   %r12,%r12
    0.00 :   ffffffff89b4f81a:       je     0xffffffff89b4f4be
    0.00 :   ffffffff89b4f820:       cmpl   $0x1,0xa08(%r14)
    0.00 :   ffffffff89b4f828:       mov    (%r12),%r13
    0.00 :   ffffffff89b4f82c:       jbe    0xffffffff89b4f8da
    0.00 :   ffffffff89b4f832:       mov    0xa10(%r14),%rsi
    0.00 :   ffffffff89b4f839:       mov    $0x1,%edx
    0.00 :   ffffffff89b4f83e:       mov    %r12,%rdi
    0.00 :   ffffffff89b4f841:       call   *%r13
    0.00 :   ffffffff89b4f844:       nopl   (%rax)
    0.00 :   ffffffff89b4f847:       jmp    0xffffffff89b4f4be
    0.00 :   ffffffff89b4f84c:       mov    $0x1,%esi
    0.00 :   ffffffff89b4f851:       mov    %r14,%rdi
    0.00 :   ffffffff89b4f854:       call   0xffffffff89b41290
    0.00 :   ffffffff89b4f859:       cmp    $0x1,%ebx
    0.00 :   ffffffff89b4f85c:       ja     0xffffffff89b4f58b
    0.00 :   ffffffff89b4f862:       cmpl   $0x1,0x4(%r14)
    0.00 :   ffffffff89b4f867:       jbe    0xffffffff89b4f58b
    0.00 :   ffffffff89b4f86d:       mov    0xa80(%r14),%rax
    0.00 :   ffffffff89b4f874:       mov    0x28(%rax),%edx
    0.00 :   ffffffff89b4f877:       test   %edx,%edx
    0.00 :   ffffffff89b4f879:       jne    0xffffffff89b4f58b
    0.00 :   ffffffff89b4f87f:       movl   $0x1,0x28(%rax)
    0.00 :   ffffffff89b4f886:       jmp    0xffffffff89b4f58b
    0.00 :   ffffffff89b4f88b:       mov    %gs:0x764e1fba(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89b4f892:       mov    %eax,%eax
    0.00 :   ffffffff89b4f894:       bt     %rax,0x24b1904(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89b4f89c:       jae    0xffffffff89b4f718
    0.00 :   ffffffff89b4f8a2:       incl   %gs:0x764e1f9f(%rip)        # 0x31848
    0.00 :   ffffffff89b4f8a9:       mov    0x24664d0(%rip),%rax        # 0xffffffff8bfb5d80
    0.00 :   ffffffff89b4f8b0:       test   %rax,%rax
    0.00 :   ffffffff89b4f8b3:       je     0xffffffff89b4f8c3
    0.00 :   ffffffff89b4f8b5:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89b4f8b9:       mov    $0x1,%edx
    0.00 :   ffffffff89b4f8be:       call   0xffffffff89b2bf20
    0.00 :   ffffffff89b4f8c3:       decl   %gs:0x764e1f7e(%rip)        # 0x31848
    0.00 :   ffffffff89b4f8ca:       jne    0xffffffff89b4f718
    0.00 :   ffffffff89b4f8d0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4f8d5:       jmp    0xffffffff89b4f718
    0.00 :   ffffffff89b4f8da:       movzbl 0x24639fd(%rip),%eax        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b4f8e1:       cmp    $0x1,%al
    0.00 :   ffffffff89b4f8e3:       ja     0xffffffff8aa335d0
    0.00 :   ffffffff89b4f8e9:       test   $0x1,%al
    0.00 :   ffffffff89b4f8eb:       jne    0xffffffff89b4f832
    0.00 :   ffffffff89b4f8f1:       mov    $0xffffffff8b3305c0,%rdi
    0.00 :   ffffffff89b4f8f8:       movb   $0x1,0x24639df(%rip)        # 0xffffffff8bfb32de
    0.00 :   ffffffff89b4f8ff:       call   0xffffffff89ae9890
    0.00 :   ffffffff89b4f904:       ud2
    0.00 :   ffffffff89b4f906:       jmp    0xffffffff89b4f832
    0.00 :   ffffffff89b4f90b:       movzbl %cl,%eax
    0.00 :   ffffffff89b4f90e:       jmp    0xffffffff89b4f6ee
    0.00 :   ffffffff89b4f913:       mov    %r13,%rsi
    0.00 :   ffffffff89b4f916:       mov    $0xffffffff8bc93220,%rdi
    0.00 :   ffffffff89b4f91d:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f922:       jmp    0xffffffff89b4f80b
    0.00 :   ffffffff89b4f927:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f92a:       mov    $0xffffffff8bc931e0,%rdi
    0.00 :   ffffffff89b4f931:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f936:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f93d:       jmp    0xffffffff89b4f5ea
    0.00 :   ffffffff89b4f942:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f945:       mov    $0xffffffff8bc93200,%rdi
    0.00 :   ffffffff89b4f94c:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f951:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f958:       jmp    0xffffffff89b4f5c6
    0.00 :   ffffffff89b4f95d:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f960:       mov    $0xffffffff8bc931c0,%rdi
    0.00 :   ffffffff89b4f967:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f96c:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f973:       jmp    0xffffffff89b4f606
    0.00 :   ffffffff89b4f978:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f97b:       mov    $0xffffffff8bc93140,%rdi
    0.00 :   ffffffff89b4f982:       mov    %rax,-0x40(%rbp)
    0.00 :   ffffffff89b4f986:       mov    %cl,-0x38(%rbp)
    0.00 :   ffffffff89b4f989:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f98e:       mov    -0x40(%rbp),%rax
    0.00 :   ffffffff89b4f992:       movzbl -0x38(%rbp),%ecx
    0.00 :   ffffffff89b4f996:       jmp    0xffffffff89b4f699
    0.00 :   ffffffff89b4f99b:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f99e:       mov    $0xffffffff8bc93180,%rdi
    0.00 :   ffffffff89b4f9a5:       mov    %rcx,-0x38(%rbp)
    0.00 :   ffffffff89b4f9a9:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f9ae:       mov    -0x38(%rbp),%rcx
    0.00 :   ffffffff89b4f9b2:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f9b9:       jmp    0xffffffff89b4f650
    0.00 :   ffffffff89b4f9be:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f9c1:       mov    $0xffffffff8bc931a0,%rdi
    0.00 :   ffffffff89b4f9c8:       mov    %rcx,-0x38(%rbp)
    0.00 :   ffffffff89b4f9cc:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f9d1:       mov    -0x38(%rbp),%rcx
    0.00 :   ffffffff89b4f9d5:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4f9dc:       jmp    0xffffffff89b4f631
    0.00 :   ffffffff89b4f9e1:       mov    %r12,%rsi
    0.00 :   ffffffff89b4f9e4:       mov    $0xffffffff8bc93160,%rdi
    0.00 :   ffffffff89b4f9eb:       mov    %r9,-0x40(%rbp)
    0.00 :   ffffffff89b4f9ef:       mov    %cl,-0x38(%rbp)
    0.00 :   ffffffff89b4f9f2:       call   0xffffffff8a2787e0
    0.00 :   ffffffff89b4f9f7:       mov    -0x40(%rbp),%r9
    0.00 :   ffffffff89b4f9fb:       movzbl -0x38(%rbp),%ecx
    0.00 :   ffffffff89b4f9ff:       mov    $0x32000,%rax
    0.00 :   ffffffff89b4fa06:       jmp    0xffffffff89b4f67f
    0.00 :   ffffffff89b4fa0b:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4fa10:       nop
    0.00 :   ffffffff89b4fa11:       nop
    0.00 :   ffffffff89b4fa12:       nop
    0.00 :   ffffffff89b4fa13:       nop
    0.00 :   ffffffff89b4fa14:       nop
    0.00 :   ffffffff89b4fa15:       nop
    0.00 :   ffffffff89b4fa16:       nop
    0.00 :   ffffffff89b4fa17:       nop
    0.00 :   ffffffff89b4fa18:       nop
    0.00 :   ffffffff89b4fa19:       nop
    0.00 :   ffffffff89b4fa1a:       nop
    0.00 :   ffffffff89b4fa1b:       nop
    0.00 :   ffffffff89b4fa1c:       nop
    0.00 :   ffffffff89b4fa1d:       nop
    0.00 :   ffffffff89b4fa1e:       nop
    0.00 :   ffffffff89b4fa1f:       nop
    0.00 :   ffffffff89b4fa20:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89b4fa25:       push   %rbp
    0.00 :   ffffffff89b4fa26:       mov    %edi,%eax
    0.00 :   ffffffff89b4fa28:       neg    %eax
    0.00 :   ffffffff89b4fa2a:       mov    %rsp,%rbp
    0.00 :   ffffffff89b4fa2d:       pop    %rbp
    0.00 :   ffffffff89b4fa2e:       xor    %edi,%edi
    0.00 :   ffffffff89b4fa30:       ret
    0.00 :   ffffffff89b4fa31:       int3
    0.00 :   ffffffff89b4fa32:       int3
    0.00 :   ffffffff89b4fa33:       int3
    0.00 :   ffffffff89b4fa34:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89e2aef0 <load0>:
    0.00 :   ffffffff89e2aef0:       push   %rbp
    0.00 :   ffffffff89e2aef1:       mov    %rsp,%rbp
    0.00 :   ffffffff89e2aef4:       push   %r15
    0.00 :   ffffffff89e2aef6:       push   %r14
    0.00 :   ffffffff89e2aef8:       push   %r13
    0.00 :   ffffffff89e2aefa:       push   %r12
    0.00 :   ffffffff89e2aefc:       push   %rbx
    0.00 :   ffffffff89e2aefd:       sub    $0x28,%rsp
    0.00 :   ffffffff89e2af01:       mov    %edx,-0x3c(%rbp)
    0.00 :   ffffffff89e2af04:       mov    %rcx,-0x38(%rbp)
    0.00 :   ffffffff89e2af08:       mov    %r8,-0x30(%rbp)
    0.00 :   ffffffff89e2af0c:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89e2af11:       mov    %rsi,%r14
    0.00 :   ffffffff89e2af14:       test   %rsi,%rsi
    0.00 :   ffffffff89e2af17:       je     0xffffffff89e2b0ac
    0.00 :   ffffffff89e2af1d:       mov    %rdi,%r13
    0.00 :   ffffffff89e2af20:       xor    %r12d,%r12d
    0.00 :   ffffffff89e2af23:       test   %rcx,%rcx
    0.00 :   ffffffff89e2af26:       je     0xffffffff89e2b093
    0.00 :   ffffffff89e2af2c:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89e2af30:       mov    (%rax,%r12,8),%rax
    0.00 :   ffffffff89e2af34:       test   %rax,%rax
    0.00 :   ffffffff89e2af37:       je     0xffffffff89e2b104
    0.00 :   ffffffff89e2af3d:       mov    $0x80000000,%edx
    0.00 :   ffffffff89e2af42:       add    %rax,%rdx
    0.00 :   ffffffff89e2af45:       jb     0xffffffff89e2b15b
    0.00 :   ffffffff89e2af4b:       mov    $0xffffffff80000000,%rcx
    0.00 :   ffffffff89e2af52:       sub    0x1630b6f(%rip),%rcx        # 0xffffffff8b45bac8
    0.00 :   ffffffff89e2af59:       add    %rcx,%rdx
    0.00 :   ffffffff89e2af5c:       shr    $0xc,%rdx
    0.00 :   ffffffff89e2af60:       shl    $0x6,%rdx
    0.00 :   ffffffff89e2af64:       add    0x1630b4d(%rip),%rdx        # 0xffffffff8b45bab8
  100.00 :   ffffffff89e2af6b:       mov    0x8(%rdx),%rcx
    0.00 :   ffffffff89e2af6f:       mov    %rdx,%r15
    0.00 :   ffffffff89e2af72:       test   $0x1,%cl
    0.00 :   ffffffff89e2af75:       jne    0xffffffff89e2b119
    0.00 :   ffffffff89e2af7b:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89e2af80:       mov    (%r15),%rdx
    0.00 :   ffffffff89e2af83:       and    $0x2,%dh
    0.00 :   ffffffff89e2af86:       mov    $0x0,%edx
    0.00 :   ffffffff89e2af8b:       cmove  %rdx,%r15
    0.00 :   ffffffff89e2af8f:       mov    0x38(%r15),%rdx
    0.00 :   ffffffff89e2af93:       test   $0xfffffffffffffffc,%rdx
    0.00 :   ffffffff89e2af9a:       jne    0xffffffff89e2afbc
    0.00 :   ffffffff89e2af9c:       mov    -0x3c(%rbp),%edx
    0.00 :   ffffffff89e2af9f:       xor    %ecx,%ecx
    0.00 :   ffffffff89e2afa1:       mov    %r13,%rsi
    0.00 :   ffffffff89e2afa4:       mov    %r15,%rdi
    0.00 :   ffffffff89e2afa7:       call   0xffffffff89e5c750
    0.00 :   ffffffff89e2afac:       test   %eax,%eax
    0.00 :   ffffffff89e2afae:       jne    0xffffffff89e2b104
    0.00 :   ffffffff89e2afb4:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff89e2afb8:       mov    (%rax,%r12,8),%rax
    0.00 :   ffffffff89e2afbc:       mov    0x21d88ed(%rip),%rdx        # 0xffffffff8c0038b0
    0.00 :   ffffffff89e2afc3:       mov    %rax,%rcx
    0.00 :   ffffffff89e2afc6:       sub    %rdx,%rcx
    0.00 :   ffffffff89e2afc9:       cmp    $0x1fffff,%rcx
    0.00 :   ffffffff89e2afd0:       ja     0xffffffff89e2afdb
    0.00 :   ffffffff89e2afd2:       test   %rdx,%rdx
    0.00 :   ffffffff89e2afd5:       jne    0xffffffff89e2b154
    0.00 :   ffffffff89e2afdb:       mov    %r15,%rdx
    0.00 :   ffffffff89e2afde:       sub    0x1630ad3(%rip),%rdx        # 0xffffffff8b45bab8
    0.00 :   ffffffff89e2afe5:       movzbl 0x24(%r13),%ecx
    0.00 :   ffffffff89e2afea:       sar    $0x6,%rdx
    0.00 :   ffffffff89e2afee:       movzbl 0x25(%r13),%r10d
    0.00 :   ffffffff89e2aff3:       shl    $0xc,%rdx
    0.00 :   ffffffff89e2aff7:       add    0x1630aca(%rip),%rdx        # 0xffffffff8b45bac8
    0.00 :   ffffffff89e2affe:       sub    %rdx,%rax
    0.00 :   ffffffff89e2b001:       mov    0x20(%r13),%edx
    0.00 :   ffffffff89e2b005:       mov    %eax,%r9d
    0.00 :   ffffffff89e2b008:       imul   %rdx,%r9
    0.00 :   ffffffff89e2b00c:       shr    $0x20,%r9
    0.00 :   ffffffff89e2b010:       sub    %r9d,%eax
    0.00 :   ffffffff89e2b013:       cmp    $0x1f,%cl
    0.00 :   ffffffff89e2b016:       ja     0xffffffff89e2b167
    0.00 :   ffffffff89e2b01c:       shr    %cl,%eax
    0.00 :   ffffffff89e2b01e:       lea    (%rax,%r9,1),%ebx
    0.00 :   ffffffff89e2b022:       cmp    $0x1f,%r10b
    0.00 :   ffffffff89e2b026:       ja     0xffffffff8aa43856
    0.00 :   ffffffff89e2b02c:       mov    %r10d,%ecx
    0.00 :   ffffffff89e2b02f:       shr    %cl,%ebx
    0.00 :   ffffffff89e2b031:       shl    $0x3,%rbx
    0.00 :   ffffffff89e2b035:       call   0xffffffff89baecb0
    0.00 :   ffffffff89e2b03a:       mov    (%r14),%rax
    0.00 :   ffffffff89e2b03d:       test   $0x3,%al
    0.00 :   ffffffff89e2b03f:       jne    0xffffffff89e2b122
    0.00 :   ffffffff89e2b045:       incq   %gs:(%rax)
    0.00 :   ffffffff89e2b049:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89e2b04e:       mov    0x38(%r15),%rax
    0.00 :   ffffffff89e2b052:       xor    %edx,%edx
    0.00 :   ffffffff89e2b054:       mov    %r14,%rdi
    0.00 :   ffffffff89e2b057:       and    $0xfffffffffffffffc,%rax
    0.00 :   ffffffff89e2b05b:       mov    %r14,(%rax,%rbx,1)
    0.00 :   ffffffff89e2b05f:       mov    0x18(%r13),%eax
    0.00 :   ffffffff89e2b063:       testb  $0x2,0xa(%r13)
    0.00 :   ffffffff89e2b068:       lea    0x8(%rax),%ecx
    0.00 :   ffffffff89e2b06b:       mov    (%r15),%rax
    0.00 :   ffffffff89e2b06e:       sete   %dl
    0.00 :   ffffffff89e2b071:       add    $0x5,%edx
    0.00 :   ffffffff89e2b074:       shr    $0x36,%rax
    0.00 :   ffffffff89e2b078:       mov    -0x74001aa0(,%rax,8),%rsi
    0.00 :   ffffffff89e2b080:       call   0xffffffff89e5d300
    0.00 :   ffffffff89e2b085:       add    $0x1,%r12
    0.00 :   ffffffff89e2b089:       cmp    %r12,-0x38(%rbp)
    0.00 :   ffffffff89e2b08d:       jne    0xffffffff89e2af2c
    0.00 :   ffffffff89e2b093:       call   0xffffffff89baecb0
    0.00 :   ffffffff89e2b098:       mov    (%r14),%rax
    0.00 :   ffffffff89e2b09b:       test   $0x3,%al
    0.00 :   ffffffff89e2b09d:       jne    0xffffffff89e2b130
    0.00 :   ffffffff89e2b0a3:       decq   %gs:(%rax)
    0.00 :   ffffffff89e2b0a7:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89e2b0ac:       add    $0x28,%rsp
    0.00 :   ffffffff89e2b0b0:       pop    %rbx
    0.00 :   ffffffff89e2b0b1:       pop    %r12
    0.00 :   ffffffff89e2b0b3:       pop    %r13
    0.00 :   ffffffff89e2b0b5:       pop    %r14
    0.00 :   ffffffff89e2b0b7:       pop    %r15
    0.00 :   ffffffff89e2b0b9:       pop    %rbp
    0.00 :   ffffffff89e2b0ba:       xor    %eax,%eax
    0.00 :   ffffffff89e2b0bc:       xor    %edx,%edx
    0.00 :   ffffffff89e2b0be:       xor    %ecx,%ecx
    0.00 :   ffffffff89e2b0c0:       xor    %esi,%esi
    0.00 :   ffffffff89e2b0c2:       xor    %edi,%edi
    0.00 :   ffffffff89e2b0c4:       xor    %r8d,%r8d
    0.00 :   ffffffff89e2b0c7:       xor    %r9d,%r9d
    0.00 :   ffffffff89e2b0ca:       xor    %r10d,%r10d
    0.00 :   ffffffff89e2b0cd:       ret
    0.00 :   ffffffff89e2b0ce:       int3
    0.00 :   ffffffff89e2b0cf:       int3
    0.00 :   ffffffff89e2b0d0:       int3
    0.00 :   ffffffff89e2b0d1:       int3
    0.00 :   ffffffff89e2b0d2:       test   $0xfff,%edx
    0.00 :   ffffffff89e2b0d8:       jne    0xffffffff89e2af80
    0.00 :   ffffffff89e2b0de:       mov    (%rdx),%rcx
    0.00 :   ffffffff89e2b0e1:       test   $0x10000,%ecx
    0.00 :   ffffffff89e2b0e7:       je     0xffffffff89e2af80
    0.00 :   ffffffff89e2b0ed:       mov    0x48(%rdx),%rcx
    0.00 :   ffffffff89e2b0f1:       lea    -0x1(%rcx),%r8
    0.00 :   ffffffff89e2b0f5:       and    $0x1,%ecx
    0.00 :   ffffffff89e2b0f8:       cmovne %r8,%rdx
    0.00 :   ffffffff89e2b0fc:       mov    %rdx,%r15
    0.00 :   ffffffff89e2b0ff:       jmp    0xffffffff89e2af80
    0.00 :   ffffffff89e2b104:       mov    0x18(%r13),%esi
    0.00 :   ffffffff89e2b108:       mov    %r14,%rdi
    0.00 :   ffffffff89e2b10b:       add    $0x8,%rsi
    0.00 :   ffffffff89e2b10f:       call   0xffffffff89e5d780
    0.00 :   ffffffff89e2b114:       jmp    0xffffffff89e2b085
    0.00 :   ffffffff89e2b119:       lea    -0x1(%rcx),%r15
    0.00 :   ffffffff89e2b11d:       jmp    0xffffffff89e2af80
    0.00 :   ffffffff89e2b122:       mov    0x8(%r14),%rax
    0.00 :   ffffffff89e2b126:       lock addq $0x1,(%rax)
    0.00 :   ffffffff89e2b12b:       jmp    0xffffffff89e2b049
    0.00 :   ffffffff89e2b130:       mov    0x8(%r14),%rax
    0.00 :   ffffffff89e2b134:       lock subq $0x1,(%rax)
    0.00 :   ffffffff89e2b139:       jne    0xffffffff89e2b0a7
    0.00 :   ffffffff89e2b13f:       mov    0x8(%r14),%rax
    0.00 :   ffffffff89e2b143:       mov    %r14,%rdi
    0.00 :   ffffffff89e2b146:       mov    0x8(%rax),%rax
    0.00 :   ffffffff89e2b14a:       call   *%rax
    0.00 :   ffffffff89e2b14c:       nopl   (%rax)
    0.00 :   ffffffff89e2b14f:       jmp    0xffffffff89e2b0a7
    0.00 :   ffffffff89e2b154:       xor    %ebx,%ebx
    0.00 :   ffffffff89e2b156:       jmp    0xffffffff89e2b035
    0.00 :   ffffffff89e2b15b:       mov    0x1deeeae(%rip),%rcx        # 0xffffffff8bc1a010
    0.00 :   ffffffff89e2b162:       jmp    0xffffffff89e2af59
    0.00 :   ffffffff89e2b167:       jmp    0xffffffff8aa43879
 Percent |	Source code & Disassembly of libc.so.6 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000129d50 <_mcount>:
         : 6      mcount():
         : 7      ./gmon/../sysdeps/x86_64/_mcount.S:26
  100.00 :   129d50: endbr64
         : 9      ./gmon/../sysdeps/x86_64/_mcount.S:28
    0.00 :   129d54: sub    $0x38,%rsp
         : 11     ./gmon/../sysdeps/x86_64/_mcount.S:30
    0.00 :   129d58: mov    %rax,(%rsp)
         : 13     ./gmon/../sysdeps/x86_64/_mcount.S:32
    0.00 :   129d5c: mov    %rcx,0x8(%rsp)
         : 15     ./gmon/../sysdeps/x86_64/_mcount.S:34
    0.00 :   129d61: mov    %rdx,0x10(%rsp)
         : 17     ./gmon/../sysdeps/x86_64/_mcount.S:36
    0.00 :   129d66: mov    %rsi,0x18(%rsp)
         : 19     ./gmon/../sysdeps/x86_64/_mcount.S:38
    0.00 :   129d6b: mov    %rdi,0x20(%rsp)
         : 21     ./gmon/../sysdeps/x86_64/_mcount.S:40
    0.00 :   129d70: mov    %r8,0x28(%rsp)
         : 23     ./gmon/../sysdeps/x86_64/_mcount.S:42
    0.00 :   129d75: mov    %r9,0x30(%rsp)
         : 25     ./gmon/../sysdeps/x86_64/_mcount.S:47
    0.00 :   129d7a: mov    0x38(%rsp),%rsi
         : 27     ./gmon/../sysdeps/x86_64/_mcount.S:49
    0.00 :   129d7f: mov    0x8(%rbp),%rdi
         : 29     ./gmon/../sysdeps/x86_64/_mcount.S:50
    0.00 :   129d83: call   128ff0 <__mcount_internal>
         : 31     ./gmon/../sysdeps/x86_64/_mcount.S:53
    0.00 :   129d88: mov    0x30(%rsp),%r9
         : 33     ./gmon/../sysdeps/x86_64/_mcount.S:55
    0.00 :   129d8d: mov    0x28(%rsp),%r8
         : 35     ./gmon/../sysdeps/x86_64/_mcount.S:57
    0.00 :   129d92: mov    0x20(%rsp),%rdi
         : 37     ./gmon/../sysdeps/x86_64/_mcount.S:59
    0.00 :   129d97: mov    0x18(%rsp),%rsi
         : 39     ./gmon/../sysdeps/x86_64/_mcount.S:61
    0.00 :   129d9c: mov    0x10(%rsp),%rdx
         : 41     ./gmon/../sysdeps/x86_64/_mcount.S:63
    0.00 :   129da1: mov    0x8(%rsp),%rcx
         : 43     ./gmon/../sysdeps/x86_64/_mcount.S:65
    0.00 :   129da6: mov    (%rsp),%rax
         : 45     ./gmon/../sysdeps/x86_64/_mcount.S:67
    0.00 :   129daa: add    $0x38,%rsp
         : 47     ./gmon/../sysdeps/x86_64/_mcount.S:69
    0.00 :   129dae: ret
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89a4b4e0 <load0>:
    0.00 :   ffffffff89a4b4e0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89a4b4e5:       push   %rbp
    0.00 :   ffffffff89a4b4e6:       mov    %rsp,%rbp
    0.00 :   ffffffff89a4b4e9:       push   %r14
    0.00 :   ffffffff89a4b4eb:       push   %r13
    0.00 :   ffffffff89a4b4ed:       push   %r12
    0.00 :   ffffffff89a4b4ef:       push   %rbx
    0.00 :   ffffffff89a4b4f0:       sub    $0x10,%rsp
    0.00 :   ffffffff89a4b4f4:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89a4b4fd:       mov    %rax,-0x28(%rbp)
    0.00 :   ffffffff89a4b501:       xor    %eax,%eax
    0.00 :   ffffffff89a4b503:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89a4b50c:       mov    0x20(%rax),%r12
    0.00 :   ffffffff89a4b510:       mov    0x3ff0(%r12),%rbx
    0.00 :   ffffffff89a4b518:       add    $0x3f58,%r12
    0.00 :   ffffffff89a4b51f:       lea    -0x8(%rbx),%r14
    0.00 :   ffffffff89a4b523:       movabs $0x7ffffffff000,%rax
    0.00 :   ffffffff89a4b52d:       cmp    $0x1b7,%rax
    0.00 :   ffffffff89a4b533:       jbe    0xffffffff89a4b57f
    0.00 :   ffffffff89a4b535:       sub    $0x1b8,%rax
    0.00 :   ffffffff89a4b53b:       cmp    %rax,%r14
    0.00 :   ffffffff89a4b53e:       ja     0xffffffff89a4b57f
    0.00 :   ffffffff89a4b540:       lea    0x128(%rbx),%rax
    0.00 :   ffffffff89a4b547:       call   0xffffffff8aa28ec0
    0.00 :   ffffffff89a4b54c:       mov    %rdx,-0x30(%rbp)
    0.00 :   ffffffff89a4b550:       test   %eax,%eax
    0.00 :   ffffffff89a4b552:       jne    0xffffffff89a4b57f
    0.00 :   ffffffff89a4b554:       mov    %rbx,%rax
    0.00 :   ffffffff89a4b557:       call   0xffffffff8aa28ec0
    0.00 :   ffffffff89a4b55c:       mov    %rdx,%r13
    0.00 :   ffffffff89a4b55f:       test   %eax,%eax
    0.00 :   ffffffff89a4b561:       jne    0xffffffff89a4b57f
    0.00 :   ffffffff89a4b563:       lea    -0x30(%rbp),%rdi
    0.00 :   ffffffff89a4b567:       call   0xffffffff89b01840
    0.00 :   ffffffff89a4b56c:       lea    0x28(%rbx),%rsi
    0.00 :   ffffffff89a4b570:       mov    %r13,%rdx
    0.00 :   ffffffff89a4b573:       mov    %r12,%rdi
    0.00 :   ffffffff89a4b576:       call   0xffffffff89a4b2e0
    0.00 :   ffffffff89a4b57b:       test   %al,%al
    0.00 :   ffffffff89a4b57d:       jne    0xffffffff89a4b5b9
    0.00 :   ffffffff89a4b57f:       mov    $0xffffffff8b310d0b,%rdx
    0.00 :   ffffffff89a4b586:       mov    %r14,%rsi
    0.00 :   ffffffff89a4b589:       mov    %r12,%rdi
    0.00 :   ffffffff89a4b58c:       call   0xffffffff89a4b130
    0.00 :   ffffffff89a4b591:       xor    %eax,%eax
    0.00 :   ffffffff89a4b593:       mov    -0x28(%rbp),%rdx
    0.00 :   ffffffff89a4b597:       sub    %gs:0x28,%rdx
    0.00 :   ffffffff89a4b5a0:       jne    0xffffffff89a4b5cd
    0.00 :   ffffffff89a4b5a2:       add    $0x10,%rsp
    0.00 :   ffffffff89a4b5a6:       pop    %rbx
    0.00 :   ffffffff89a4b5a7:       pop    %r12
    0.00 :   ffffffff89a4b5a9:       pop    %r13
    0.00 :   ffffffff89a4b5ab:       pop    %r14
    0.00 :   ffffffff89a4b5ad:       pop    %rbp
    0.00 :   ffffffff89a4b5ae:       xor    %edx,%edx
    0.00 :   ffffffff89a4b5b0:       xor    %esi,%esi
    0.00 :   ffffffff89a4b5b2:       xor    %edi,%edi
    0.00 :   ffffffff89a4b5b4:       ret
    0.00 :   ffffffff89a4b5b5:       int3
    0.00 :   ffffffff89a4b5b6:       int3
    0.00 :   ffffffff89a4b5b7:       int3
    0.00 :   ffffffff89a4b5b8:       int3
    0.00 :   ffffffff89a4b5b9:       lea    0x10(%rbx),%rdi
  100.00 :   ffffffff89a4b5bd:       call   0xffffffff89b06b70
    0.00 :   ffffffff89a4b5c2:       test   %eax,%eax
    0.00 :   ffffffff89a4b5c4:       jne    0xffffffff89a4b57f
    0.00 :   ffffffff89a4b5c6:       mov    0x50(%r12),%rax
    0.00 :   ffffffff89a4b5cb:       jmp    0xffffffff89a4b593
    0.00 :   ffffffff89a4b5cd:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89afdd00 <load0>:
  100.00 :   ffffffff89afdd00:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89afdd05:       push   %rbp
    0.00 :   ffffffff89afdd06:       mov    %rdi,%rax
    0.00 :   ffffffff89afdd09:       mov    %rsp,%rbp
    0.00 :   ffffffff89afdd0c:       push   %r15
    0.00 :   ffffffff89afdd0e:       push   %r14
    0.00 :   ffffffff89afdd10:       push   %r13
    0.00 :   ffffffff89afdd12:       push   %r12
    0.00 :   ffffffff89afdd14:       push   %rbx
    0.00 :   ffffffff89afdd15:       mov    %gs:0x31840,%rbx
    0.00 :   ffffffff89afdd1e:       sub    $0x8,%rsp
    0.00 :   ffffffff89afdd22:       test   %rsi,%rsi
    0.00 :   ffffffff89afdd25:       je     0xffffffff89afddae
    0.00 :   ffffffff89afdd2b:       movq   $0x0,(%rsi)
    0.00 :   ffffffff89afdd32:       mov    $0x2,%edi
    0.00 :   ffffffff89afdd37:       movq   $0x0,0x10(%rsi)
    0.00 :   ffffffff89afdd3f:       movq   $0x0,0x8(%rsi)
    0.00 :   ffffffff89afdd47:       mov    0xc30(%rbx),%rcx
    0.00 :   ffffffff89afdd4e:       mov    %rcx,(%rsi)
    0.00 :   ffffffff89afdd51:       mov    0xc38(%rbx),%rcx
    0.00 :   ffffffff89afdd58:       mov    %rcx,0x10(%rsi)
    0.00 :   ffffffff89afdd5c:       cmpq   $0x0,0xc38(%rbx)
    0.00 :   ffffffff89afdd64:       je     0xffffffff89afdd94
    0.00 :   ffffffff89afdd66:       mov    0xc40(%rbx),%r8d
    0.00 :   ffffffff89afdd6d:       xor    %edi,%edi
    0.00 :   ffffffff89afdd6f:       test   %r8d,%r8d
    0.00 :   ffffffff89afdd72:       js     0xffffffff89afdd94
    0.00 :   ffffffff89afdd74:       cmp    0xc30(%rbx),%rdx
    0.00 :   ffffffff89afdd7b:       jbe    0xffffffff89afdd94
    0.00 :   ffffffff89afdd7d:       xor    %edi,%edi
    0.00 :   ffffffff89afdd7f:       mov    %rdx,%rcx
    0.00 :   ffffffff89afdd82:       sub    0xc30(%rbx),%rcx
    0.00 :   ffffffff89afdd89:       cmp    0xc38(%rbx),%rcx
    0.00 :   ffffffff89afdd90:       setbe  %dil
    0.00 :   ffffffff89afdd94:       mov    %gs:0x31840,%rcx
    0.00 :   ffffffff89afdd9d:       mov    0xc40(%rcx),%ecx
    0.00 :   ffffffff89afdda3:       and    $0x80000000,%ecx
    0.00 :   ffffffff89afdda9:       or     %edi,%ecx
    0.00 :   ffffffff89afddab:       mov    %ecx,0x8(%rsi)
    0.00 :   ffffffff89afddae:       xor    %r12d,%r12d
    0.00 :   ffffffff89afddb1:       test   %rax,%rax
    0.00 :   ffffffff89afddb4:       je     0xffffffff89afde61
    0.00 :   ffffffff89afddba:       mov    %gs:0x31840,%rcx
    0.00 :   ffffffff89afddc3:       mov    0xc40(%rcx),%esi
    0.00 :   ffffffff89afddc9:       mov    0x8(%rax),%r13d
    0.00 :   ffffffff89afddcd:       test   %esi,%esi
    0.00 :   ffffffff89afddcf:       js     0xffffffff89afddde
    0.00 :   ffffffff89afddd1:       cmp    0xc30(%rcx),%rdx
    0.00 :   ffffffff89afddd8:       ja     0xffffffff89afde82
    0.00 :   ffffffff89afddde:       mov    %r13d,%edx
    0.00 :   ffffffff89afdde1:       and    $0x7fffffff,%edx
    0.00 :   ffffffff89afdde7:       cmp    $0x2,%edx
    0.00 :   ffffffff89afddea:       jg     0xffffffff89afdecf
    0.00 :   ffffffff89afddf0:       mov    0x10(%rax),%r14
    0.00 :   ffffffff89afddf4:       mov    (%rax),%r15
    0.00 :   ffffffff89afddf7:       cmp    %r15,0xc30(%rbx)
    0.00 :   ffffffff89afddfe:       jne    0xffffffff89afde0d
    0.00 :   ffffffff89afde00:       cmp    0xc38(%rbx),%r14
    0.00 :   ffffffff89afde07:       je     0xffffffff89afdebd
    0.00 :   ffffffff89afde0d:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89afde16:       mov    0xbf8(%rax),%rdi
    0.00 :   ffffffff89afde1d:       mov    %edx,-0x2c(%rbp)
    0.00 :   ffffffff89afde20:       call   0xffffffff8aaae450
    0.00 :   ffffffff89afde25:       mov    -0x2c(%rbp),%edx
    0.00 :   ffffffff89afde28:       cmp    $0x2,%edx
    0.00 :   ffffffff89afde2b:       je     0xffffffff89afde9d
    0.00 :   ffffffff89afde2d:       mov    %r14,%rdi
    0.00 :   ffffffff89afde30:       cmp    $0x7ff,%r14
    0.00 :   ffffffff89afde37:       jbe    0xffffffff89afded7
    0.00 :   ffffffff89afde3d:       call   0xffffffff89a4b220
    0.00 :   ffffffff89afde42:       mov    $0xfffffff4,%r12d
    0.00 :   ffffffff89afde48:       test   %al,%al
    0.00 :   ffffffff89afde4a:       jne    0xffffffff89afdea3
    0.00 :   ffffffff89afde4c:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89afde55:       mov    0xbf8(%rax),%rdi
    0.00 :   ffffffff89afde5c:       call   0xffffffff8aaae570
    0.00 :   ffffffff89afde61:       add    $0x8,%rsp
    0.00 :   ffffffff89afde65:       mov    %r12d,%eax
    0.00 :   ffffffff89afde68:       pop    %rbx
    0.00 :   ffffffff89afde69:       pop    %r12
    0.00 :   ffffffff89afde6b:       pop    %r13
    0.00 :   ffffffff89afde6d:       pop    %r14
    0.00 :   ffffffff89afde6f:       pop    %r15
    0.00 :   ffffffff89afde71:       pop    %rbp
    0.00 :   ffffffff89afde72:       xor    %edx,%edx
    0.00 :   ffffffff89afde74:       xor    %ecx,%ecx
    0.00 :   ffffffff89afde76:       xor    %esi,%esi
    0.00 :   ffffffff89afde78:       xor    %edi,%edi
    0.00 :   ffffffff89afde7a:       xor    %r8d,%r8d
    0.00 :   ffffffff89afde7d:       ret
    0.00 :   ffffffff89afde7e:       int3
    0.00 :   ffffffff89afde7f:       int3
    0.00 :   ffffffff89afde80:       int3
    0.00 :   ffffffff89afde81:       int3
    0.00 :   ffffffff89afde82:       sub    0xc30(%rcx),%rdx
    0.00 :   ffffffff89afde89:       mov    $0xffffffff,%r12d
    0.00 :   ffffffff89afde8f:       cmp    0xc38(%rcx),%rdx
    0.00 :   ffffffff89afde96:       jbe    0xffffffff89afde61
    0.00 :   ffffffff89afde98:       jmp    0xffffffff89afddde
    0.00 :   ffffffff89afde9d:       xor    %r15d,%r15d
    0.00 :   ffffffff89afdea0:       xor    %r14d,%r14d
    0.00 :   ffffffff89afdea3:       mov    %r15,0xc30(%rbx)
    0.00 :   ffffffff89afdeaa:       xor    %r12d,%r12d
    0.00 :   ffffffff89afdead:       mov    %r14,0xc38(%rbx)
    0.00 :   ffffffff89afdeb4:       mov    %r13d,0xc40(%rbx)
    0.00 :   ffffffff89afdebb:       jmp    0xffffffff89afde4c
    0.00 :   ffffffff89afdebd:       xor    %r12d,%r12d
    0.00 :   ffffffff89afdec0:       cmp    0xc40(%rbx),%r13d
    0.00 :   ffffffff89afdec7:       jne    0xffffffff89afde0d
    0.00 :   ffffffff89afdecd:       jmp    0xffffffff89afde61
    0.00 :   ffffffff89afdecf:       mov    $0xffffffea,%r12d
    0.00 :   ffffffff89afded5:       jmp    0xffffffff89afde61
    0.00 :   ffffffff89afded7:       call   0xffffffff89a4b220
    0.00 :   ffffffff89afdedc:       mov    $0xfffffff4,%r12d
    0.00 :   ffffffff89afdee2:       jmp    0xffffffff89afde4c
 Percent |	Source code & Disassembly of kcore for cycles (15 samples, percent: local period)
-------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89ab84f0 <load0>:
    0.00 :   ffffffff89ab84f0:       mov    %esi,%eax
    0.13 :   ffffffff89ab84f2:       mov    %edi,%ecx
   99.83 :   ffffffff89ab84f4:       wrmsr
    0.04 :   ffffffff89ab84f6:       xchg   %ax,%ax
    0.00 :   ffffffff89ab84f8:       xor    %eax,%eax
    0.00 :   ffffffff89ab84fa:       xor    %edx,%edx
    0.00 :   ffffffff89ab84fc:       xor    %ecx,%ecx
    0.00 :   ffffffff89ab84fe:       xor    %esi,%esi
    0.00 :   ffffffff89ab8500:       xor    %edi,%edi
    0.00 :   ffffffff89ab8502:       ret
    0.00 :   ffffffff89ab8503:       int3
    0.00 :   ffffffff89ab8504:       int3
    0.00 :   ffffffff89ab8505:       int3
    0.00 :   ffffffff89ab8506:       int3
    0.00 :   ffffffff89ab8507:       push   %rbp
    0.00 :   ffffffff89ab8508:       shl    $0x20,%rdx
    0.00 :   ffffffff89ab850c:       mov    %rdx,%rsi
    0.00 :   ffffffff89ab850f:       xor    %edx,%edx
    0.00 :   ffffffff89ab8511:       or     %rax,%rsi
    0.00 :   ffffffff89ab8514:       mov    %rsp,%rbp
    0.00 :   ffffffff89ab8517:       call   0xffffffff8a27ca50
    0.00 :   ffffffff89ab851c:       pop    %rbp
    0.00 :   ffffffff89ab851d:       xor    %eax,%eax
    0.00 :   ffffffff89ab851f:       xor    %edx,%edx
    0.00 :   ffffffff89ab8521:       xor    %ecx,%ecx
    0.00 :   ffffffff89ab8523:       xor    %esi,%esi
    0.00 :   ffffffff89ab8525:       xor    %edi,%edi
    0.00 :   ffffffff89ab8527:       ret
    0.00 :   ffffffff89ab8528:       int3
    0.00 :   ffffffff89ab8529:       int3
    0.00 :   ffffffff89ab852a:       int3
    0.00 :   ffffffff89ab852b:       int3
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8a0da8d0 <load0>:
    0.00 :   ffffffff8a0da8d0:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8a0da8d5:       push   %rbp
    0.00 :   ffffffff8a0da8d6:       mov    %rsp,%rbp
    0.00 :   ffffffff8a0da8d9:       push   %r15
    0.00 :   ffffffff8a0da8db:       push   %r14
    0.00 :   ffffffff8a0da8dd:       push   %r13
    0.00 :   ffffffff8a0da8df:       mov    %r8d,%r13d
    0.00 :   ffffffff8a0da8e2:       push   %r12
    0.00 :   ffffffff8a0da8e4:       mov    %rdx,%r12
    0.00 :   ffffffff8a0da8e7:       push   %rbx
    0.00 :   ffffffff8a0da8e8:       mov    %rcx,%rbx
    0.00 :   ffffffff8a0da8eb:       sub    $0x20,%rsp
    0.00 :   ffffffff8a0da8ef:       movslq 0x139ddce(%rip),%rax        # 0xffffffff8b4786c4
  100.00 :   ffffffff8a0da8f6:       add    0xc0(%rcx),%rax
    0.00 :   ffffffff8a0da8fd:       mov    %rdi,-0x30(%rbp)
    0.00 :   ffffffff8a0da901:       mov    %rax,%r15
    0.00 :   ffffffff8a0da904:       mov    %rsi,-0x38(%rbp)
    0.00 :   ffffffff8a0da908:       mov    %r9d,-0x40(%rbp)
    0.00 :   ffffffff8a0da90c:       call   0xffffffff89baecb0
    0.00 :   ffffffff8a0da911:       mov    0x8(%r15),%r14
    0.00 :   ffffffff8a0da915:       mov    0x10(%r15),%eax
    0.00 :   ffffffff8a0da919:       testb  $0x2,0x40(%r12)
    0.00 :   ffffffff8a0da91f:       jne    0xffffffff8a0daa0c
    0.00 :   ffffffff8a0da925:       testb  $0x2,0x40(%r14)
    0.00 :   ffffffff8a0da92a:       jne    0xffffffff8a0daa0c
    0.00 :   ffffffff8a0da930:       not    %eax
    0.00 :   ffffffff8a0da932:       and    %r13d,%eax
    0.00 :   ffffffff8a0da935:       mov    %eax,%r15d
    0.00 :   ffffffff8a0da938:       je     0xffffffff8a0da9f9
    0.00 :   ffffffff8a0da93e:       test   %r14,%r14
    0.00 :   ffffffff8a0da941:       je     0xffffffff8a0da96b
    0.00 :   ffffffff8a0da943:       testb  $0x8,0x41(%r14)
    0.00 :   ffffffff8a0da948:       jne    0xffffffff8a0daa8c
    0.00 :   ffffffff8a0da94e:       mov    $0x1,%eax
    0.00 :   ffffffff8a0da953:       lock xadd %eax,(%r14)
    0.00 :   ffffffff8a0da958:       test   %eax,%eax
    0.00 :   ffffffff8a0da95a:       je     0xffffffff8a0dab7f
    0.00 :   ffffffff8a0da960:       lea    0x1(%rax),%edx
    0.00 :   ffffffff8a0da963:       or     %eax,%edx
    0.00 :   ffffffff8a0da965:       js     0xffffffff8a0dab6d
    0.00 :   ffffffff8a0da96b:       call   0xffffffff89bb5d30
    0.00 :   ffffffff8a0da970:       mov    0x20(%rbx),%rdx
    0.00 :   ffffffff8a0da974:       test   %rdx,%rdx
    0.00 :   ffffffff8a0da977:       je     0xffffffff8a0da999
    0.00 :   ffffffff8a0da979:       mov    0x38(%rdx),%rax
    0.00 :   ffffffff8a0da97d:       test   %rax,%rax
    0.00 :   ffffffff8a0da980:       je     0xffffffff8a0da999
    0.00 :   ffffffff8a0da982:       movslq 0x139dd3f(%rip),%rcx        # 0xffffffff8b4786c8
    0.00 :   ffffffff8a0da989:       add    %rcx,%rax
    0.00 :   ffffffff8a0da98c:       je     0xffffffff8a0da999
    0.00 :   ffffffff8a0da98e:       cmpw   $0x11,0x10(%rax)
    0.00 :   ffffffff8a0da993:       je     0xffffffff8a0daa38
    0.00 :   ffffffff8a0da999:       cmpq   $0x0,0x10(%rbx)
    0.00 :   ffffffff8a0da99e:       je     0xffffffff8a0da9b2
    0.00 :   ffffffff8a0da9a0:       mov    0x18(%rbx),%rax
    0.00 :   ffffffff8a0da9a4:       mov    0x68(%rax),%rax
    0.00 :   ffffffff8a0da9a8:       testb  $0x80,0x53(%rax)
    0.00 :   ffffffff8a0da9ac:       je     0xffffffff8a0daa62
    0.00 :   ffffffff8a0da9b2:       movzwl (%rdx),%eax
    0.00 :   ffffffff8a0da9b5:       and    $0xf000,%ax
    0.00 :   ffffffff8a0da9b9:       cmp    $0xc000,%ax
    0.00 :   ffffffff8a0da9bd:       je     0xffffffff8a0daaec
    0.00 :   ffffffff8a0da9c3:       xor    %r9d,%r9d
    0.00 :   ffffffff8a0da9c6:       test   %r14,%r14
    0.00 :   ffffffff8a0da9c9:       je     0xffffffff8a0daa14
    0.00 :   ffffffff8a0da9cb:       mov    $0xffffffff,%eax
    0.00 :   ffffffff8a0da9d0:       lock xadd %eax,(%r14)
    0.00 :   ffffffff8a0da9d5:       cmp    $0x1,%eax
    0.00 :   ffffffff8a0da9d8:       je     0xffffffff8a0daad7
    0.00 :   ffffffff8a0da9de:       test   %eax,%eax
    0.00 :   ffffffff8a0da9e0:       jg     0xffffffff8a0daa14
    0.00 :   ffffffff8a0da9e2:       mov    $0x3,%esi
    0.00 :   ffffffff8a0da9e7:       mov    %r14,%rdi
    0.00 :   ffffffff8a0da9ea:       mov    %r9d,-0x30(%rbp)
    0.00 :   ffffffff8a0da9ee:       call   0xffffffff8a1b4990
    0.00 :   ffffffff8a0da9f3:       mov    -0x30(%rbp),%r9d
    0.00 :   ffffffff8a0da9f7:       jmp    0xffffffff8a0daa14
    0.00 :   ffffffff8a0da9f9:       mov    %r12,%rsi
    0.00 :   ffffffff8a0da9fc:       mov    %r14,%rdi
    0.00 :   ffffffff8a0da9ff:       call   0xffffffff8a0dd900
    0.00 :   ffffffff8a0daa04:       test   %al,%al
    0.00 :   ffffffff8a0daa06:       je     0xffffffff8a0da93e
    0.00 :   ffffffff8a0daa0c:       call   0xffffffff89bb5d30
    0.00 :   ffffffff8a0daa11:       xor    %r9d,%r9d
    0.00 :   ffffffff8a0daa14:       lea    -0x28(%rbp),%rsp
    0.00 :   ffffffff8a0daa18:       mov    %r9d,%eax
    0.00 :   ffffffff8a0daa1b:       pop    %rbx
    0.00 :   ffffffff8a0daa1c:       pop    %r12
    0.00 :   ffffffff8a0daa1e:       pop    %r13
    0.00 :   ffffffff8a0daa20:       pop    %r14
    0.00 :   ffffffff8a0daa22:       pop    %r15
    0.00 :   ffffffff8a0daa24:       pop    %rbp
    0.00 :   ffffffff8a0daa25:       xor    %edx,%edx
    0.00 :   ffffffff8a0daa27:       xor    %ecx,%ecx
    0.00 :   ffffffff8a0daa29:       xor    %esi,%esi
    0.00 :   ffffffff8a0daa2b:       xor    %edi,%edi
    0.00 :   ffffffff8a0daa2d:       xor    %r8d,%r8d
    0.00 :   ffffffff8a0daa30:       xor    %r9d,%r9d
    0.00 :   ffffffff8a0daa33:       ret
    0.00 :   ffffffff8a0daa34:       int3
    0.00 :   ffffffff8a0daa35:       int3
    0.00 :   ffffffff8a0daa36:       int3
    0.00 :   ffffffff8a0daa37:       int3
    0.00 :   ffffffff8a0daa38:       movzbl -0x40(%rbp),%eax
    0.00 :   ffffffff8a0daa3c:       mov    -0x38(%rbp),%rsi
    0.00 :   ffffffff8a0daa40:       mov    %r13d,%r9d
    0.00 :   ffffffff8a0daa43:       mov    %r12,%rdx
    0.00 :   ffffffff8a0daa46:       mov    -0x30(%rbp),%rdi
    0.00 :   ffffffff8a0daa4a:       mov    %rbx,%r8
    0.00 :   ffffffff8a0daa4d:       mov    %r14,%rcx
    0.00 :   ffffffff8a0daa50:       push   %rax
    0.00 :   ffffffff8a0daa51:       push   %r15
    0.00 :   ffffffff8a0daa53:       call   0xffffffff8a0d9650
    0.00 :   ffffffff8a0daa58:       mov    %eax,%r9d
    0.00 :   ffffffff8a0daa5b:       pop    %rax
    0.00 :   ffffffff8a0daa5c:       pop    %rdx
    0.00 :   ffffffff8a0daa5d:       jmp    0xffffffff8a0da9c6
    0.00 :   ffffffff8a0daa62:       movzbl -0x40(%rbp),%eax
    0.00 :   ffffffff8a0daa66:       mov    -0x38(%rbp),%rsi
    0.00 :   ffffffff8a0daa6a:       mov    %r13d,%r9d
    0.00 :   ffffffff8a0daa6d:       mov    %r14,%rcx
    0.00 :   ffffffff8a0daa70:       mov    -0x30(%rbp),%rdi
    0.00 :   ffffffff8a0daa74:       mov    %rbx,%r8
    0.00 :   ffffffff8a0daa77:       mov    %r12,%rdx
    0.00 :   ffffffff8a0daa7a:       push   %rax
    0.00 :   ffffffff8a0daa7b:       push   %r15
    0.00 :   ffffffff8a0daa7d:       call   0xffffffff8a0da310
    0.00 :   ffffffff8a0daa82:       pop    %rcx
    0.00 :   ffffffff8a0daa83:       pop    %rsi
    0.00 :   ffffffff8a0daa84:       mov    %eax,%r9d
    0.00 :   ffffffff8a0daa87:       jmp    0xffffffff8a0da9c6
    0.00 :   ffffffff8a0daa8c:       mov    0x30(%r14),%rsi
    0.00 :   ffffffff8a0daa90:       mov    %rsi,-0x48(%rbp)
    0.00 :   ffffffff8a0daa94:       call   0xffffffff89baecb0
    0.00 :   ffffffff8a0daa99:       mov    -0x48(%rbp),%rsi
    0.00 :   ffffffff8a0daa9d:       mov    0x8(%rsi),%r14
    0.00 :   ffffffff8a0daaa1:       test   %r14,%r14
    0.00 :   ffffffff8a0daaa4:       je     0xffffffff8a0daabd
    0.00 :   ffffffff8a0daaa6:       mov    (%r14),%edx
    0.00 :   ffffffff8a0daaa9:       test   %edx,%edx
    0.00 :   ffffffff8a0daaab:       je     0xffffffff8a0daa9d
    0.00 :   ffffffff8a0daaad:       lea    0x1(%rdx),%ecx
    0.00 :   ffffffff8a0daab0:       mov    %edx,%eax
    0.00 :   ffffffff8a0daab2:       lock cmpxchg %ecx,(%r14)
    0.00 :   ffffffff8a0daab7:       jne    0xffffffff8a0daad3
    0.00 :   ffffffff8a0daab9:       or     %ecx,%edx
    0.00 :   ffffffff8a0daabb:       js     0xffffffff8a0daac7
    0.00 :   ffffffff8a0daabd:       call   0xffffffff89bb5d30
    0.00 :   ffffffff8a0daac2:       jmp    0xffffffff8a0da96b
    0.00 :   ffffffff8a0daac7:       xor    %esi,%esi
    0.00 :   ffffffff8a0daac9:       mov    %r14,%rdi
    0.00 :   ffffffff8a0daacc:       call   0xffffffff8a1b4990
    0.00 :   ffffffff8a0daad1:       jmp    0xffffffff8a0daabd
    0.00 :   ffffffff8a0daad3:       mov    %eax,%edx
    0.00 :   ffffffff8a0daad5:       jmp    0xffffffff8a0daaa9
    0.00 :   ffffffff8a0daad7:       mov    %r9d,-0x30(%rbp)
    0.00 :   ffffffff8a0daadb:       mov    %r14,%rdi
    0.00 :   ffffffff8a0daade:       call   0xffffffff8a0dd430
    0.00 :   ffffffff8a0daae3:       mov    -0x30(%rbp),%r9d
    0.00 :   ffffffff8a0daae7:       jmp    0xffffffff8a0daa14
    0.00 :   ffffffff8a0daaec:       mov    0xc8(%rbx),%r8
    0.00 :   ffffffff8a0daaf3:       mov    %r8,-0x40(%rbp)
    0.00 :   ffffffff8a0daaf7:       test   %r15d,%r15d
    0.00 :   ffffffff8a0daafa:       je     0xffffffff8a0dab91
    0.00 :   ffffffff8a0dab00:       mov    -0x38(%rbp),%r15
    0.00 :   ffffffff8a0dab04:       mov    -0x30(%rbp),%rdx
    0.00 :   ffffffff8a0dab08:       mov    %r13d,%ecx
    0.00 :   ffffffff8a0dab0b:       mov    %r12,%rsi
    0.00 :   ffffffff8a0dab0e:       mov    %r15,%rdi
    0.00 :   ffffffff8a0dab11:       call   0xffffffff8a0e4050
    0.00 :   ffffffff8a0dab16:       mov    -0x40(%rbp),%r8
    0.00 :   ffffffff8a0dab1a:       mov    -0x30(%rbp),%rdx
    0.00 :   ffffffff8a0dab1e:       mov    %r13d,%ecx
    0.00 :   ffffffff8a0dab21:       mov    %r14,%rsi
    0.00 :   ffffffff8a0dab24:       mov    %r15,%rdi
    0.00 :   ffffffff8a0dab27:       mov    %eax,-0x38(%rbp)
    0.00 :   ffffffff8a0dab2a:       call   0xffffffff8a0e4050
    0.00 :   ffffffff8a0dab2f:       mov    %eax,%r9d
    0.00 :   ffffffff8a0dab32:       test   %eax,%eax
    0.00 :   ffffffff8a0dab34:       jne    0xffffffff8a0da9c6
    0.00 :   ffffffff8a0dab3a:       mov    -0x38(%rbp),%r9d
    0.00 :   ffffffff8a0dab3e:       test   %r9d,%r9d
    0.00 :   ffffffff8a0dab41:       jne    0xffffffff8a0da9c6
    0.00 :   ffffffff8a0dab47:       movslq 0x139db76(%rip),%rdi        # 0xffffffff8b4786c4
    0.00 :   ffffffff8a0dab4e:       mov    %r13d,%edx
    0.00 :   ffffffff8a0dab51:       mov    %r12,%rsi
    0.00 :   ffffffff8a0dab54:       mov    %r9d,-0x30(%rbp)
    0.00 :   ffffffff8a0dab58:       add    0xc0(%rbx),%rdi
    0.00 :   ffffffff8a0dab5f:       call   0xffffffff8a0d95a0
    0.00 :   ffffffff8a0dab64:       mov    -0x30(%rbp),%r9d
    0.00 :   ffffffff8a0dab68:       jmp    0xffffffff8a0da9c6
    0.00 :   ffffffff8a0dab6d:       mov    $0x1,%esi
    0.00 :   ffffffff8a0dab72:       mov    %r14,%rdi
    0.00 :   ffffffff8a0dab75:       call   0xffffffff8a1b4990
    0.00 :   ffffffff8a0dab7a:       jmp    0xffffffff8a0da96b
    0.00 :   ffffffff8a0dab7f:       mov    $0x2,%esi
    0.00 :   ffffffff8a0dab84:       mov    %r14,%rdi
    0.00 :   ffffffff8a0dab87:       call   0xffffffff8a1b4990
    0.00 :   ffffffff8a0dab8c:       jmp    0xffffffff8a0da96b
    0.00 :   ffffffff8a0dab91:       mov    %r12,%rsi
    0.00 :   ffffffff8a0dab94:       mov    %r14,%rdi
    0.00 :   ffffffff8a0dab97:       call   0xffffffff8a0dd900
    0.00 :   ffffffff8a0dab9c:       mov    -0x40(%rbp),%r8
    0.00 :   ffffffff8a0daba0:       test   %al,%al
    0.00 :   ffffffff8a0daba2:       jne    0xffffffff8a0da9c3
    0.00 :   ffffffff8a0daba8:       mov    -0x30(%rbp),%rdx
    0.00 :   ffffffff8a0dabac:       mov    -0x38(%rbp),%rdi
    0.00 :   ffffffff8a0dabb0:       mov    %r13d,%ecx
    0.00 :   ffffffff8a0dabb3:       mov    %r12,%rsi
    0.00 :   ffffffff8a0dabb6:       call   0xffffffff8a0e4050
    0.00 :   ffffffff8a0dabbb:       mov    %eax,%r9d
    0.00 :   ffffffff8a0dabbe:       jmp    0xffffffff8a0dab3e
    0.00 :   ffffffff8a0dabc3:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff8a0dabce:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8ac01170 <load0>:
    0.00 :   ffffffff8ac01170:       xchg   %ax,%ax
    0.00 :   ffffffff8ac01172:       mov    $0x48,%ecx
    0.00 :   ffffffff8ac01177:       mov    %gs:0x1fb70,%rdx
    0.00 :   ffffffff8ac01180:       and    $0xfffffffe,%edx
    0.00 :   ffffffff8ac01183:       mov    %edx,%eax
    0.00 :   ffffffff8ac01185:       shr    $0x20,%rdx
  100.00 :   ffffffff8ac01189:       wrmsr
    0.00 :   ffffffff8ac0118b:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8ac01190:       pop    %r15
    0.00 :   ffffffff8ac01192:       pop    %r14
    0.00 :   ffffffff8ac01194:       pop    %r13
    0.00 :   ffffffff8ac01196:       pop    %r12
    0.00 :   ffffffff8ac01198:       pop    %rbp
    0.00 :   ffffffff8ac01199:       pop    %rbx
    0.00 :   ffffffff8ac0119a:       pop    %r11
    0.00 :   ffffffff8ac0119c:       pop    %r10
    0.00 :   ffffffff8ac0119e:       pop    %r9
    0.00 :   ffffffff8ac011a0:       pop    %r8
    0.00 :   ffffffff8ac011a2:       pop    %rax
    0.00 :   ffffffff8ac011a3:       pop    %rcx
    0.00 :   ffffffff8ac011a4:       pop    %rdx
    0.00 :   ffffffff8ac011a5:       pop    %rsi
    0.00 :   ffffffff8ac011a6:       mov    %rsp,%rdi
    0.00 :   ffffffff8ac011a9:       mov    %gs:0x6004,%rsp
    0.00 :   ffffffff8ac011b2:       push   0x30(%rdi)
    0.00 :   ffffffff8ac011b5:       push   0x28(%rdi)
    0.00 :   ffffffff8ac011b8:       push   0x20(%rdi)
    0.00 :   ffffffff8ac011bb:       push   0x18(%rdi)
    0.00 :   ffffffff8ac011be:       push   0x10(%rdi)
    0.00 :   ffffffff8ac011c1:       push   (%rdi)
    0.00 :   ffffffff8ac011c3:       push   %rax
    0.00 :   ffffffff8ac011c4:       xchg   %ax,%ax
    0.00 :   ffffffff8ac011c6:       mov    %cr3,%rdi
    0.00 :   ffffffff8ac011c9:       xchg   %ax,%ax
    0.00 :   ffffffff8ac011cb:       mov    %rdi,%rax
    0.00 :   ffffffff8ac011ce:       and    $0x7ff,%rdi
    0.00 :   ffffffff8ac011d5:       bt     %rdi,%gs:0x31916
    0.00 :   ffffffff8ac011df:       jae    0xffffffff8ac011f0
    0.00 :   ffffffff8ac011e1:       btr    %rdi,%gs:0x31916
    0.00 :   ffffffff8ac011eb:       mov    %rax,%rdi
    0.00 :   ffffffff8ac011ee:       jmp    0xffffffff8ac011f8
    0.00 :   ffffffff8ac011f0:       mov    %rax,%rdi
    0.00 :   ffffffff8ac011f3:       bts    $0x3f,%rdi
    0.00 :   ffffffff8ac011f8:       or     $0x800,%rdi
    0.00 :   ffffffff8ac011ff:       or     $0x1000,%rdi
    0.00 :   ffffffff8ac01206:       mov    %rdi,%cr3
    0.00 :   ffffffff8ac01209:       pop    %rax
    0.00 :   ffffffff8ac0120a:       pop    %rdi
    0.00 :   ffffffff8ac0120b:       swapgs
    0.00 :   ffffffff8ac0120e:       jmp    0xffffffff8ac01230
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89d74590 <load0>:
    0.00 :   ffffffff89d74590:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d74595:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d7459a:       push   %rbp
    0.00 :   ffffffff89d7459b:       mov    %rsp,%rbp
    0.00 :   ffffffff89d7459e:       sub    $0x8,%rsp
    0.00 :   ffffffff89d745a2:       mov    (%rdi),%rax
    0.00 :   ffffffff89d745a5:       test   $0x2,%al
    0.00 :   ffffffff89d745a7:       jne    0xffffffff89d745ca
    0.00 :   ffffffff89d745a9:       lock orb $0x2,(%rdi)
    0.00 :   ffffffff89d745ad:       mov    (%rdi),%rax
    0.00 :   ffffffff89d745b0:       test   $0x2000000,%eax
    0.00 :   ffffffff89d745b5:       je     0xffffffff89d745bc
    0.00 :   ffffffff89d745b7:       lock andb $0xfd,0x3(%rdi)
  100.00 :   ffffffff89d745bc:       leave
    0.00 :   ffffffff89d745bd:       xor    %eax,%eax
    0.00 :   ffffffff89d745bf:       xor    %edx,%edx
    0.00 :   ffffffff89d745c1:       xor    %ecx,%ecx
    0.00 :   ffffffff89d745c3:       xor    %edi,%edi
    0.00 :   ffffffff89d745c5:       ret
    0.00 :   ffffffff89d745c6:       int3
    0.00 :   ffffffff89d745c7:       int3
    0.00 :   ffffffff89d745c8:       int3
    0.00 :   ffffffff89d745c9:       int3
    0.00 :   ffffffff89d745ca:       mov    (%rdi),%rax
    0.00 :   ffffffff89d745cd:       test   $0x100000,%eax
    0.00 :   ffffffff89d745d2:       jne    0xffffffff89d745ad
    0.00 :   ffffffff89d745d4:       mov    (%rdi),%rax
    0.00 :   ffffffff89d745d7:       test   $0x20,%al
    0.00 :   ffffffff89d745d9:       jne    0xffffffff89d745ad
    0.00 :   ffffffff89d745db:       mov    (%rdi),%rax
    0.00 :   ffffffff89d745de:       test   $0x10,%al
    0.00 :   ffffffff89d745e0:       jne    0xffffffff89d7466e
    0.00 :   ffffffff89d745e6:       incl   %gs:0x762bd25b(%rip)        # 0x31848
    0.00 :   ffffffff89d745ed:       mov    $0x2dd60,%rcx
    0.00 :   ffffffff89d745f4:       add    %gs:0x762a53e4(%rip),%rcx        # 0x199e0
    0.00 :   ffffffff89d745fc:       movzbl (%rcx),%edx
    0.00 :   ffffffff89d745ff:       lea    -0x1(%rdx),%eax
    0.00 :   ffffffff89d74602:       test   %edx,%edx
    0.00 :   ffffffff89d74604:       jne    0xffffffff89d7460d
    0.00 :   ffffffff89d74606:       jmp    0xffffffff89d7461b
    0.00 :   ffffffff89d74608:       sub    $0x1,%eax
    0.00 :   ffffffff89d7460b:       jb     0xffffffff89d7461b
    0.00 :   ffffffff89d7460d:       movslq %eax,%rdx
    0.00 :   ffffffff89d74610:       cmp    0x8(%rcx,%rdx,8),%rdi
    0.00 :   ffffffff89d74615:       jne    0xffffffff89d74608
    0.00 :   ffffffff89d74617:       lock orb $0x20,(%rdi)
    0.00 :   ffffffff89d7461b:       decl   %gs:0x762bd226(%rip)        # 0x31848
    0.00 :   ffffffff89d74622:       jne    0xffffffff89d7467b
    0.00 :   ffffffff89d74624:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89d74629:       jmp    0xffffffff89d7467b
    0.00 :   ffffffff89d7462b:       mov    (%rdi),%rax
    0.00 :   ffffffff89d7462e:       mov    (%rdi),%rdx
    0.00 :   ffffffff89d74631:       test   $0x100000,%edx
    0.00 :   ffffffff89d74637:       jne    0xffffffff89d74661
    0.00 :   ffffffff89d74639:       mov    (%rdi),%rdx
    0.00 :   ffffffff89d7463c:       and    $0x2,%edx
    0.00 :   ffffffff89d7463f:       je     0xffffffff89d74691
    0.00 :   ffffffff89d74641:       mov    (%rdi),%rdx
    0.00 :   ffffffff89d74644:       and    $0x40,%edx
    0.00 :   ffffffff89d74647:       je     0xffffffff89d746a2
    0.00 :   ffffffff89d74649:       test   $0x4000000,%eax
    0.00 :   ffffffff89d7464e:       jne    0xffffffff89d74661
    0.00 :   ffffffff89d74650:       mov    %rax,%rdx
    0.00 :   ffffffff89d74653:       or     $0x4000000,%rdx
    0.00 :   ffffffff89d7465a:       lock cmpxchg %rdx,(%rdi)
    0.00 :   ffffffff89d7465f:       jne    0xffffffff89d74649
    0.00 :   ffffffff89d74661:       xor    %eax,%eax
    0.00 :   ffffffff89d74663:       xor    %edx,%edx
    0.00 :   ffffffff89d74665:       xor    %ecx,%ecx
    0.00 :   ffffffff89d74667:       xor    %edi,%edi
    0.00 :   ffffffff89d74669:       ret
    0.00 :   ffffffff89d7466a:       int3
    0.00 :   ffffffff89d7466b:       int3
    0.00 :   ffffffff89d7466c:       int3
    0.00 :   ffffffff89d7466d:       int3
    0.00 :   ffffffff89d7466e:       mov    %rdi,-0x8(%rbp)
    0.00 :   ffffffff89d74672:       call   0xffffffff89d744c0
    0.00 :   ffffffff89d74677:       mov    -0x8(%rbp),%rdi
    0.00 :   ffffffff89d7467b:       lock andb $0xfd,(%rdi)
    0.00 :   ffffffff89d7467f:       mov    %rdi,-0x8(%rbp)
    0.00 :   ffffffff89d74683:       call   0xffffffff89db11d0
    0.00 :   ffffffff89d74688:       mov    -0x8(%rbp),%rdi
    0.00 :   ffffffff89d7468c:       jmp    0xffffffff89d745ad
    0.00 :   ffffffff89d74691:       lock orb $0x2,(%rdi)
    0.00 :   ffffffff89d74695:       xor    %eax,%eax
    0.00 :   ffffffff89d74697:       xor    %edx,%edx
    0.00 :   ffffffff89d74699:       xor    %ecx,%ecx
    0.00 :   ffffffff89d7469b:       xor    %edi,%edi
    0.00 :   ffffffff89d7469d:       ret
    0.00 :   ffffffff89d7469e:       int3
    0.00 :   ffffffff89d7469f:       int3
    0.00 :   ffffffff89d746a0:       int3
    0.00 :   ffffffff89d746a1:       int3
    0.00 :   ffffffff89d746a2:       lock orb $0x40,(%rdi)
    0.00 :   ffffffff89d746a6:       xor    %eax,%eax
    0.00 :   ffffffff89d746a8:       xor    %edx,%edx
    0.00 :   ffffffff89d746aa:       xor    %ecx,%ecx
    0.00 :   ffffffff89d746ac:       xor    %edi,%edi
    0.00 :   ffffffff89d746ae:       ret
    0.00 :   ffffffff89d746af:       int3
    0.00 :   ffffffff89d746b0:       int3
    0.00 :   ffffffff89d746b1:       int3
    0.00 :   ffffffff89d746b2:       int3
    0.00 :   ffffffff89d746b3:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff89d746be:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89be7090 <load0>:
  100.00 :   ffffffff89be7090:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89be7095:       mov    (%rsi),%rax
    0.00 :   ffffffff89be7098:       test   %rax,%rax
    0.00 :   ffffffff89be709b:       je     0xffffffff89be713c
    0.00 :   ffffffff89be70a1:       push   %rbp
    0.00 :   ffffffff89be70a2:       mov    %rsp,%rbp
    0.00 :   ffffffff89be70a5:       push   %r13
    0.00 :   ffffffff89be70a7:       mov    %rdx,%r13
    0.00 :   ffffffff89be70aa:       push   %r12
    0.00 :   ffffffff89be70ac:       push   %rbx
    0.00 :   ffffffff89be70ad:       sub    $0x8,%rsp
    0.00 :   ffffffff89be70b1:       cmp    %rcx,%rax
    0.00 :   ffffffff89be70b4:       ja     0xffffffff89be7116
    0.00 :   ffffffff89be70b6:       mov    0x8(%rsi),%rdx
    0.00 :   ffffffff89be70ba:       mov    %rdi,%r12
    0.00 :   ffffffff89be70bd:       mov    %rsi,%rbx
    0.00 :   ffffffff89be70c0:       add    %rdx,%rax
    0.00 :   ffffffff89be70c3:       test   %rdx,%rdx
    0.00 :   ffffffff89be70c6:       cmovne %rax,%rdx
    0.00 :   ffffffff89be70ca:       mov    %rdx,(%rsi)
    0.00 :   ffffffff89be70cd:       mov    0xbf0(%rdi),%rax
    0.00 :   ffffffff89be70d4:       mov    0x170(%rax),%rdx
    0.00 :   ffffffff89be70db:       xchg   %ax,%ax
    0.00 :   ffffffff89be70dd:       mov    $0x1,%ecx
    0.00 :   ffffffff89be70e2:       mov    %r12,%rdx
    0.00 :   ffffffff89be70e5:       mov    $0x1,%esi
    0.00 :   ffffffff89be70ea:       mov    %r8d,%edi
    0.00 :   ffffffff89be70ed:       call   0xffffffff89b01ec0
    0.00 :   ffffffff89be70f2:       mov    (%rbx),%rax
    0.00 :   ffffffff89be70f5:       test   %rax,%rax
    0.00 :   ffffffff89be70f8:       jne    0xffffffff89be7116
    0.00 :   ffffffff89be70fa:       add    $0x8,%rsp
    0.00 :   ffffffff89be70fe:       pop    %rbx
    0.00 :   ffffffff89be70ff:       pop    %r12
    0.00 :   ffffffff89be7101:       pop    %r13
    0.00 :   ffffffff89be7103:       pop    %rbp
    0.00 :   ffffffff89be7104:       xor    %eax,%eax
    0.00 :   ffffffff89be7106:       xor    %edx,%edx
    0.00 :   ffffffff89be7108:       xor    %ecx,%ecx
    0.00 :   ffffffff89be710a:       xor    %esi,%esi
    0.00 :   ffffffff89be710c:       xor    %edi,%edi
    0.00 :   ffffffff89be710e:       xor    %r8d,%r8d
    0.00 :   ffffffff89be7111:       ret
    0.00 :   ffffffff89be7112:       int3
    0.00 :   ffffffff89be7113:       int3
    0.00 :   ffffffff89be7114:       int3
    0.00 :   ffffffff89be7115:       int3
    0.00 :   ffffffff89be7116:       cmp    %rax,0x0(%r13)
    0.00 :   ffffffff89be711a:       jbe    0xffffffff89be70fa
    0.00 :   ffffffff89be711c:       mov    %rax,0x0(%r13)
    0.00 :   ffffffff89be7120:       add    $0x8,%rsp
    0.00 :   ffffffff89be7124:       pop    %rbx
    0.00 :   ffffffff89be7125:       pop    %r12
    0.00 :   ffffffff89be7127:       pop    %r13
    0.00 :   ffffffff89be7129:       pop    %rbp
    0.00 :   ffffffff89be712a:       xor    %eax,%eax
    0.00 :   ffffffff89be712c:       xor    %edx,%edx
    0.00 :   ffffffff89be712e:       xor    %ecx,%ecx
    0.00 :   ffffffff89be7130:       xor    %esi,%esi
    0.00 :   ffffffff89be7132:       xor    %edi,%edi
    0.00 :   ffffffff89be7134:       xor    %r8d,%r8d
    0.00 :   ffffffff89be7137:       ret
    0.00 :   ffffffff89be7138:       int3
    0.00 :   ffffffff89be7139:       int3
    0.00 :   ffffffff89be713a:       int3
    0.00 :   ffffffff89be713b:       int3
    0.00 :   ffffffff89be713c:       xor    %eax,%eax
    0.00 :   ffffffff89be713e:       xor    %edx,%edx
    0.00 :   ffffffff89be7140:       xor    %ecx,%ecx
    0.00 :   ffffffff89be7142:       xor    %esi,%esi
    0.00 :   ffffffff89be7144:       xor    %edi,%edi
    0.00 :   ffffffff89be7146:       xor    %r8d,%r8d
    0.00 :   ffffffff89be7149:       ret
    0.00 :   ffffffff89be714a:       int3
    0.00 :   ffffffff89be714b:       int3
    0.00 :   ffffffff89be714c:       int3
    0.00 :   ffffffff89be714d:       int3
    0.00 :   ffffffff89be714e:       mov    %gs:0x7644a6f7(%rip),%eax        # 0x3184c
    0.00 :   ffffffff89be7155:       mov    %eax,%eax
    0.00 :   ffffffff89be7157:       bt     %rax,0x241a041(%rip)        # 0xffffffff8c0011a0
    0.00 :   ffffffff89be715f:       jae    0xffffffff89be70dd
    0.00 :   ffffffff89be7165:       incl   %gs:0x7644a6dc(%rip)        # 0x31848
    0.00 :   ffffffff89be716c:       mov    0x23d02ed(%rip),%rax        # 0xffffffff8bfb7460
    0.00 :   ffffffff89be7173:       test   %rax,%rax
    0.00 :   ffffffff89be7176:       je     0xffffffff89be718d
    0.00 :   ffffffff89be7178:       mov    0x8(%rax),%rdi
    0.00 :   ffffffff89be717c:       lea    -0x19(%r8),%esi
    0.00 :   ffffffff89be7180:       mov    %r8d,-0x1c(%rbp)
    0.00 :   ffffffff89be7184:       call   0xffffffff89bd3820
    0.00 :   ffffffff89be7189:       mov    -0x1c(%rbp),%r8d
    0.00 :   ffffffff89be718d:       decl   %gs:0x7644a6b4(%rip)        # 0x31848
    0.00 :   ffffffff89be7194:       jne    0xffffffff89be70dd
    0.00 :   ffffffff89be719a:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89be719f:       jmp    0xffffffff89be70dd
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89bdbc60 <load0>:
    0.00 :   ffffffff89bdbc60:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff89bdbc65:       push   %rbp
    0.00 :   ffffffff89bdbc66:       mov    %rsp,%rbp
    0.00 :   ffffffff89bdbc69:       push   %r15
    0.00 :   ffffffff89bdbc6b:       push   %r14
    0.00 :   ffffffff89bdbc6d:       push   %r13
    0.00 :   ffffffff89bdbc6f:       mov    %edi,%r13d
    0.00 :   ffffffff89bdbc72:       mov    $0xffffffff8d1c6104,%rdi
    0.00 :   ffffffff89bdbc79:       push   %r12
    0.00 :   ffffffff89bdbc7b:       push   %rbx
    0.00 :   ffffffff89bdbc7c:       sub    $0x30,%rsp
    0.00 :   ffffffff89bdbc80:       mov    %gs:0x28,%rax
    0.00 :   ffffffff89bdbc89:       mov    %rax,0x28(%rsp)
    0.00 :   ffffffff89bdbc8e:       xor    %eax,%eax
    0.00 :   ffffffff89bdbc90:       call   0xffffffff8aaadbb0
    0.00 :   ffffffff89bdbc95:       mov    0x2425ed1(%rip),%esi        # 0xffffffff8c001b6c
    0.00 :   ffffffff89bdbc9b:       mov    %rax,0x8(%rsp)
    0.00 :   ffffffff89bdbca0:       test   %esi,%esi
    0.00 :   ffffffff89bdbca2:       jne    0xffffffff89bdc0c6
    0.00 :   ffffffff89bdbca8:       mov    0x35ea4f1(%rip),%rdi        # 0xffffffff8d1c61a0
    0.00 :   ffffffff89bdbcaf:       mov    0x35ea4fa(%rip),%r14        # 0xffffffff8d1c61b0
    0.00 :   ffffffff89bdbcb6:       mov    0x35ea4eb(%rip),%rbx        # 0xffffffff8d1c61a8
    0.00 :   ffffffff89bdbcbd:       mov    (%rdi),%rax
    0.00 :   ffffffff89bdbcc0:       call   *%rax
    0.00 :   ffffffff89bdbcc2:       nopl   (%rax)
    0.00 :   ffffffff89bdbcc5:       sub    %r14,%rax
    0.00 :   ffffffff89bdbcc8:       mov    %rax,%r12
    0.00 :   ffffffff89bdbccb:       xor    %eax,%eax
    0.00 :   ffffffff89bdbccd:       and    %rbx,%r12
    0.00 :   ffffffff89bdbcd0:       shr    %rbx
    0.00 :   ffffffff89bdbcd3:       not    %rbx
    0.00 :   ffffffff89bdbcd6:       test   %r12,%rbx
    0.00 :   ffffffff89bdbcd9:       cmovne %rax,%r12
    0.00 :   ffffffff89bdbcdd:       cmp    %r12,0x35ea6bc(%rip)        # 0xffffffff8d1c63a0
    0.00 :   ffffffff89bdbce4:       jbe    0xffffffff89bdbcf0
    0.00 :   ffffffff89bdbce6:       and    $0x1,%r13d
    0.00 :   ffffffff89bdbcea:       je     0xffffffff89bdc0c6
    0.00 :   ffffffff89bdbcf0:       mov    $0xffffffff,%r13d
    0.00 :   ffffffff89bdbcf6:       mov    %r13d,%ebx
    0.00 :   ffffffff89bdbcf9:       mov    %r13d,%r14d
    0.00 :   ffffffff89bdbcfc:       bsr    %r12,%rbx
    0.00 :   ffffffff89bdbd00:       bsr    0x35ea570(%rip),%r14        # 0xffffffff8d1c6278
    0.00 :   ffffffff89bdbd08:       call   0xffffffff89bdd4e0
    0.00 :   ffffffff89bdbd0d:       mov    0x35ea564(%rip),%rsi        # 0xffffffff8d1c6278
    0.00 :   ffffffff89bdbd14:       bsr    %rax,%r13
    0.00 :   ffffffff89bdbd18:       sub    %r14d,%ebx
    0.00 :   ffffffff89bdbd1b:       mov    $0x0,%eax
    0.00 :   ffffffff89bdbd20:       movq   $0xffffffff8d1c61a0,(%rsp)
    0.00 :   ffffffff89bdbd28:       cmovs  %eax,%ebx
    0.00 :   ffffffff89bdbd2b:       mov    $0x3e,%eax
    0.00 :   ffffffff89bdbd30:       sub    %r13d,%eax
    0.00 :   ffffffff89bdbd33:       cmp    %eax,%ebx
    0.00 :   ffffffff89bdbd35:       cmovg  %eax,%ebx
    0.00 :   ffffffff89bdbd38:       xor    %r13d,%r13d
    0.00 :   ffffffff89bdbd3b:       cmp    %rsi,%r12
    0.00 :   ffffffff89bdbd3e:       jb     0xffffffff89bdbec8
    0.00 :   ffffffff89bdbd44:       mov    %rsi,%rax
    0.00 :   ffffffff89bdbd47:       mov    %ebx,%ecx
    0.00 :   ffffffff89bdbd49:       shl    %cl,%rax
    0.00 :   ffffffff89bdbd4c:       cmp    $0x3f,%ebx
    0.00 :   ffffffff89bdbd4f:       ja     0xffffffff8aa379a6
    0.00 :   ffffffff89bdbd55:       mov    %rsi,%r14
    0.00 :   ffffffff89bdbd58:       cmp    %rax,%r12
    0.00 :   ffffffff89bdbd5b:       jb     0xffffffff89bdbeb4
    0.00 :   ffffffff89bdbd61:       add    %rax,0x35ea448(%rip)        # 0xffffffff8d1c61b0
    0.00 :   ffffffff89bdbd68:       sub    %rax,%r12
    0.00 :   ffffffff89bdbd6b:       add    %rax,0x35ea476(%rip)        # 0xffffffff8d1c61e8
    0.00 :   ffffffff89bdbd72:       mov    0x35ea507(%rip),%rax        # 0xffffffff8d1c6280
    0.00 :   ffffffff89bdbd79:       mov    %ebx,%ecx
    0.00 :   ffffffff89bdbd7b:       shl    %cl,%rax
    0.00 :   ffffffff89bdbd7e:       mov    0x35ea438(%rip),%ecx        # 0xffffffff8d1c61bc
    0.00 :   ffffffff89bdbd84:       add    0x35ea435(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbd8b:       mov    %rax,0x35ea42e(%rip)        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbd92:       cmp    $0x3f,%ecx
    0.00 :   ffffffff89bdbd95:       ja     0xffffffff8aa37a7c
    0.00 :   ffffffff89bdbd9b:       mov    $0x3b9aca00,%r15d
    0.00 :   ffffffff89bdbda1:       shl    %cl,%r15
    0.00 :   ffffffff89bdbda4:       cmp    %rax,%r15
    0.00 :   ffffffff89bdbda7:       ja     0xffffffff89bdbdf2
    0.00 :   ffffffff89bdbda9:       xor    %r14d,%r14d
    0.00 :   ffffffff89bdbdac:       mov    0x35ea45d(%rip),%rsi        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdbdb3:       mov    0x35ea4f7(%rip),%ecx        # 0xffffffff8d1c62b0
    0.00 :   ffffffff89bdbdb9:       sub    %r15,%rax
    0.00 :   ffffffff89bdbdbc:       mov    %rax,0x35ea3fd(%rip)        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbdc3:       lea    0x1(%rsi),%rdi
    0.00 :   ffffffff89bdbdc7:       mov    %rdi,0x35ea442(%rip)        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdbdce:       test   %ecx,%ecx
    0.00 :   ffffffff89bdbdd0:       jne    0xffffffff89bdbfbc
    0.00 :   ffffffff89bdbdd6:       call   0xffffffff89bdd580
    0.00 :   ffffffff89bdbddb:       test   %eax,%eax
    0.00 :   ffffffff89bdbddd:       jne    0xffffffff89bdbfcb
    0.00 :   ffffffff89bdbde3:       mov    0x35ea3d6(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbdea:       cmp    %rax,%r15
    0.00 :   ffffffff89bdbded:       jbe    0xffffffff89bdbdac
    0.00 :   ffffffff89bdbdef:       or     %r14d,%r13d
    0.00 :   ffffffff89bdbdf2:       mov    0x35ea497(%rip),%rax        # 0xffffffff8d1c6290
    0.00 :   ffffffff89bdbdf9:       cmp    $0x3f,%ebx
    0.00 :   ffffffff89bdbdfc:       ja     0xffffffff8aa37a5c
    0.00 :   ffffffff89bdbe02:       mov    %ebx,%ecx
    0.00 :   ffffffff89bdbe04:       shl    %cl,%rax
    0.00 :   ffffffff89bdbe07:       mov    0x35ea3e7(%rip),%ecx        # 0xffffffff8d1c61f4
    0.00 :   ffffffff89bdbe0d:       add    0x35ea3e4(%rip),%rax        # 0xffffffff8d1c61f8
    0.00 :   ffffffff89bdbe14:       mov    %rax,0x35ea3dd(%rip)        # 0xffffffff8d1c61f8
    0.00 :   ffffffff89bdbe1b:       cmp    $0x3f,%ecx
    0.00 :   ffffffff89bdbe1e:       ja     0xffffffff8aa37a35
    0.00 :   ffffffff89bdbe24:       mov    $0x3b9aca00,%edx
    0.00 :   ffffffff89bdbe29:       shl    %cl,%rdx
    0.00 :   ffffffff89bdbe2c:       cmp    %rax,%rdx
    0.00 :   ffffffff89bdbe2f:       ja     0xffffffff89bdbe52
    0.00 :   ffffffff89bdbe31:       mov    0x35ea428(%rip),%rcx        # 0xffffffff8d1c6260
    0.00 :   ffffffff89bdbe38:       sub    %rdx,%rax
    0.00 :   ffffffff89bdbe3b:       add    $0x1,%rcx
    0.00 :   ffffffff89bdbe3f:       cmp    %rax,%rdx
    0.00 :   ffffffff89bdbe42:       jbe    0xffffffff89bdbe38
    0.00 :   ffffffff89bdbe44:       mov    %rax,0x35ea3ad(%rip)        # 0xffffffff8d1c61f8
    0.00 :   ffffffff89bdbe4b:       mov    %rcx,0x35ea40e(%rip)        # 0xffffffff8d1c6260
    0.00 :   ffffffff89bdbe52:       mov    0x35ea43f(%rip),%rax        # 0xffffffff8d1c6298
    0.00 :   ffffffff89bdbe59:       cmp    $0x3f,%ebx
    0.00 :   ffffffff89bdbe5c:       ja     0xffffffff8aa37a15
    0.00 :   ffffffff89bdbe62:       mov    %ebx,%ecx
    0.00 :   ffffffff89bdbe64:       mov    0x35ea41d(%rip),%r14        # 0xffffffff8d1c6288
    0.00 :   ffffffff89bdbe6b:       add    0x35ea40e(%rip),%r14        # 0xffffffff8d1c6280
    0.00 :   ffffffff89bdbe72:       shl    %cl,%rax
    0.00 :   ffffffff89bdbe75:       mov    0x35ea42d(%rip),%ecx        # 0xffffffff8d1c62a8
    0.00 :   ffffffff89bdbe7b:       add    0x35ea41e(%rip),%rax        # 0xffffffff8d1c62a0
    0.00 :   ffffffff89bdbe82:       mov    %rax,0x35ea417(%rip)        # 0xffffffff8d1c62a0
    0.00 :   ffffffff89bdbe89:       add    %ebx,%ecx
    0.00 :   ffffffff89bdbe8b:       cmp    $0x3f,%ecx
    0.00 :   ffffffff89bdbe8e:       ja     0xffffffff8aa379f0
    0.00 :   ffffffff89bdbe94:       shl    %cl,%r14
    0.00 :   ffffffff89bdbe97:       mov    0x35ea3da(%rip),%rsi        # 0xffffffff8d1c6278
    0.00 :   ffffffff89bdbe9e:       sub    %r14,%rax
    0.00 :   ffffffff89bdbea1:       mov    %rax,0x35ea3f8(%rip)        # 0xffffffff8d1c62a0
    0.00 :   ffffffff89bdbea8:       mov    %rsi,%r14
    0.00 :   ffffffff89bdbeab:       cmp    $0x3f,%ebx
    0.00 :   ffffffff89bdbeae:       ja     0xffffffff8aa379d2
    0.00 :   ffffffff89bdbeb4:       mov    %ebx,%ecx
    0.00 :   ffffffff89bdbeb6:       shl    %cl,%r14
    0.00 :   ffffffff89bdbeb9:       cmp    %r14,%r12
    0.00 :   ffffffff89bdbebc:       sbb    $0x0,%ebx
    0.00 :   ffffffff89bdbebf:       cmp    %rsi,%r12
    0.00 :   ffffffff89bdbec2:       jae    0xffffffff89bdbd44
    0.00 :   ffffffff89bdbec8:       mov    %r12,%rdi
    0.00 :   ffffffff89bdbecb:       call   0xffffffff89bda260
    0.00 :   ffffffff89bdbed0:       mov    0x35ea2e6(%rip),%ecx        # 0xffffffff8d1c61bc
    0.00 :   ffffffff89bdbed6:       cmp    $0x3f,%ecx
    0.00 :   ffffffff89bdbed9:       ja     0xffffffff8aa37986
    0.00 :   ffffffff89bdbedf:       mov    $0x3b9aca00,%r14d
    0.00 :   ffffffff89bdbee5:       mov    0x35ea2d4(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbeec:       shl    %cl,%r14
    0.00 :   ffffffff89bdbeef:       cmp    %r14,%rax
    0.00 :   ffffffff89bdbef2:       jb     0xffffffff89bdbf3f
    0.00 :   ffffffff89bdbef4:       xor    %ebx,%ebx
    0.00 :   ffffffff89bdbef6:       mov    0x35ea313(%rip),%rsi        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdbefd:       mov    0x35ea3ad(%rip),%edx        # 0xffffffff8d1c62b0
    0.00 :   ffffffff89bdbf03:       sub    %r14,%rax
    0.00 :   ffffffff89bdbf06:       mov    %rax,0x35ea2b3(%rip)        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbf0d:       lea    0x1(%rsi),%rdi
    0.00 :   ffffffff89bdbf11:       mov    %rdi,0x35ea2f8(%rip)        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdbf18:       test   %edx,%edx
    0.00 :   ffffffff89bdbf1a:       jne    0xffffffff89bdc046
    0.00 :   ffffffff89bdbf20:       call   0xffffffff89bdd580
    0.00 :   ffffffff89bdbf25:       mov    %eax,%r12d
    0.00 :   ffffffff89bdbf28:       test   %eax,%eax
    0.00 :   ffffffff89bdbf2a:       jne    0xffffffff89bdc055
    0.00 :   ffffffff89bdbf30:       mov    0x35ea289(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdbf37:       cmp    %rax,%r14
    0.00 :   ffffffff89bdbf3a:       jbe    0xffffffff89bdbef6
    0.00 :   ffffffff89bdbf3c:       or     %ebx,%r13d
  100.00 :   ffffffff89bdbf3f:       addl   $0x1,0x35ea37a(%rip)        # 0xffffffff8d1c62c0
    0.00 :   ffffffff89bdbf46:       mov    $0xffffffff8d1c61a0,%rdi
    0.00 :   ffffffff89bdbf4d:       mov    %r13d,%esi
    0.00 :   ffffffff89bdbf50:       call   0xffffffff89bda600
    0.00 :   ffffffff89bdbf55:       mov    $0xffffffff8d1c62c8,%rax
    0.00 :   ffffffff89bdbf5c:       mov    (%rsp),%rsi
    0.00 :   ffffffff89bdbf60:       mov    $0x23,%ecx
    0.00 :   ffffffff89bdbf65:       mov    %rax,%rdi
    0.00 :   ffffffff89bdbf68:       rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   ffffffff89bdbf6b:       addl   $0x1,0x35ea34e(%rip)        # 0xffffffff8d1c62c0
    0.00 :   ffffffff89bdbf72:       test   %r13d,%r13d
    0.00 :   ffffffff89bdbf75:       setne  %r12b
    0.00 :   ffffffff89bdbf79:       mov    0x8(%rsp),%rsi
    0.00 :   ffffffff89bdbf7e:       mov    $0xffffffff8d1c6104,%rdi
    0.00 :   ffffffff89bdbf85:       call   0xffffffff8aaadc50
    0.00 :   ffffffff89bdbf8a:       mov    0x28(%rsp),%rax
    0.00 :   ffffffff89bdbf8f:       sub    %gs:0x28,%rax
    0.00 :   ffffffff89bdbf98:       jne    0xffffffff89bdc0ce
    0.00 :   ffffffff89bdbf9e:       add    $0x30,%rsp
    0.00 :   ffffffff89bdbfa2:       mov    %r12d,%eax
    0.00 :   ffffffff89bdbfa5:       pop    %rbx
    0.00 :   ffffffff89bdbfa6:       pop    %r12
    0.00 :   ffffffff89bdbfa8:       pop    %r13
    0.00 :   ffffffff89bdbfaa:       pop    %r14
    0.00 :   ffffffff89bdbfac:       pop    %r15
    0.00 :   ffffffff89bdbfae:       pop    %rbp
    0.00 :   ffffffff89bdbfaf:       xor    %edx,%edx
    0.00 :   ffffffff89bdbfb1:       xor    %ecx,%ecx
    0.00 :   ffffffff89bdbfb3:       xor    %esi,%esi
    0.00 :   ffffffff89bdbfb5:       xor    %edi,%edi
    0.00 :   ffffffff89bdbfb7:       ret
    0.00 :   ffffffff89bdbfb8:       int3
    0.00 :   ffffffff89bdbfb9:       int3
    0.00 :   ffffffff89bdbfba:       int3
    0.00 :   ffffffff89bdbfbb:       int3
    0.00 :   ffffffff89bdbfbc:       movl   $0x0,0x35ea2ea(%rip)        # 0xffffffff8d1c62b0
    0.00 :   ffffffff89bdbfc6:       jmp    0xffffffff89bdbdea
    0.00 :   ffffffff89bdbfcb:       mov    0x35ea24e(%rip),%rsi        # 0xffffffff8d1c6220
    0.00 :   ffffffff89bdbfd2:       movslq %eax,%rdx
    0.00 :   ffffffff89bdbfd5:       lea    0x18(%rsp),%rdi
    0.00 :   ffffffff89bdbfda:       mov    %eax,0x10(%rsp)
    0.00 :   ffffffff89bdbfde:       add    %rdx,0x35ea22b(%rip)        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdbfe5:       mov    $0x4,%r14d
    0.00 :   ffffffff89bdbfeb:       sub    %rdx,%rsi
    0.00 :   ffffffff89bdbfee:       mov    0x35ea233(%rip),%rdx        # 0xffffffff8d1c6228
    0.00 :   ffffffff89bdbff5:       call   0xffffffff89bd1a80
    0.00 :   ffffffff89bdbffa:       mov    0x20(%rsp),%rdx
    0.00 :   ffffffff89bdbfff:       mov    0x18(%rsp),%rsi
    0.00 :   ffffffff89bdc004:       mov    $0xffffffff8d1c61a0,%rdi
    0.00 :   ffffffff89bdc00b:       call   0xffffffff89bd9fd0
    0.00 :   ffffffff89bdc010:       mov    0x35ea232(%rip),%edx        # 0xffffffff8d1c6248
    0.00 :   ffffffff89bdc016:       mov    0x10(%rsp),%eax
    0.00 :   ffffffff89bdc01a:       sub    %eax,%edx
    0.00 :   ffffffff89bdc01c:       mov    0x35ea19d(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdc023:       mov    %edx,0x35ea21f(%rip)        # 0xffffffff8d1c6248
    0.00 :   ffffffff89bdc029:       movslq %edx,%rdx
    0.00 :   ffffffff89bdc02c:       imul   $0x3b9aca00,%rdx,%rdx
    0.00 :   ffffffff89bdc033:       add    0x35ea1f6(%rip),%rdx        # 0xffffffff8d1c6230
    0.00 :   ffffffff89bdc03a:       mov    %rdx,0x35ea1ff(%rip)        # 0xffffffff8d1c6240
    0.00 :   ffffffff89bdc041:       jmp    0xffffffff89bdbdea
    0.00 :   ffffffff89bdc046:       movl   $0x0,0x35ea260(%rip)        # 0xffffffff8d1c62b0
    0.00 :   ffffffff89bdc050:       jmp    0xffffffff89bdbf37
    0.00 :   ffffffff89bdc055:       mov    0x35ea1c4(%rip),%rsi        # 0xffffffff8d1c6220
    0.00 :   ffffffff89bdc05c:       cltq
    0.00 :   ffffffff89bdc05e:       lea    0x18(%rsp),%rdi
    0.00 :   ffffffff89bdc063:       mov    0x35ea1be(%rip),%rdx        # 0xffffffff8d1c6228
    0.00 :   ffffffff89bdc06a:       add    %rax,0x35ea19f(%rip)        # 0xffffffff8d1c6210
    0.00 :   ffffffff89bdc071:       mov    $0x4,%ebx
    0.00 :   ffffffff89bdc076:       sub    %rax,%rsi
    0.00 :   ffffffff89bdc079:       call   0xffffffff89bd1a80
    0.00 :   ffffffff89bdc07e:       mov    0x18(%rsp),%rsi
    0.00 :   ffffffff89bdc083:       mov    0x20(%rsp),%rdx
    0.00 :   ffffffff89bdc088:       mov    $0xffffffff8d1c61a0,%rdi
    0.00 :   ffffffff89bdc08f:       call   0xffffffff89bd9fd0
    0.00 :   ffffffff89bdc094:       mov    0x35ea1ae(%rip),%eax        # 0xffffffff8d1c6248
    0.00 :   ffffffff89bdc09a:       sub    %r12d,%eax
    0.00 :   ffffffff89bdc09d:       mov    %eax,0x35ea1a5(%rip)        # 0xffffffff8d1c6248
    0.00 :   ffffffff89bdc0a3:       cltq
    0.00 :   ffffffff89bdc0a5:       imul   $0x3b9aca00,%rax,%rax
    0.00 :   ffffffff89bdc0ac:       add    0x35ea17d(%rip),%rax        # 0xffffffff8d1c6230
    0.00 :   ffffffff89bdc0b3:       mov    %rax,0x35ea186(%rip)        # 0xffffffff8d1c6240
    0.00 :   ffffffff89bdc0ba:       mov    0x35ea0ff(%rip),%rax        # 0xffffffff8d1c61c0
    0.00 :   ffffffff89bdc0c1:       jmp    0xffffffff89bdbf37
    0.00 :   ffffffff89bdc0c6:       xor    %r12d,%r12d
    0.00 :   ffffffff89bdc0c9:       jmp    0xffffffff89bdbf79
    0.00 :   ffffffff89bdc0ce:       call   0xffffffff8aa98a20
    0.00 :   ffffffff89bdc0d3:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff89bdc0de:       xchg   %ax,%ax
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89e5cd00 <load0>:
    0.00 :   ffffffff89e5cd00:       push   %rbp
    0.00 :   ffffffff89e5cd01:       mov    %gs:0x761d4b40(%rip),%eax        # 0x31848
    0.00 :   ffffffff89e5cd08:       mov    %rsp,%rbp
    0.00 :   ffffffff89e5cd0b:       push   %r12
    0.00 :   ffffffff89e5cd0d:       test   $0xff0100,%eax
    0.00 :   ffffffff89e5cd12:       je     0xffffffff89e5cda1
    0.00 :   ffffffff89e5cd18:       mov    %gs:0x761d1c40(%rip),%r12        # 0x2e960
    0.00 :   ffffffff89e5cd20:       test   %r12,%r12
    0.00 :   ffffffff89e5cd23:       jne    0xffffffff89e5cd4c
    0.00 :   ffffffff89e5cd25:       mov    %gs:0x761d4b1c(%rip),%eax        # 0x31848
    0.00 :   ffffffff89e5cd2c:       test   $0xff0100,%eax
    0.00 :   ffffffff89e5cd31:       jne    0xffffffff89e5cd92
    0.00 :   ffffffff89e5cd33:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89e5cd3c:       cmpq   $0x0,0x920(%rax)
    0.00 :   ffffffff89e5cd44:       je     0xffffffff89e5cd92
    0.00 :   ffffffff89e5cd46:       testb  $0x20,0x2e(%rax)
    0.00 :   ffffffff89e5cd4a:       jne    0xffffffff89e5cd92
    0.00 :   ffffffff89e5cd4c:       call   0xffffffff89baecb0
    0.00 :   ffffffff89e5cd51:       mov    %gs:0x761d4af0(%rip),%eax        # 0x31848
    0.00 :   ffffffff89e5cd58:       test   $0xff0100,%eax
    0.00 :   ffffffff89e5cd5d:       je     0xffffffff89e5cdb6
    0.00 :   ffffffff89e5cd5f:       mov    %gs:0x761d1bf9(%rip),%rdi        # 0x2e960
    0.00 :   ffffffff89e5cd67:       test   %rdi,%rdi
    0.00 :   ffffffff89e5cd6a:       jne    0xffffffff89e5cdc8
    0.00 :   ffffffff89e5cd6c:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89e5cd75:       test   %rax,%rax
    0.00 :   ffffffff89e5cd78:       je     0xffffffff89e5cd85
    0.00 :   ffffffff89e5cd7a:       mov    0xe08(%rax),%rax
    0.00 :   ffffffff89e5cd81:       mov    0x20(%rax),%rdi
    0.00 :   ffffffff89e5cd85:       call   0xffffffff89e52f70
    0.00 :   ffffffff89e5cd8a:       mov    %rax,%r12
    0.00 :   ffffffff89e5cd8d:       call   0xffffffff89bb5d30
    0.00 :   ffffffff89e5cd92:       mov    %r12,%rax
    0.00 :   ffffffff89e5cd95:       mov    -0x8(%rbp),%r12
    0.00 :   ffffffff89e5cd99:       leave
    0.00 :   ffffffff89e5cd9a:       xor    %edi,%edi
    0.00 :   ffffffff89e5cd9c:       ret
    0.00 :   ffffffff89e5cd9d:       int3
    0.00 :   ffffffff89e5cd9e:       int3
    0.00 :   ffffffff89e5cd9f:       int3
    0.00 :   ffffffff89e5cda0:       int3
    0.00 :   ffffffff89e5cda1:       mov    %gs:0x31840,%rax
  100.00 :   ffffffff89e5cdaa:       mov    0x13e8(%rax),%r12
    0.00 :   ffffffff89e5cdb1:       jmp    0xffffffff89e5cd20
    0.00 :   ffffffff89e5cdb6:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89e5cdbf:       mov    0x13e8(%rax),%rdi
    0.00 :   ffffffff89e5cdc6:       jmp    0xffffffff89e5cd67
    0.00 :   ffffffff89e5cdc8:       mov    %gs:0x761d4a79(%rip),%eax        # 0x31848
    0.00 :   ffffffff89e5cdcf:       test   $0xff0100,%eax
    0.00 :   ffffffff89e5cdd4:       je     0xffffffff89e5cde0
    0.00 :   ffffffff89e5cdd6:       mov    %gs:0x761d1b82(%rip),%rdi        # 0x2e960
    0.00 :   ffffffff89e5cdde:       jmp    0xffffffff89e5cd85
    0.00 :   ffffffff89e5cde0:       mov    %gs:0x31840,%rax
    0.00 :   ffffffff89e5cde9:       mov    0x13e8(%rax),%rdi
    0.00 :   ffffffff89e5cdf0:       jmp    0xffffffff89e5cd85
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8a46c090 <load0>:
  100.00 :   ffffffff8a46c090:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8a46c095:       push   %rbp
    0.00 :   ffffffff8a46c096:       mov    %rsp,%rbp
    0.00 :   ffffffff8a46c099:       push   %r14
    0.00 :   ffffffff8a46c09b:       push   %r13
    0.00 :   ffffffff8a46c09d:       push   %r12
    0.00 :   ffffffff8a46c09f:       push   %rbx
    0.00 :   ffffffff8a46c0a0:       sub    $0x10,%rsp
    0.00 :   ffffffff8a46c0a4:       mov    %gs:0x28,%rax
    0.00 :   ffffffff8a46c0ad:       mov    %rax,-0x28(%rbp)
    0.00 :   ffffffff8a46c0b1:       xor    %eax,%eax
    0.00 :   ffffffff8a46c0b3:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8a46c0b8:       pushf
    0.00 :   ffffffff8a46c0b9:       pop    %rax
    0.00 :   ffffffff8a46c0ba:       nopl   0x0(%rax)
    0.00 :   ffffffff8a46c0be:       mov    %rax,%r13
    0.00 :   ffffffff8a46c0c1:       cli
    0.00 :   ffffffff8a46c0c2:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8a46c0c7:       mov    $0x2f620,%rbx
    0.00 :   ffffffff8a46c0ce:       mov    0x2ede40b(%rip),%r12        # 0xffffffff8d34a4e0
    0.00 :   ffffffff8a46c0d5:       add    %gs:0x75bad903(%rip),%rbx        # 0x199e0
    0.00 :   ffffffff8a46c0dd:       mov    0x68(%rbx),%eax
    0.00 :   ffffffff8a46c0e0:       cmp    $0xb,%eax
    0.00 :   ffffffff8a46c0e3:       ja     0xffffffff8a46c0ef
    0.00 :   ffffffff8a46c0e5:       lea    0x1(%rax),%r14d
    0.00 :   ffffffff8a46c0e9:       cmp    %r12,0x60(%rbx)
    0.00 :   ffffffff8a46c0ed:       je     0xffffffff8a46c10f
    0.00 :   ffffffff8a46c0ef:       mov    $0x60,%esi
    0.00 :   ffffffff8a46c0f4:       mov    %rbx,%rdi
    0.00 :   ffffffff8a46c0f7:       mov    $0x1,%r14d
    0.00 :   ffffffff8a46c0fd:       call   0xffffffff8a46ba60
    0.00 :   ffffffff8a46c102:       movl   $0x0,0x68(%rbx)
    0.00 :   ffffffff8a46c109:       xor    %eax,%eax
    0.00 :   ffffffff8a46c10b:       mov    %r12,0x60(%rbx)
    0.00 :   ffffffff8a46c10f:       mov    %eax,%r12d
    0.00 :   ffffffff8a46c112:       cmp    $0xb,%eax
    0.00 :   ffffffff8a46c115:       ja     0xffffffff8a46c1a4
    0.00 :   ffffffff8a46c11b:       mov    (%rbx,%r12,8),%rax
    0.00 :   ffffffff8a46c11f:       mov    %rax,-0x30(%rbp)
    0.00 :   ffffffff8a46c123:       cmp    $0xb,%r12
    0.00 :   ffffffff8a46c127:       ja     0xffffffff8a46c193
    0.00 :   ffffffff8a46c129:       movq   $0x0,(%rbx,%r12,8)
    0.00 :   ffffffff8a46c131:       mov    %r14d,0x68(%rbx)
    0.00 :   ffffffff8a46c135:       test   $0x200,%r13d
    0.00 :   ffffffff8a46c13c:       jne    0xffffffff8a46c16a
    0.00 :   ffffffff8a46c13e:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff8a46c142:       mov    -0x28(%rbp),%rdx
    0.00 :   ffffffff8a46c146:       sub    %gs:0x28,%rdx
    0.00 :   ffffffff8a46c14f:       jne    0xffffffff8a46c1b8
    0.00 :   ffffffff8a46c151:       add    $0x10,%rsp
    0.00 :   ffffffff8a46c155:       pop    %rbx
    0.00 :   ffffffff8a46c156:       pop    %r12
    0.00 :   ffffffff8a46c158:       pop    %r13
    0.00 :   ffffffff8a46c15a:       pop    %r14
    0.00 :   ffffffff8a46c15c:       pop    %rbp
    0.00 :   ffffffff8a46c15d:       xor    %edx,%edx
    0.00 :   ffffffff8a46c15f:       xor    %ecx,%ecx
    0.00 :   ffffffff8a46c161:       xor    %esi,%esi
    0.00 :   ffffffff8a46c163:       xor    %edi,%edi
    0.00 :   ffffffff8a46c165:       ret
    0.00 :   ffffffff8a46c166:       int3
    0.00 :   ffffffff8a46c167:       int3
    0.00 :   ffffffff8a46c168:       int3
    0.00 :   ffffffff8a46c169:       int3
    0.00 :   ffffffff8a46c16a:       sti
    0.00 :   ffffffff8a46c16b:       nopl   0x0(%rax,%rax,1)
    0.00 :   ffffffff8a46c170:       jmp    0xffffffff8a46c13e
    0.00 :   ffffffff8a46c172:       cmpl   $0x1,0x1b9c9a3(%rip)        # 0xffffffff8c008b1c
    0.00 :   ffffffff8a46c179:       ja     0xffffffff8a46c0b8
    0.00 :   ffffffff8a46c17f:       mov    $0x8,%esi
    0.00 :   ffffffff8a46c184:       lea    -0x30(%rbp),%rdi
    0.00 :   ffffffff8a46c188:       call   0xffffffff8a46ba60
    0.00 :   ffffffff8a46c18d:       mov    -0x30(%rbp),%rax
    0.00 :   ffffffff8a46c191:       jmp    0xffffffff8a46c142
    0.00 :   ffffffff8a46c193:       mov    %r12,%rsi
    0.00 :   ffffffff8a46c196:       mov    $0xffffffff8bef6580,%rdi
    0.00 :   ffffffff8a46c19d:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8a46c1a2:       jmp    0xffffffff8a46c129
    0.00 :   ffffffff8a46c1a4:       mov    %r12,%rsi
    0.00 :   ffffffff8a46c1a7:       mov    $0xffffffff8bef65a0,%rdi
    0.00 :   ffffffff8a46c1ae:       call   0xffffffff8a2787e0
    0.00 :   ffffffff8a46c1b3:       jmp    0xffffffff8a46c11b
    0.00 :   ffffffff8a46c1b8:       call   0xffffffff8aa98a20
 Percent |	Source code & Disassembly of kcore for cycles (3 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff8ac01829 <load0>:
    0.00 :   ffffffff8ac01829:       push   $0xffffffffffffffff
    0.00 :   ffffffff8ac0182b:       call   0xffffffff8ac013f0
    0.00 :   ffffffff8ac01830:       mov    %rsp,%rdi
    0.00 :   ffffffff8ac01833:       mov    $0xffffffffffffffff,%rsi
    0.00 :   ffffffff8ac0183a:       call   0xffffffff8aa95640
    0.00 :   ffffffff8ac0183f:       xchg   %ax,%ax
    0.00 :   ffffffff8ac01841:       mov    $0x48,%ecx
    0.00 :   ffffffff8ac01846:       mov    %r15,%rdx
    0.00 :   ffffffff8ac01849:       mov    %edx,%eax
    0.00 :   ffffffff8ac0184b:       shr    $0x20,%rdx
   14.87 :   ffffffff8ac0184f:       wrmsr
   68.33 :   ffffffff8ac01851:       xchg   %ax,%ax
    0.00 :   ffffffff8ac01853:       xchg   %ax,%ax
    0.00 :   ffffffff8ac01855:       bt     $0xc,%r14
    0.00 :   ffffffff8ac0185a:       jae    0xffffffff8ac0187e
    0.00 :   ffffffff8ac0185c:       mov    %r14,%r15
    0.00 :   ffffffff8ac0185f:       and    $0x7ff,%r15
    0.00 :   ffffffff8ac01866:       bt     %r15,%gs:0x31916
    0.00 :   ffffffff8ac01870:       jae    0xffffffff8ac0187e
    0.00 :   ffffffff8ac01872:       btr    %r15,%gs:0x31916
    0.00 :   ffffffff8ac0187c:       jmp    0xffffffff8ac01883
    0.00 :   ffffffff8ac0187e:       bts    $0x3f,%r14
   16.80 :   ffffffff8ac01883:       mov    %r14,%cr3
    0.00 :   ffffffff8ac01887:       xchg   %ax,%ax
    0.00 :   ffffffff8ac01889:       wrgsbase %rbx
    0.00 :   ffffffff8ac0188e:       jmp    0xffffffff8ac01897
 Percent |	Source code & Disassembly of kcore for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3                Disassembly of section load0:
         :
         : 5                ffffffff89aa8bd0 <load0>:
    0.00 :   ffffffff89aa8bd0:       mov    %edi,%eax
    0.00 :   ffffffff89aa8bd2:       and    $0xffffffef,%eax
    0.00 :   ffffffff89aa8bd5:       cmp    $0x20,%eax
    0.00 :   ffffffff89aa8bd8:       je     0xffffffff89aa8be5
    0.00 :   ffffffff89aa8bda:       lea    -0xd0(%rdi),%eax
    0.00 :   ffffffff89aa8be0:       and    $0xffffffef,%eax
    0.00 :   ffffffff89aa8be3:       jne    0xffffffff89aa8c00
    0.00 :   ffffffff89aa8be5:       xor    %eax,%eax
    0.00 :   ffffffff89aa8be7:       xor    %edx,%edx
    0.00 :   ffffffff89aa8be9:       xor    %ecx,%ecx
    0.00 :   ffffffff89aa8beb:       xor    %esi,%esi
    0.00 :   ffffffff89aa8bed:       xor    %edi,%edi
    0.00 :   ffffffff89aa8bef:       xor    %r8d,%r8d
    0.00 :   ffffffff89aa8bf2:       xor    %r9d,%r9d
    0.00 :   ffffffff89aa8bf5:       xor    %r10d,%r10d
    0.00 :   ffffffff89aa8bf8:       xor    %r11d,%r11d
    0.00 :   ffffffff89aa8bfb:       ret
    0.00 :   ffffffff89aa8bfc:       int3
    0.00 :   ffffffff89aa8bfd:       int3
    0.00 :   ffffffff89aa8bfe:       int3
    0.00 :   ffffffff89aa8bff:       int3
    0.00 :   ffffffff89aa8c00:       push   %rbp
    0.00 :   ffffffff89aa8c01:       shr    $0x4,%edi
    0.00 :   ffffffff89aa8c04:       mov    %esi,%esi
    0.00 :   ffffffff89aa8c06:       xor    %edx,%edx
  100.00 :   ffffffff89aa8c08:       add    $0x800,%edi
    0.00 :   ffffffff89aa8c0e:       mov    %rsp,%rbp
    0.00 :   ffffffff89aa8c11:       call   0xffffffff89ab84f0
    0.00 :   ffffffff89aa8c16:       nop
    0.00 :   ffffffff89aa8c17:       pop    %rbp
    0.00 :   ffffffff89aa8c18:       xor    %eax,%eax
    0.00 :   ffffffff89aa8c1a:       xor    %edx,%edx
    0.00 :   ffffffff89aa8c1c:       xor    %ecx,%ecx
    0.00 :   ffffffff89aa8c1e:       xor    %esi,%esi
    0.00 :   ffffffff89aa8c20:       xor    %edi,%edi
    0.00 :   ffffffff89aa8c22:       xor    %r8d,%r8d
    0.00 :   ffffffff89aa8c25:       xor    %r9d,%r9d
    0.00 :   ffffffff89aa8c28:       xor    %r10d,%r10d
    0.00 :   ffffffff89aa8c2b:       xor    %r11d,%r11d
    0.00 :   ffffffff89aa8c2e:       ret
    0.00 :   ffffffff89aa8c2f:       int3
    0.00 :   ffffffff89aa8c30:       int3
    0.00 :   ffffffff89aa8c31:       int3
    0.00 :   ffffffff89aa8c32:       int3
    0.00 :   ffffffff89aa8c33:       data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   ffffffff89aa8c3e:       xchg   %ax,%ax
