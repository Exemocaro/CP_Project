 Percent |	Source code & Disassembly of MDpar.exe for cycles (96871 samples, percent: local period)
--------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002350 <Potential() [clone ._omp_fn.0]>:
         : 6    Potential() [clone ._omp_fn.0]:
    0.00 :   2350:   endbr64
    0.00 :   2354:   push   %rbp
    0.00 :   2355:   mov    %rsp,%rbp
    0.00 :   2358:   push   %r12
    0.00 :   235a:   push   %rbx
    0.00 :   235b:   call   *0x5c8f(%rip)        # 7ff0 <mcount@GLIBC_2.2.5>
    0.00 :   2361:   mov    %rdi,%rbx
    0.00 :   2364:   call   11f0 <omp_get_num_threads@plt>
    0.00 :   2369:   mov    %eax,%r12d
    0.00 :   236c:   call   1290 <omp_get_thread_num@plt>
    0.00 :   2371:   mov    %eax,%ecx
    0.00 :   2373:   mov    $0x1388,%eax
    0.00 :   2378:   cltd
    0.00 :   2379:   idiv   %r12d
    0.00 :   237c:   cmp    %edx,%ecx
    0.00 :   237e:   jl     247b <Potential() [clone ._omp_fn.0]+0x12b>
    0.00 :   2384:   imul   %eax,%ecx
    0.00 :   2387:   pxor   %xmm3,%xmm3
    0.00 :   238b:   add    %ecx,%edx
    0.00 :   238d:   add    %edx,%eax
    0.00 :   238f:   cmp    %eax,%edx
    0.00 :   2391:   jge    245b <Potential() [clone ._omp_fn.0]+0x10b>
    0.00 :   2397:   lea    (%rdx,%rdx,2),%ecx
    0.00 :   239a:   lea    (%rax,%rax,2),%r12d
    0.00 :   239e:   movsd  0x389a(%rip),%xmm4        # 5c40 <_IO_stdin_used+0xc40>
    0.00 :   23a6:   movslq %ecx,%rax
    0.00 :   23a9:   lea    0x5db90(%rip),%rsi        # 5ff40 <r>
    0.00 :   23b0:   lea    0x1(%rcx),%r11d
    0.00 :   23b4:   lea    (%rsi,%rax,8),%rdi
    0.00 :   23b8:   lea    0x2(%rcx),%r10d
    0.00 :   23bc:   nopl   0x0(%rax)
    0.00 :   23c0:   lea    0x5db79(%rip),%rdx        # 5ff40 <r>
    0.00 :   23c7:   xor    %eax,%eax
    0.00 :   23c9:   movslq %r11d,%r9
    0.00 :   23cc:   movslq %r10d,%r8
    0.00 :   23cf:   nop
    5.37 :   23d0:   cmp    %eax,%ecx
    0.00 :   23d2:   je     242e <Potential() [clone ._omp_fn.0]+0xde>
    0.02 :   23d4:   movsd  (%rdi),%xmm0
    0.02 :   23d8:   movsd  (%rsi,%r9,8),%xmm2
    0.12 :   23de:   subsd  (%rdx),%xmm0
    5.38 :   23e2:   subsd  0x8(%rdx),%xmm2
    0.02 :   23e7:   movsd  (%rsi,%r8,8),%xmm1
    0.02 :   23ed:   subsd  0x10(%rdx),%xmm1
    0.11 :   23f2:   mulsd  %xmm2,%xmm2
    5.48 :   23f6:   mulsd  %xmm0,%xmm0
    0.02 :   23fa:   mulsd  %xmm1,%xmm1
    0.01 :   23fe:   addsd  %xmm2,%xmm0
    0.09 :   2402:   addsd  %xmm1,%xmm0
    7.90 :   2406:   movapd %xmm4,%xmm1
    1.82 :   240a:   divsd  %xmm0,%xmm1
    0.00 :   240e:   movapd %xmm1,%xmm2
    3.67 :   2412:   mulsd  %xmm1,%xmm2
   17.69 :   2416:   mulsd  %xmm2,%xmm1
    0.03 :   241a:   movapd %xmm2,%xmm0
    1.82 :   241e:   mulsd  %xmm2,%xmm0
    8.41 :   2422:   mulsd  %xmm2,%xmm0
   20.34 :   2426:   subsd  %xmm1,%xmm0
   21.52 :   242a:   addsd  %xmm0,%xmm3
    0.06 :   242e:   add    $0x3,%eax
    0.00 :   2431:   add    $0x18,%rdx
    0.00 :   2435:   cmp    $0x3a98,%eax
    0.08 :   243a:   jne    23d0 <Potential() [clone ._omp_fn.0]+0x80>
    0.00 :   243c:   add    $0x3,%ecx
    0.00 :   243f:   add    $0x18,%rdi
    0.00 :   2443:   add    $0x3,%r11d
    0.00 :   2447:   add    $0x3,%r10d
    0.00 :   244b:   cmp    %ecx,%r12d
    0.00 :   244e:   jg     23c0 <Potential() [clone ._omp_fn.0]+0x70>
    0.00 :   2454:   movl   $0x3a98,0x8(%rbx)
    0.00 :   245b:   mov    (%rbx),%rdx
    0.00 :   245e:   movq   %rdx,%xmm5
    0.00 :   2463:   mov    %rdx,%rax
    0.00 :   2466:   addsd  %xmm3,%xmm5
    0.00 :   246a:   movq   %xmm5,%rcx
    0.00 :   246f:   lock cmpxchg %rcx,(%rbx)
    0.00 :   2474:   jne    2485 <Potential() [clone ._omp_fn.0]+0x135>
    0.00 :   2476:   pop    %rbx
    0.00 :   2477:   pop    %r12
    0.00 :   2479:   pop    %rbp
    0.00 :   247a:   ret
    0.00 :   247b:   add    $0x1,%eax
    0.00 :   247e:   xor    %edx,%edx
    0.00 :   2480:   jmp    2384 <Potential() [clone ._omp_fn.0]+0x34>
    0.00 :   2485:   mov    %rax,%rdx
    0.00 :   2488:   jmp    245e <Potential() [clone ._omp_fn.0]+0x10e>
